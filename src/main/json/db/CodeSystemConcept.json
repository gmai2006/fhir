{
  "className": "CodeSystemConcept",
  "type": "OBJECT",
  "descr": "\"A code system resource specifies a set of codes drawn from one or more code systems.\"",
  "isInnerClass": true,
  "autoIncrement": true,
  "fields": [
    {
      "name": "code",
      "descr": "\"A code - a text symbol - that uniquely identifies the concept within the code system.\"",
      "typeName": "string",
      "isArray": false,
      "pattern": "\"[^\\\\s]+([\\\\s]?[^\\\\s]+)*\"",
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "display",
      "descr": "\"A human readable string that is the recommended default way to present this concept to a user.\"",
      "typeName": "string",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "definition",
      "descr": "\"The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.\"",
      "typeName": "string",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "modifierExtension",
      "descr": "\"May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\"\n derived from BackboneElement",
      "typeName": "Extension",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "complex",
      "autoGenerated": false
    },
    {
      "name": "id",
      "descr": "\"unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.\"\n derived from Element\n derived from BackboneElement",
      "typeName": "string",
      "isArray": false,
      "isRequired": true,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "extension",
      "descr": "\"May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.\"\n derived from Element\n derived from BackboneElement",
      "typeName": "Extension",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "complex",
      "autoGenerated": false
    },
    {
      "name": "parent_id",
      "typeName": "string",
      "isArray": false,
      "isRequired": true,
      "size": 64,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "designation_id",
      "typeName": "string",
      "isArray": false,
      "isRequired": false,
      "size": 64,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "property_id",
      "typeName": "string",
      "isArray": false,
      "isRequired": false,
      "size": 64,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "concept_id",
      "typeName": "string",
      "isArray": false,
      "isRequired": false,
      "size": 64,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    }
  ]
}