{
  "className": "ReferralRequest",
  "type": "OBJECT",
  "descr": "\"Used to record and send details about a request for referral service or transfer of a patient to the care of another provider or provider organization.\"",
  "isInnerClass": false,
  "autoIncrement": false,
  "fields": [
    {
      "name": "resourceType",
      "descr": "\"This is a ReferralRequest resource\"",
      "typeName": "string",
      "enums": [
        "ReferralRequest"
      ],
      "isArray": false,
      "isRequired": true,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "identifier",
      "descr": "\"Business identifier that uniquely identifies the referral/care transfer request instance.\"",
      "typeName": "Identifier",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "definition",
      "descr": "\"A protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.\"",
      "typeName": "Reference",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECTARRAY",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "basedOn",
      "descr": "\"Indicates any plans, proposals or orders that this request is intended to satisfy - in whole or in part.\"",
      "typeName": "Reference",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECTARRAY",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "replaces",
      "descr": "\"Completed or terminated request(s) whose function is taken by this new request.\"",
      "typeName": "Reference",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECTARRAY",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "groupIdentifier",
      "descr": "\"The business identifier of the logical \\\"grouping\\\" request/order that this referral is a part of.\"",
      "typeName": "Identifier",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "status",
      "descr": "\"The status of the authorization/intention reflected by the referral request record.\"",
      "typeName": "string",
      "isArray": false,
      "pattern": "\"[^\\\\s]+([\\\\s]?[^\\\\s]+)*\"",
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "intent",
      "descr": "\"Distinguishes the \\\"level\\\" of authorization/demand implicit in this request.\"",
      "typeName": "string",
      "isArray": false,
      "pattern": "\"[^\\\\s]+([\\\\s]?[^\\\\s]+)*\"",
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "type",
      "descr": "\"An indication of the type of referral (or where applicable the type of transfer of care) request.\"",
      "typeName": "CodeableConcept",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "priority",
      "descr": "\"An indication of the urgency of referral (or where applicable the type of transfer of care) request.\"",
      "typeName": "string",
      "isArray": false,
      "pattern": "\"[^\\\\s]+([\\\\s]?[^\\\\s]+)*\"",
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "serviceRequested",
      "descr": "\"The service(s) that is/are requested to be provided to the patient.  For example: cardiac pacemaker insertion.\"",
      "typeName": "CodeableConcept",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "subject",
      "descr": "\"The patient who is the subject of a referral or transfer of care request.\"",
      "typeName": "Reference",
      "isArray": false,
      "isRequired": true,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECT",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "context",
      "descr": "\"The encounter at which the request for referral or transfer of care is initiated.\"",
      "typeName": "Reference",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECT",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "occurrenceDateTime",
      "descr": "\"The period of time within which the services identified in the referral/transfer of care is specified or required to occur.\"",
      "typeName": "string",
      "isArray": false,
      "pattern": "\"-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\\\.[0-9]+)?(Z|(\\\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?\"",
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "occurrencePeriod",
      "descr": "\"The period of time within which the services identified in the referral/transfer of care is specified or required to occur.\"",
      "typeName": "Period",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "authoredOn",
      "descr": "\"Date/DateTime of creation for draft requests and date of activation for active requests.\"",
      "typeName": "string",
      "isArray": false,
      "pattern": "\"-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\\\.[0-9]+)?(Z|(\\\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?\"",
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "requester",
      "descr": "\"The individual who initiated the request and has responsibility for its activation.\"",
      "typeName": "ReferralRequestRequester",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECT",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "ReferralRequestRequester",
      "autoGenerated": false
    },
    {
      "name": "specialty",
      "descr": "\"Indication of the clinical domain or discipline to which the referral or transfer of care request is sent.  For example: Cardiology Gastroenterology Diabetology.\"",
      "typeName": "CodeableConcept",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "recipient",
      "descr": "\"The healthcare provider(s) or provider organization(s) who/which is to receive the referral/transfer of care request.\"",
      "typeName": "Reference",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECTARRAY",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "reasonCode",
      "descr": "\"Description of clinical condition indicating why referral/transfer of care is requested.  For example:  Pathological Anomalies, Disabled (physical or mental),  Behavioral Management.\"",
      "typeName": "CodeableConcept",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "reasonReference",
      "descr": "\"Indicates another resource whose existence justifies this request.\"",
      "typeName": "Reference",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECTARRAY",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "description",
      "descr": "\"The reason element gives a short description of why the referral is being made, the description expands on this to support a more complete clinical summary.\"",
      "typeName": "string",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "supportingInfo",
      "descr": "\"Any additional (administrative, financial or clinical) information required to support request for referral or transfer of care.  For example: Presenting problems/chief complaints Medical History Family History Alerts Allergy/Intolerance and Adverse Reactions Medications Observations/Assessments (may include cognitive and fundtional assessments) Diagnostic Reports Care Plan.\"",
      "typeName": "Reference",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECTARRAY",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "note",
      "descr": "\"Comments made about the referral request by any of the participants.\"",
      "typeName": "Annotation",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "relevantHistory",
      "descr": "\"Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource.\"",
      "typeName": "Reference",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECTARRAY",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Reference",
      "autoGenerated": false
    },
    {
      "name": "text",
      "descr": "\"A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \\\"clinically safe\\\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.\"\n derived from DomainResource",
      "typeName": "Narrative",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECT",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Narrative",
      "autoGenerated": false
    },
    {
      "name": "contained",
      "descr": "\"These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.\"\n derived from DomainResource",
      "typeName": "ResourceList",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "extension",
      "descr": "\"May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.\"\n derived from DomainResource",
      "typeName": "Extension",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "modifierExtension",
      "descr": "\"May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\"\n derived from DomainResource",
      "typeName": "Extension",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEXARRAY",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "id",
      "descr": "\"The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.\"\n derived from Resource\n derived from DomainResource",
      "typeName": "string",
      "isArray": false,
      "pattern": "\"[A-Za-z0-9\\\\-\\\\.]{1,64}\"",
      "isRequired": true,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "meta",
      "descr": "\"The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.\"\n derived from Resource\n derived from DomainResource",
      "typeName": "Meta",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "OBJECT",
      "entityType": "OBJECTARRAY",
      "entityTypeName": "Meta",
      "autoGenerated": false
    },
    {
      "name": "implicitRules",
      "descr": "\"A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.\"\n derived from Resource\n derived from DomainResource",
      "typeName": "string",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    },
    {
      "name": "language",
      "descr": "\"The base language in which the resource is written.\"\n derived from Resource\n derived from DomainResource",
      "typeName": "string",
      "isArray": false,
      "pattern": "\"[^\\\\s]+([\\\\s]?[^\\\\s]+)*\"",
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE",
      "entityType": "PRIMITIVE",
      "entityTypeName": "string",
      "autoGenerated": false
    }
  ],
  "searches": [
    {
      "name": "patient",
      "descr": "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n",
      "type": "reference",
      "expression": "ReferralRequest.subject | DocumentManifest.subject | Goal.subject | Consent.patient | DocumentReference.subject | ImagingManifest.patient | RiskAssessment.subject | CareTeam.subject | ImagingStudy.patient | FamilyMemberHistory.patient | Encounter.subject | DeviceUseStatement.subject | DeviceRequest.subject | AllergyIntolerance.patient | CarePlan.subject | EpisodeOfCare.patient | Procedure.subject | List.subject | Immunization.patient | VisionPrescription.patient | ProcedureRequest.subject | Flag.subject | Observation.subject | DiagnosticReport.subject | NutritionOrder.patient | Condition.subject | Composition.subject | DetectedIssue.patient | SupplyDelivery.patient | ClinicalImpression.subject",
      "code": "patient",
      "xpath": "subject | DocumentManifest/subject | Goal/subject | Consent/patient | DocumentReference/subject | ImagingManifest/patient | RiskAssessment/subject | CareTeam/subject | ImagingStudy/patient | FamilyMemberHistory/patient | Encounter/subject | DeviceUseStatement/subject | DeviceRequest/subject | AllergyIntolerance/patient | CarePlan/subject | EpisodeOfCare/patient | Procedure/subject | List/subject | Immunization/patient | VisionPrescription/patient | ProcedureRequest/subject | Flag/subject | Observation/subject | DiagnosticReport/subject | NutritionOrder/patient | Condition/subject | Composition/subject | DetectedIssue/patient | SupplyDelivery/patient | ClinicalImpression/subject"
    },
    {
      "name": "type",
      "descr": "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)\r\n",
      "type": "token",
      "expression": "ReferralRequest.type | DocumentManifest.type | DocumentReference.type | Encounter.type | AllergyIntolerance.type | EpisodeOfCare.type | Composition.type",
      "code": "type",
      "xpath": "type | DocumentManifest/type | DocumentReference/type | Encounter/type | AllergyIntolerance/type | EpisodeOfCare/type | Composition/type"
    },
    {
      "name": "authoredon",
      "descr": "Creation or activation date",
      "type": "date",
      "expression": "ReferralRequest.authoredOn",
      "code": "authoredon",
      "xpath": "authoredOn"
    },
    {
      "name": "basedon",
      "descr": "Request being fulfilled",
      "type": "reference",
      "expression": "ReferralRequest.basedOn",
      "code": "basedon",
      "xpath": "basedOn"
    },
    {
      "name": "context",
      "descr": "Part of encounter or episode of care",
      "type": "reference",
      "expression": "ReferralRequest.context",
      "code": "context",
      "xpath": "context"
    },
    {
      "name": "definition",
      "descr": "Instantiates protocol or definition",
      "type": "reference",
      "expression": "ReferralRequest.definition",
      "code": "definition",
      "xpath": "definition"
    },
    {
      "name": "encounter",
      "descr": "Originating encounter",
      "type": "reference",
      "expression": "ReferralRequest.context",
      "code": "encounter",
      "xpath": "context"
    },
    {
      "name": "groupidentifier",
      "descr": "Part of common request",
      "type": "token",
      "expression": "ReferralRequest.groupIdentifier",
      "code": "groupidentifier",
      "xpath": "groupIdentifier"
    },
    {
      "name": "identifier",
      "descr": "Business identifier",
      "type": "token",
      "expression": "ReferralRequest.identifier",
      "code": "identifier",
      "xpath": "identifier"
    },
    {
      "name": "intent",
      "descr": "Proposal, plan or order",
      "type": "token",
      "expression": "ReferralRequest.intent",
      "code": "intent",
      "xpath": "intent"
    },
    {
      "name": "occurrencedate",
      "descr": "When the service(s) requested in the referral should occur",
      "type": "date",
      "expression": "ReferralRequest.occurrence",
      "code": "occurrencedate",
      "xpath": "occurrenceDateTime | occurrencePeriod"
    },
    {
      "name": "priority",
      "descr": "The priority assigned to the referral",
      "type": "token",
      "expression": "ReferralRequest.priority",
      "code": "priority",
      "xpath": "priority"
    },
    {
      "name": "recipient",
      "descr": "The person that the referral was sent to",
      "type": "reference",
      "expression": "ReferralRequest.recipient",
      "code": "recipient",
      "xpath": "recipient"
    },
    {
      "name": "replaces",
      "descr": "Request(s) replaced by this request",
      "type": "reference",
      "expression": "ReferralRequest.replaces",
      "code": "replaces",
      "xpath": "replaces"
    },
    {
      "name": "requester",
      "descr": "Individual making the request",
      "type": "reference",
      "expression": "ReferralRequest.requester.agent",
      "code": "requester",
      "xpath": "requester/agent"
    },
    {
      "name": "service",
      "descr": "Actions requested as part of the referral",
      "type": "token",
      "expression": "ReferralRequest.serviceRequested",
      "code": "service",
      "xpath": "serviceRequested"
    },
    {
      "name": "specialty",
      "descr": "The specialty that the referral is for",
      "type": "token",
      "expression": "ReferralRequest.specialty",
      "code": "specialty",
      "xpath": "specialty"
    },
    {
      "name": "status",
      "descr": "The status of the referral",
      "type": "token",
      "expression": "ReferralRequest.status",
      "code": "status",
      "xpath": "status"
    },
    {
      "name": "subject",
      "descr": "Patient referred to care or transfer",
      "type": "reference",
      "expression": "ReferralRequest.subject",
      "code": "subject",
      "xpath": "subject"
    }
  ]
}