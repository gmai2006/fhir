{
  "className": "NutritionOrderAdministration",
  "type": "OBJECT",
  "descr": "\"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.\"",
  "isInnerClass": true,
  "fields": [
    {
      "name": "schedule",
      "descr": "\"The time period and frequency at which the enteral formula should be delivered to the patient.\"",
      "typeName": "Timing",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX"
    },
    {
      "name": "quantity",
      "descr": "\"The volume of formula to provide to the patient per the specified administration schedule.\"",
      "typeName": "Quantity",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX"
    },
    {
      "name": "rateSimpleQuantity",
      "descr": "\"The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.\"",
      "typeName": "Quantity",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX"
    },
    {
      "name": "rateRatio",
      "descr": "\"The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.\"",
      "typeName": "Ratio",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX"
    },
    {
      "name": "modifierExtension",
      "descr": "\"May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\"\n derived from BackboneElement",
      "typeName": "Extension",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX"
    },
    {
      "name": "id",
      "descr": "\"unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.\"\n derived from Element\n derived from BackboneElement",
      "typeName": "string",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "PRIMITIVE"
    },
    {
      "name": "_id",
      "descr": "\"Extensions for id\"\n derived from Element\n derived from BackboneElement",
      "typeName": "Element",
      "isArray": false,
      "isRequired": false,
      "size": 1024,
      "isTransient": true,
      "type": "COMPLEX"
    },
    {
      "name": "extension",
      "descr": "\"May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.\"\n derived from Element\n derived from BackboneElement",
      "typeName": "Extension",
      "isArray": true,
      "isRequired": false,
      "size": 1024,
      "isTransient": false,
      "type": "COMPLEX"
    }
  ]
}