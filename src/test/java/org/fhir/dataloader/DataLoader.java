package org.fhir.dataloader;

import static org.junit.Assert.*;

import java.nio.charset.Charset;
import java.util.Arrays;
import java.util.List;

import org.fhir.dao.*;
import org.fhir.pojo.*;
import org.fhir.utils.FileUtils;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import com.google.inject.AbstractModule;
import com.google.inject.Guice;
import com.google.inject.Inject;
import com.google.inject.Injector;
import com.google.inject.Module;
import com.google.inject.persist.PersistService;
import com.google.inject.persist.jpa.JpaPersistModule;
import org.fhir.dao.*;

/* *
 * Auto generated from the FHIR samples-json
 * Test read json from json file and convert to coresponding Java class
 * testing data are extracted from the json files
 */
public class DataLoader {
	static Injector injector;
  static PersistService service;
	String inputFile;
  String json;
  Object result;
  static int count = 0;
  java.util.Map<String, String> duplicates = new java.util.HashMap<>();

 @Inject AppointmentDaoImpl appointmentDao; 
 @Inject AccountDaoImpl accountDao; 
 @Inject ReferralRequestDaoImpl referralrequestDao; 
 @Inject MessageDefinitionDaoImpl messagedefinitionDao; 
 @Inject DocumentManifestDaoImpl documentmanifestDao; 
 @Inject GoalDaoImpl goalDao; 
 @Inject EndpointDaoImpl endpointDao; 
 @Inject EnrollmentRequestDaoImpl enrollmentrequestDao; 
 @Inject ConsentDaoImpl consentDao; 
 @Inject MedicationDaoImpl medicationDao; 
 @Inject MeasureDaoImpl measureDao; 
 @Inject CapabilityStatementDaoImpl capabilitystatementDao; 
 @Inject ResearchSubjectDaoImpl researchsubjectDao; 
 @Inject SubscriptionDaoImpl subscriptionDao; 
 @Inject GraphDefinitionDaoImpl graphdefinitionDao; 
 @Inject DocumentReferenceDaoImpl documentreferenceDao; 
 @Inject ImagingManifestDaoImpl imagingmanifestDao; 
 @Inject FHIRListDaoImpl fhirlistDao; 
 @Inject MeasureReportDaoImpl measurereportDao; 
 @Inject PractitionerRoleDaoImpl practitionerroleDao; 
 @Inject RelatedPersonDaoImpl relatedpersonDao; 
 @Inject SupplyRequestDaoImpl supplyrequestDao; 
 @Inject PractitionerDaoImpl practitionerDao; 
 @Inject ExpansionProfileDaoImpl expansionprofileDao; 
 @Inject SlotDaoImpl slotDao; 
 @Inject ContractDaoImpl contractDao; 
 @Inject PersonDaoImpl personDao; 
 @Inject RiskAssessmentDaoImpl riskassessmentDao; 
 @Inject PaymentNoticeDaoImpl paymentnoticeDao; 
 @Inject GroupDaoImpl groupDao; 
 @Inject OrganizationDaoImpl organizationDao; 
 @Inject CareTeamDaoImpl careteamDao; 
 @Inject ImplementationGuideDaoImpl implementationguideDao; 
 @Inject ImagingStudyDaoImpl imagingstudyDao; 
 @Inject DeviceComponentDaoImpl devicecomponentDao; 
 @Inject FamilyMemberHistoryDaoImpl familymemberhistoryDao; 
 @Inject ChargeItemDaoImpl chargeitemDao; 
 @Inject SubstanceDaoImpl substanceDao; 
 @Inject EncounterDaoImpl encounterDao; 
 @Inject SearchParameterDaoImpl searchparameterDao; 
 @Inject ServiceDefinitionDaoImpl servicedefinitionDao; 
 @Inject ActivityDefinitionDaoImpl activitydefinitionDao; 
 @Inject CommunicationDaoImpl communicationDao; 
 @Inject LinkageDaoImpl linkageDao; 
 @Inject DeviceUseStatementDaoImpl deviceusestatementDao; 
 @Inject RequestGroupDaoImpl requestgroupDao; 
 @Inject DeviceRequestDaoImpl devicerequestDao; 
 @Inject MessageHeaderDaoImpl messageheaderDao; 
 @Inject ImmunizationRecommendationDaoImpl immunizationrecommendationDao; 
 @Inject BodySiteDaoImpl bodysiteDao; 
 @Inject ProvenanceDaoImpl provenanceDao; 
 @Inject TaskDaoImpl taskDao; 
 @Inject QuestionnaireDaoImpl questionnaireDao; 
 @Inject ExplanationOfBenefitDaoImpl explanationofbenefitDao; 
 @Inject ResearchStudyDaoImpl researchstudyDao; 
 @Inject SpecimenDaoImpl specimenDao; 
 @Inject StructureDefinitionDaoImpl structuredefinitionDao; 
 @Inject CarePlanDaoImpl careplanDao; 
 @Inject AllergyIntoleranceDaoImpl allergyintoleranceDao; 
 @Inject EpisodeOfCareDaoImpl episodeofcareDao; 
 @Inject ProcedureDaoImpl procedureDao; 
 @Inject ConceptMapDaoImpl conceptmapDao; 
 @Inject ValueSetDaoImpl valuesetDao; 
 @Inject OperationDefinitionDaoImpl operationdefinitionDao; 
 @Inject MedicationRequestDaoImpl medicationrequestDao; 
 @Inject ImmunizationDaoImpl immunizationDao; 
 @Inject DeviceDaoImpl deviceDao; 
 @Inject VisionPrescriptionDaoImpl visionprescriptionDao; 
 @Inject MediaDaoImpl mediaDao; 
 @Inject ProcedureRequestDaoImpl procedurerequestDao; 
 @Inject EligibilityResponseDaoImpl eligibilityresponseDao; 
 @Inject SequenceDaoImpl sequenceDao; 
 @Inject DeviceMetricDaoImpl devicemetricDao; 
 @Inject CodeSystemDaoImpl codesystemDao; 
 @Inject FlagDaoImpl flagDao; 
 @Inject AppointmentResponseDaoImpl appointmentresponseDao; 
 @Inject StructureMapDaoImpl structuremapDao; 
 @Inject AdverseEventDaoImpl adverseeventDao; 
 @Inject GuidanceResponseDaoImpl guidanceresponseDao; 
 @Inject ObservationDaoImpl observationDao; 
 @Inject MedicationAdministrationDaoImpl medicationadministrationDao; 
 @Inject EnrollmentResponseDaoImpl enrollmentresponseDao; 
 @Inject LibraryDaoImpl libraryDao; 
 @Inject BinaryDaoImpl binaryDao; 
 @Inject MedicationStatementDaoImpl medicationstatementDao; 
 @Inject CommunicationRequestDaoImpl communicationrequestDao; 
 @Inject TestScriptDaoImpl testscriptDao; 
 @Inject BasicDaoImpl basicDao; 
 @Inject TestReportDaoImpl testreportDao; 
 @Inject ProcessRequestDaoImpl processrequestDao; 
 @Inject EligibilityRequestDaoImpl eligibilityrequestDao; 
 @Inject ClaimResponseDaoImpl claimresponseDao; 
 @Inject MedicationDispenseDaoImpl medicationdispenseDao; 
 @Inject DiagnosticReportDaoImpl diagnosticreportDao; 
 @Inject HealthcareServiceDaoImpl healthcareserviceDao; 
 @Inject DataElementDaoImpl dataelementDao; 
 @Inject NutritionOrderDaoImpl nutritionorderDao; 
 @Inject AuditEventDaoImpl auditeventDao; 
 @Inject PaymentReconciliationDaoImpl paymentreconciliationDao; 
 @Inject ConditionDaoImpl conditionDao; 
 @Inject CompositionDaoImpl compositionDao; 
 @Inject DetectedIssueDaoImpl detectedissueDao; 
 @Inject BundleDaoImpl bundleDao; 
 @Inject CompartmentDefinitionDaoImpl compartmentdefinitionDao; 
 @Inject PatientDaoImpl patientDao; 
 @Inject CoverageDaoImpl coverageDao; 
 @Inject QuestionnaireResponseDaoImpl questionnaireresponseDao; 
 @Inject ProcessResponseDaoImpl processresponseDao; 
 @Inject NamingSystemDaoImpl namingsystemDao; 
 @Inject ScheduleDaoImpl scheduleDao; 
 @Inject SupplyDeliveryDaoImpl supplydeliveryDao; 
 @Inject ClinicalImpressionDaoImpl clinicalimpressionDao; 
 @Inject PlanDefinitionDaoImpl plandefinitionDao; 
 @Inject ClaimDaoImpl claimDao; 
 @Inject LocationDaoImpl locationDao; 

 protected List<Module> getModules() {
 	return Arrays.asList(new AbstractModule() {
     @Override
     protected void configure() {
       install(new JpaPersistModule("fhirtest"));
       final Module testModule = getTestModule();
       if (null != testModule) {
           install(testModule);
       }
     }
   });
 }

  protected Module getTestModule() {
    return new AbstractModule() {
        @Override
        protected void configure() {
            bind(AppointmentDaoImpl.class);
            bind(AccountDaoImpl.class);
            bind(ReferralRequestDaoImpl.class);
            bind(MessageDefinitionDaoImpl.class);
            bind(DocumentManifestDaoImpl.class);
            bind(GoalDaoImpl.class);
            bind(EndpointDaoImpl.class);
            bind(EnrollmentRequestDaoImpl.class);
            bind(ConsentDaoImpl.class);
            bind(MedicationDaoImpl.class);
            bind(MeasureDaoImpl.class);
            bind(CapabilityStatementDaoImpl.class);
            bind(ResearchSubjectDaoImpl.class);
            bind(SubscriptionDaoImpl.class);
            bind(GraphDefinitionDaoImpl.class);
            bind(DocumentReferenceDaoImpl.class);
            bind(ImagingManifestDaoImpl.class);
            bind(FHIRListDaoImpl.class);
            bind(MeasureReportDaoImpl.class);
            bind(PractitionerRoleDaoImpl.class);
            bind(RelatedPersonDaoImpl.class);
            bind(SupplyRequestDaoImpl.class);
            bind(PractitionerDaoImpl.class);
            bind(ExpansionProfileDaoImpl.class);
            bind(SlotDaoImpl.class);
            bind(ContractDaoImpl.class);
            bind(PersonDaoImpl.class);
            bind(RiskAssessmentDaoImpl.class);
            bind(PaymentNoticeDaoImpl.class);
            bind(GroupDaoImpl.class);
            bind(OrganizationDaoImpl.class);
            bind(CareTeamDaoImpl.class);
            bind(ImplementationGuideDaoImpl.class);
            bind(ImagingStudyDaoImpl.class);
            bind(DeviceComponentDaoImpl.class);
            bind(FamilyMemberHistoryDaoImpl.class);
            bind(ChargeItemDaoImpl.class);
            bind(SubstanceDaoImpl.class);
            bind(EncounterDaoImpl.class);
            bind(SearchParameterDaoImpl.class);
            bind(ServiceDefinitionDaoImpl.class);
            bind(ActivityDefinitionDaoImpl.class);
            bind(CommunicationDaoImpl.class);
            bind(LinkageDaoImpl.class);
            bind(DeviceUseStatementDaoImpl.class);
            bind(RequestGroupDaoImpl.class);
            bind(DeviceRequestDaoImpl.class);
            bind(MessageHeaderDaoImpl.class);
            bind(ImmunizationRecommendationDaoImpl.class);
            bind(BodySiteDaoImpl.class);
            bind(ProvenanceDaoImpl.class);
            bind(TaskDaoImpl.class);
            bind(QuestionnaireDaoImpl.class);
            bind(ExplanationOfBenefitDaoImpl.class);
            bind(ResearchStudyDaoImpl.class);
            bind(SpecimenDaoImpl.class);
            bind(StructureDefinitionDaoImpl.class);
            bind(CarePlanDaoImpl.class);
            bind(AllergyIntoleranceDaoImpl.class);
            bind(EpisodeOfCareDaoImpl.class);
            bind(ProcedureDaoImpl.class);
            bind(ConceptMapDaoImpl.class);
            bind(ValueSetDaoImpl.class);
            bind(OperationDefinitionDaoImpl.class);
            bind(MedicationRequestDaoImpl.class);
            bind(ImmunizationDaoImpl.class);
            bind(DeviceDaoImpl.class);
            bind(VisionPrescriptionDaoImpl.class);
            bind(MediaDaoImpl.class);
            bind(ProcedureRequestDaoImpl.class);
            bind(EligibilityResponseDaoImpl.class);
            bind(SequenceDaoImpl.class);
            bind(DeviceMetricDaoImpl.class);
            bind(CodeSystemDaoImpl.class);
            bind(FlagDaoImpl.class);
            bind(AppointmentResponseDaoImpl.class);
            bind(StructureMapDaoImpl.class);
            bind(AdverseEventDaoImpl.class);
            bind(GuidanceResponseDaoImpl.class);
            bind(ObservationDaoImpl.class);
            bind(MedicationAdministrationDaoImpl.class);
            bind(EnrollmentResponseDaoImpl.class);
            bind(LibraryDaoImpl.class);
            bind(BinaryDaoImpl.class);
            bind(MedicationStatementDaoImpl.class);
            bind(CommunicationRequestDaoImpl.class);
            bind(TestScriptDaoImpl.class);
            bind(BasicDaoImpl.class);
            bind(TestReportDaoImpl.class);
            bind(ProcessRequestDaoImpl.class);
            bind(EligibilityRequestDaoImpl.class);
            bind(ClaimResponseDaoImpl.class);
            bind(MedicationDispenseDaoImpl.class);
            bind(DiagnosticReportDaoImpl.class);
            bind(HealthcareServiceDaoImpl.class);
            bind(DataElementDaoImpl.class);
            bind(NutritionOrderDaoImpl.class);
            bind(AuditEventDaoImpl.class);
            bind(PaymentReconciliationDaoImpl.class);
            bind(ConditionDaoImpl.class);
            bind(CompositionDaoImpl.class);
            bind(DetectedIssueDaoImpl.class);
            bind(BundleDaoImpl.class);
            bind(CompartmentDefinitionDaoImpl.class);
            bind(PatientDaoImpl.class);
            bind(CoverageDaoImpl.class);
            bind(QuestionnaireResponseDaoImpl.class);
            bind(ProcessResponseDaoImpl.class);
            bind(NamingSystemDaoImpl.class);
            bind(ScheduleDaoImpl.class);
            bind(SupplyDeliveryDaoImpl.class);
            bind(ClinicalImpressionDaoImpl.class);
            bind(PlanDefinitionDaoImpl.class);
            bind(ClaimDaoImpl.class);
            bind(LocationDaoImpl.class);
        }
    };
  }

  @Before
  public void setup() {
    final List<Module> modules = getModules();
    injector = Guice.createInjector(modules);
    service = injector.getInstance(PersistService.class);
    injector.injectMembers(this);
    service.start();
  }

  @After
  public void tearDownJpa() throws Exception {
    service.stop();
  }

  @Test
  public void test0() throws Exception {
  	System.out.println("Total tests .. " + count);
  }
  @Test
  public void test310() throws Exception {
  	 inputFile = "../../fhir-data/examples-json/sequence-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/hdlcholesterol.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/hdlcholesterol.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-example-fda-vcfeval.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-example-fda-vcfeval.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunization-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/immunization-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-familymemberhistory-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-familymemberhistory-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-signer-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-signer-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example-allergies.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example-allergies.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-pureeddiet.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-pureeddiet.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careteam-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/careteam-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operationoutcome-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/operationoutcome-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f002-pv.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f002-pv.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityresponse.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/eligibilityresponse.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/hlaresult.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/hlaresult.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/familymemberhistory-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/familymemberhistory-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measure.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/measure.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-parameter-group.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-parameter-group.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-device-statement-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-device-statement-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-structuremap-transform.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-structuremap-transform.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/v2-tables.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/v2-tables.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-examples-general.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/diagnosticreport-examples-general.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-postbox.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-postbox.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/searchparameter.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/searchparameter.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodytemp.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/bodytemp.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodyweight-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/bodyweight-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-location-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-location-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-content-derivative.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-content-derivative.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-additional-instruction-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-additional-instruction-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0315.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0315.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0308.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0308.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/subscription-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/subscription-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/condition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-search-entry-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-search-entry-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-all-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-all-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-provide-mosquito-prevention-advice.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-provide-mosquito-prevention-advice.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicemetricobservation.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/devicemetricobservation.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaire-example-bluebook.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/questionnaire-example-bluebook.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-relationshiptypes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-relationshiptypes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0306.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0306.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-surface.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-surface.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodyweight.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/bodyweight.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-clinical-findings.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-clinical-findings.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/plandefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/familymemberhistory-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FamilyMemberHistoryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FamilyMemberHistory)result).getId())) {
  		 duplicates.put(((FamilyMemberHistory)result).getId(), ((FamilyMemberHistory)result).getId());
  	 } else {
  		 ((FamilyMemberHistory)result).setId(((FamilyMemberHistory)result).getId() + count);
  		 duplicates.put(((FamilyMemberHistory)result).getId(), ((FamilyMemberHistory)result).getId());
  		 //System.out.println("Found duplicate in ... FamilyMemberHistory " + count++);
  	 }
  	 try {
  		 familymemberhistoryDao.create((FamilyMemberHistory)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FamilyMemberHistory : ../../fhir-data/examples-json/familymemberhistory-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-composition-document.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-composition-document.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-auditevent-anonymized.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-auditevent-anonymized.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-capabilitystatement-conforms.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-capabilitystatement-conforms.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-entformula-additive.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-entformula-additive.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/clinicalimpression.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/clinicalimpression.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-bestpractice.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-bestpractice.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/linkage.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/linkage.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-humanname-own-prefix.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-humanname-own-prefix.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/audit-event-example-pixQuery.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AuditEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AuditEvent)result).getId())) {
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  	 } else {
  		 ((AuditEvent)result).setId(((AuditEvent)result).getId() + count);
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AuditEvent " + count++);
  	 }
  	 try {
  		 auditeventDao.create((AuditEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AuditEvent : ../../fhir-data/examples-json/audit-event-example-pixQuery.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careteam.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/careteam.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/claim-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-pgx.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-pgx.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-medication-statement-status-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-medication-statement-status-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/resource.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/resource.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coord-0base-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/coord-0base-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-ex-diagnosistype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-ex-diagnosistype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-missing-tooth-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-missing-tooth-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-list-item-flag.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-list-item-flag.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-participationstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-participationstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-bodysite-relative-location.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-bodysite-relative-location.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-translation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-translation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/metadataresource.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/metadataresource.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/researchsubject.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/researchsubject.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0328.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0328.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/visionprescription-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = VisionPrescriptionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((VisionPrescription)result).getId())) {
  		 duplicates.put(((VisionPrescription)result).getId(), ((VisionPrescription)result).getId());
  	 } else {
  		 ((VisionPrescription)result).setId(((VisionPrescription)result).getId() + count);
  		 duplicates.put(((VisionPrescription)result).getId(), ((VisionPrescription)result).getId());
  		 //System.out.println("Found duplicate in ... VisionPrescription " + count++);
  	 }
  	 try {
  		 visionprescriptionDao.create((VisionPrescription)result);
  	 } catch (Exception ex) { System.err.println("Cannot save VisionPrescription : ../../fhir-data/examples-json/visionprescription-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-mmanu.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-mmanu.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-f202-malignancy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-f202-malignancy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsdnaregionname.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsdnaregionname.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-testscript-operation-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-testscript-operation-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-graphic-example-2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-graphic-example-2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-goal-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-goal-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunizationrecommendation-target-disease-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImmunizationRecommendationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ImmunizationRecommendation)result).getId())) {
  		 duplicates.put(((ImmunizationRecommendation)result).getId(), ((ImmunizationRecommendation)result).getId());
  	 } else {
  		 ((ImmunizationRecommendation)result).setId(((ImmunizationRecommendation)result).getId() + count);
  		 duplicates.put(((ImmunizationRecommendation)result).getId(), ((ImmunizationRecommendation)result).getId());
  		 //System.out.println("Found duplicate in ... ImmunizationRecommendation " + count++);
  	 }
  	 try {
  		 immunizationrecommendationDao.create((ImmunizationRecommendation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ImmunizationRecommendation : ../../fhir-data/examples-json/immunizationrecommendation-target-disease-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-biopsy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-biopsy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/conceptmap-example-specimen-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/conceptmap-example-specimen-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/supplyrequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/supplyrequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunizationrecommendation.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/immunizationrecommendation.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-operation-parameter-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-operation-parameter-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodysite-example-skin-patch.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BodySiteHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((BodySite)result).getId())) {
  		 duplicates.put(((BodySite)result).getId(), ((BodySite)result).getId());
  	 } else {
  		 ((BodySite)result).setId(((BodySite)result).getId() + count);
  		 duplicates.put(((BodySite)result).getId(), ((BodySite)result).getId());
  		 //System.out.println("Found duplicate in ... BodySite " + count++);
  	 }
  	 try {
  		 bodysiteDao.create((BodySite)result);
  	 } catch (Exception ex) { System.err.println("Cannot save BodySite : ../../fhir-data/examples-json/bodysite-example-skin-patch.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-digital-media-subtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-digital-media-subtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/healthcareservice-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/healthcareservice-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-audit-entity-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-audit-entity-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-questionnaire-usage-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-questionnaire-usage-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/identifier.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/identifier.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-example-yesnodontknow.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-example-yesnodontknow.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-vision.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-vision.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-goal-relationship-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-goal-relationship-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-variant-state.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-variant-state.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedure-schedule.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedure-schedule.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-activity-definition-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-activity-definition-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-measure-data-usage.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-measure-data-usage.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-issue-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-issue-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-request-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-request-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/familymemberhistory-genetic.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/familymemberhistory-genetic.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-measure-scoring.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-measure-scoring.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-http-operations.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-http-operations.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/meta.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/meta.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsaminoacidchangetype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsaminoacidchangetype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-allergyintolerance-duration.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-allergyintolerance-duration.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-example-inactive.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-example-inactive.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-food-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-food-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0322.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0322.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-TPMT-haplotype-one.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-TPMT-haplotype-one.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-response-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-response-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/structuredefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/structuredefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-communication-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-communication-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/enrollmentresponse.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/enrollmentresponse.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-name-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-name-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/endpoint-example-wadors.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EndpointHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Endpoint)result).getId())) {
  		 duplicates.put(((Endpoint)result).getId(), ((Endpoint)result).getId());
  	 } else {
  		 ((Endpoint)result).setId(((Endpoint)result).getId() + count);
  		 duplicates.put(((Endpoint)result).getId(), ((Endpoint)result).getId());
  		 //System.out.println("Found duplicate in ... Endpoint " + count++);
  	 }
  	 try {
  		 endpointDao.create((Endpoint)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Endpoint : ../../fhir-data/examples-json/endpoint-example-wadors.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaireresponse-example-f201-lifelines.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((QuestionnaireResponse)result).getId())) {
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  	 } else {
  		 ((QuestionnaireResponse)result).setId(((QuestionnaireResponse)result).getId() + count);
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  		 //System.out.println("Found duplicate in ... QuestionnaireResponse " + count++);
  	 }
  	 try {
  		 questionnaireresponseDao.create((QuestionnaireResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save QuestionnaireResponse : ../../fhir-data/examples-json/questionnaireresponse-example-f201-lifelines.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-transaction-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-transaction-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-message-reason-encounter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-message-reason-encounter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/substance-example-silver-nitrate-product.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SubstanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Substance)result).getId())) {
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  	 } else {
  		 ((Substance)result).setId(((Substance)result).getId() + count);
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  		 //System.out.println("Found duplicate in ... Substance " + count++);
  	 }
  	 try {
  		 substanceDao.create((Substance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Substance : ../../fhir-data/examples-json/substance-example-silver-nitrate-product.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/allergyintolerance-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AllergyIntoleranceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AllergyIntolerance)result).getId())) {
  		 duplicates.put(((AllergyIntolerance)result).getId(), ((AllergyIntolerance)result).getId());
  	 } else {
  		 ((AllergyIntolerance)result).setId(((AllergyIntolerance)result).getId() + count);
  		 duplicates.put(((AllergyIntolerance)result).getId(), ((AllergyIntolerance)result).getId());
  		 //System.out.println("Found duplicate in ... AllergyIntolerance " + count++);
  	 }
  	 try {
  		 allergyintoleranceDao.create((AllergyIntolerance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AllergyIntolerance : ../../fhir-data/examples-json/allergyintolerance-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-pkb.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-pkb.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedure-targetbodysite.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedure-targetbodysite.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-relatedperson-relationshiptype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-relatedperson-relationshiptype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-order-serum-zika-dengue-virus-igm.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-order-serum-zika-dengue-virus-igm.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-protocol-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-protocol-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-sourcereference.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-sourcereference.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-infantenteral.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-infantenteral.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodylength-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/bodylength-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example-reverse.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example-reverse.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0330.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0330.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/library-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/expansionprofile-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/expansionprofile-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/group.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/group.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatement.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/medicationstatement.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-definition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-definition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-dosetype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-dosetype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-humanname-partner-prefix.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-humanname-partner-prefix.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/valueset-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-adoptioninfo.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-adoptioninfo.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-dataelement-sdcobjectclassproperty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-dataelement-sdcobjectclassproperty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0311.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0311.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/processrequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-consent-state-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-consent-state-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/testscript-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/provenance-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/provenance-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-questionnaire-answers-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-questionnaire-answers-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-supply-item.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-supply-item.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/pcd-example-notThem.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ContractHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Contract)result).getId())) {
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  	 } else {
  		 ((Contract)result).setId(((Contract)result).getId() + count);
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  		 //System.out.println("Found duplicate in ... Contract " + count++);
  	 }
  	 try {
  		 contractDao.create((Contract)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Contract : ../../fhir-data/examples-json/pcd-example-notThem.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-optionexclusive.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-optionexclusive.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-research-study-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-research-study-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-flag-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-flag-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contributor-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contributor-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-device-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-device-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-composite-measure-scoring.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-composite-measure-scoring.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitionerrole.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/practitionerrole.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TestScriptHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((TestScript)result).getId())) {
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  	 } else {
  		 ((TestScript)result).setId(((TestScript)result).getId() + count);
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  		 //System.out.println("Found duplicate in ... TestScript " + count++);
  	 }
  	 try {
  		 testscriptDao.create((TestScript)result);
  	 } catch (Exception ex) { System.err.println("Cannot save TestScript : ../../fhir-data/examples-json/testscript-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-careplan-activity-title.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-careplan-activity-title.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/relatedartifact.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/relatedartifact.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-substance-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-substance-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-flag-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-flag-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-example-pacemaker.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Device)result).getId())) {
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  	 } else {
  		 ((Device)result).setId(((Device)result).getId() + count);
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  		 //System.out.println("Found duplicate in ... Device " + count++);
  	 }
  	 try {
  		 deviceDao.create((Device)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Device : ../../fhir-data/examples-json/device-example-pacemaker.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/researchstudy-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ResearchStudyHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ResearchStudy)result).getId())) {
  		 duplicates.put(((ResearchStudy)result).getId(), ((ResearchStudy)result).getId());
  	 } else {
  		 ((ResearchStudy)result).setId(((ResearchStudy)result).getId() + count);
  		 duplicates.put(((ResearchStudy)result).getId(), ((ResearchStudy)result).getId());
  		 //System.out.println("Found duplicate in ... ResearchStudy " + count++);
  	 }
  	 try {
  		 researchstudyDao.create((ResearchStudy)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ResearchStudy : ../../fhir-data/examples-json/researchstudy-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-genetics.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/procedurerequest-genetics.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-operational-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-operational-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-xcda.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-xcda.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-supplydelivery-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-supplydelivery-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-specimen-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-specimen-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-phenotype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-phenotype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/provenance-example-biocompute-object.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProvenanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Provenance)result).getId())) {
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  	 } else {
  		 ((Provenance)result).setId(((Provenance)result).getId() + count);
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  		 //System.out.println("Found duplicate in ... Provenance " + count++);
  	 }
  	 try {
  		 provenanceDao.create((Provenance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Provenance : ../../fhir-data/examples-json/provenance-example-biocompute-object.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-encounter-associatedencounter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-encounter-associatedencounter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-risk-probability.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-risk-probability.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-haplotype1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-haplotype1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-list-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-list-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/contract.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/contract.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-effective-period.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-effective-period.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-subsumes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-subsumes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-message-events.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-message-events.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-head-circumference.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-head-circumference.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-doc-classcodes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-doc-classcodes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-vaccination-protocol-dose-status-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-vaccination-protocol-dose-status-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-event-reasoncode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-event-reasoncode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/markdown.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/markdown.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example-emerg.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example-emerg.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/expansionprofile.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/expansionprofile.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-benefit-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-benefit-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-response-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-response-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0316.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0316.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-10minute-apgar-score.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-10minute-apgar-score.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-selection-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-selection-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-nutrition-request-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-nutrition-request-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-diagnosticreport-geneticsanalysis.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-diagnosticreport-geneticsanalysis.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/episodeofcare-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EpisodeOfCareHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EpisodeOfCare)result).getId())) {
  		 duplicates.put(((EpisodeOfCare)result).getId(), ((EpisodeOfCare)result).getId());
  	 } else {
  		 ((EpisodeOfCare)result).setId(((EpisodeOfCare)result).getId() + count);
  		 duplicates.put(((EpisodeOfCare)result).getId(), ((EpisodeOfCare)result).getId());
  		 //System.out.println("Found duplicate in ... EpisodeOfCare " + count++);
  	 }
  	 try {
  		 episodeofcareDao.create((EpisodeOfCare)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EpisodeOfCare : ../../fhir-data/examples-json/episodeofcare-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-measure-scoring.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-measure-scoring.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-dispense-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-dispense-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-linkage-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-linkage-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-map-source-list-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-map-source-list-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-audit-event-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-audit-event-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/simplequantity.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/simplequantity.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/chargeitem-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ChargeItemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ChargeItem)result).getId())) {
  		 duplicates.put(((ChargeItem)result).getId(), ((ChargeItem)result).getId());
  	 } else {
  		 ((ChargeItem)result).setId(((ChargeItem)result).getId() + count);
  		 duplicates.put(((ChargeItem)result).getId(), ((ChargeItem)result).getId());
  		 //System.out.println("Found duplicate in ... ChargeItem " + count++);
  	 }
  	 try {
  		 chargeitemDao.create((ChargeItem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ChargeItem : ../../fhir-data/examples-json/chargeitem-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-bloodpressure.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-bloodpressure.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adverse-event-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adverse-event-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-example-TPMT-two.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-example-TPMT-two.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-consent-content-class.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-consent-content-class.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-fhir-helpers.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-fhir-helpers.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-resource-aggregation-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-resource-aggregation-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cholesterol.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/cholesterol.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-list-order.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-list-order.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-term-subtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-term-subtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adjudication.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adjudication.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-list-item-flag.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-list-item-flag.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/bundle-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-search-modifier-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-search-modifier-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-repository-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-repository-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-f002-lung.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-f002-lung.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-vaccine-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-vaccine-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f006-rvdb.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f006-rvdb.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-http-operations.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-http-operations.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-wg.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-wg.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-dicom-audit-lifecycle.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-dicom-audit-lifecycle.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-respiratory-rate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-respiratory-rate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-encounter-modeofarrival.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-encounter-modeofarrival.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-age-units.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-age-units.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/audit-event-example-vread.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AuditEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AuditEvent)result).getId())) {
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  	 } else {
  		 ((AuditEvent)result).setId(((AuditEvent)result).getId() + count);
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AuditEvent " + count++);
  	 }
  	 try {
  		 auditeventDao.create((AuditEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AuditEvent : ../../fhir-data/examples-json/audit-event-example-vread.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-othername.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-othername.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example-familyhistory-f201-roel.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example-familyhistory-f201-roel.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/elementdefinition-11179-DataElement-objectClass.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/elementdefinition-11179-DataElement-objectClass.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-example-fda-comparisons.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-example-fda-comparisons.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-implant-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-implant-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-claim-careteamrole.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-claim-careteamrole.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-ob.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-ob.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-genetic-Observation-dna-variant.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/observation-genetic-Observation-dna-variant.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-jurisdiction.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-jurisdiction.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-appendectomy-narrative.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-appendectomy-narrative.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-special-arrangements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-special-arrangements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-goal-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-goal-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-toocostly.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-toocostly.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaire-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/questionnaire-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/claim.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-plandefinition-data-requirements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-plandefinition-data-requirements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-metric-calibration-state.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-metric-calibration-state.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/message-response-link.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/message-response-link.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-stroke.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-stroke.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0315.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0315.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-xcda1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-xcda1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-extension-context.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-extension-context.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-Out.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-Out.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/schedule-provider-location2-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ScheduleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Schedule)result).getId())) {
  		 duplicates.put(((Schedule)result).getId(), ((Schedule)result).getId());
  	 } else {
  		 ((Schedule)result).setId(((Schedule)result).getId() + count);
  		 duplicates.put(((Schedule)result).getId(), ((Schedule)result).getId());
  		 //System.out.println("Found duplicate in ... Schedule " + count++);
  	 }
  	 try {
  		 scheduleDao.create((Schedule)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Schedule : ../../fhir-data/examples-json/schedule-provider-location2-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-document-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-document-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-openehr-management.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-openehr-management.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-claim-informationcategory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-claim-informationcategory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-f001-heart.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-f001-heart.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-comment.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-comment.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-resource-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-resource-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0331.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0331.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-f203-sepsis.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-f203-sepsis.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/conceptmap.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/conceptmap.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/nutritionorder-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/deviceusestatement-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/deviceusestatement-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coverage-example-2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CoverageHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Coverage)result).getId())) {
  		 duplicates.put(((Coverage)result).getId(), ((Coverage)result).getId());
  	 } else {
  		 ((Coverage)result).setId(((Coverage)result).getId() + count);
  		 duplicates.put(((Coverage)result).getId(), ((Coverage)result).getId());
  		 //System.out.println("Found duplicate in ... Coverage " + count++);
  	 }
  	 try {
  		 coverageDao.create((Coverage)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Coverage : ../../fhir-data/examples-json/coverage-example-2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/paymentnotice-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PaymentNoticeHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PaymentNotice)result).getId())) {
  		 duplicates.put(((PaymentNotice)result).getId(), ((PaymentNotice)result).getId());
  	 } else {
  		 ((PaymentNotice)result).setId(((PaymentNotice)result).getId() + count);
  		 duplicates.put(((PaymentNotice)result).getId(), ((PaymentNotice)result).getId());
  		 //System.out.println("Found duplicate in ... PaymentNotice " + count++);
  	 }
  	 try {
  		 paymentnoticeDao.create((PaymentNotice)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PaymentNotice : ../../fhir-data/examples-json/paymentnotice-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/string.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/string.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-communication-not-done-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-communication-not-done-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-administer-zika-virus-exposure-assessment.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-administer-zika-virus-exposure-assessment.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0319.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0319.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-claim-subtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-claim-subtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-diagnosticreport-locationperformed.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-diagnosticreport-locationperformed.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-clinicaltrial.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-clinicaltrial.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-document-reference-status-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-document-reference-status-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicecomponent-example-prodspec.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceComponentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DeviceComponent)result).getId())) {
  		 duplicates.put(((DeviceComponent)result).getId(), ((DeviceComponent)result).getId());
  	 } else {
  		 ((DeviceComponent)result).setId(((DeviceComponent)result).getId() + count);
  		 duplicates.put(((DeviceComponent)result).getId(), ((DeviceComponent)result).getId());
  		 //System.out.println("Found duplicate in ... DeviceComponent " + count++);
  	 }
  	 try {
  		 devicecomponentDao.create((DeviceComponent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DeviceComponent : ../../fhir-data/examples-json/devicecomponent-example-prodspec.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/detectedissue-example-dup.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DetectedIssueHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DetectedIssue)result).getId())) {
  		 duplicates.put(((DetectedIssue)result).getId(), ((DetectedIssue)result).getId());
  	 } else {
  		 ((DetectedIssue)result).setId(((DetectedIssue)result).getId() + count);
  		 duplicates.put(((DetectedIssue)result).getId(), ((DetectedIssue)result).getId());
  		 //System.out.println("Found duplicate in ... DetectedIssue " + count++);
  	 }
  	 try {
  		 detectedissueDao.create((DetectedIssue)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DetectedIssue : ../../fhir-data/examples-json/detectedissue-example-dup.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-marital-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-marital-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-texture-modified.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-texture-modified.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-event-performerrole.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-event-performerrole.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/enrollmentresponse-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/enrollmentresponse-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicemetricobservation-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/devicemetricobservation-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/datetime.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/datetime.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/flag-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/flag-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-search-xpath-usage.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-search-xpath-usage.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-type-derivation-rule.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-type-derivation-rule.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-warning.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-warning.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-trusted-expansion.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-trusted-expansion.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coverage-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/coverage-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-additionalmaterials.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-additionalmaterials.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adverse-event-causality-assess.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adverse-event-causality-assess.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-tel-address.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-tel-address.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/auditevent-example-disclosure.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AuditEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AuditEvent)result).getId())) {
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  	 } else {
  		 ((AuditEvent)result).setId(((AuditEvent)result).getId() + count);
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AuditEvent " + count++);
  	 }
  	 try {
  		 auditeventDao.create((AuditEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AuditEvent : ../../fhir-data/examples-json/auditevent-example-disclosure.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-encounter-special-arrangements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-encounter-special-arrangements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-map-context-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-map-context-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-conceptmap-closure.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-conceptmap-closure.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-detectedissue-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-detectedissue-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-communicationrequest-reasonrejected.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-communicationrequest-reasonrejected.json due to " + ex.getMessage()); }
  	System.out.println("Total tests .. " + count);
  }
  @Test
  public void test620() throws Exception {
  	 inputFile = "../../fhir-data/examples-json/operation-codesystem-compose.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-codesystem-compose.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaire.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/questionnaire.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/namingsystem-example-id.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NamingSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NamingSystem)result).getId())) {
  		 duplicates.put(((NamingSystem)result).getId(), ((NamingSystem)result).getId());
  	 } else {
  		 ((NamingSystem)result).setId(((NamingSystem)result).getId() + count);
  		 duplicates.put(((NamingSystem)result).getId(), ((NamingSystem)result).getId());
  		 //System.out.println("Found duplicate in ... NamingSystem " + count++);
  	 }
  	 try {
  		 namingsystemDao.create((NamingSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NamingSystem : ../../fhir-data/examples-json/namingsystem-example-id.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0333.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0333.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-surface.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-surface.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-genetic-Observation-gene-dnavariant.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/observation-genetic-Observation-gene-dnavariant.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-sequence-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-sequence-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-issue-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-issue-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-minvalue.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-minvalue.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-chromosome-human.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-chromosome-human.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-goal-status-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-goal-status-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-bodyposition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-bodyposition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-timing-exact.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-timing-exact.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-referral-method.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-referral-method.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-instance-availability.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-instance-availability.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-report-participant-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-report-participant-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-statement-taken.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-statement-taken.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-geolocation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-geolocation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-verification.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-verification.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-object-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-object-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-subscription-tag.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-subscription-tag.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/heartrate.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/heartrate.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f206-staphylococcus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f206-staphylococcus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testreport-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/testreport-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-encounter-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-encounter-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coverage-example-selfpay.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CoverageHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Coverage)result).getId())) {
  		 duplicates.put(((Coverage)result).getId(), ((Coverage)result).getId());
  	 } else {
  		 ((Coverage)result).setId(((Coverage)result).getId() + count);
  		 duplicates.put(((Coverage)result).getId(), ((Coverage)result).getId());
  		 //System.out.println("Found duplicate in ... Coverage " + count++);
  	 }
  	 try {
  		 coverageDao.create((Coverage)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Coverage : ../../fhir-data/examples-json/coverage-example-selfpay.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/referralrequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/referralrequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-doc-section-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-doc-section-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0307.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0307.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-resource-meta-add.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-resource-meta-add.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-operation-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-operation-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-team-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-team-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-network-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-network-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-object-lifecycle-events.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-object-lifecycle-events.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-ambulation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-ambulation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-targetstructuremap.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-targetstructuremap.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-birthtime.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-birthtime.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-medication-dispense-status-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-medication-dispense-status-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-genetic-Observation-amino-acid-change.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/observation-genetic-Observation-amino-acid-change.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-valueset-expand.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-valueset-expand.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-messageheader-response-request.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-messageheader-response-request.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-observation-statistics.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-observation-statistics.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointment-example2doctors.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AppointmentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Appointment)result).getId())) {
  		 duplicates.put(((Appointment)result).getId(), ((Appointment)result).getId());
  	 } else {
  		 ((Appointment)result).setId(((Appointment)result).getId() + count);
  		 duplicates.put(((Appointment)result).getId(), ((Appointment)result).getId());
  		 //System.out.println("Found duplicate in ... Appointment " + count++);
  	 }
  	 try {
  		 appointmentDao.create((Appointment)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Appointment : ../../fhir-data/examples-json/appointment-example2doctors.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-claim-modifiers.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-claim-modifiers.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-coverage-selfpay.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-coverage-selfpay.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-allerg-intol-substance-exp-risk.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-allerg-intol-substance-exp-risk.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0313.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0313.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/explanationofbenefit-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ExplanationOfBenefitHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ExplanationOfBenefit)result).getId())) {
  		 duplicates.put(((ExplanationOfBenefit)result).getId(), ((ExplanationOfBenefit)result).getId());
  	 } else {
  		 ((ExplanationOfBenefit)result).setId(((ExplanationOfBenefit)result).getId() + count);
  		 duplicates.put(((ExplanationOfBenefit)result).getId(), ((ExplanationOfBenefit)result).getId());
  		 //System.out.println("Found duplicate in ... ExplanationOfBenefit " + count++);
  	 }
  	 try {
  		 explanationofbenefitDao.create((ExplanationOfBenefit)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ExplanationOfBenefit : ../../fhir-data/examples-json/explanationofbenefit-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-composition-attestation-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-composition-attestation-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-oral-average.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-oral-average.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-genetics.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/observation-genetics.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/positiveint.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/positiveint.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-property-representation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-property-representation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/endpoint-example-iid.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EndpointHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Endpoint)result).getId())) {
  		 duplicates.put(((Endpoint)result).getId(), ((Endpoint)result).getId());
  	 } else {
  		 ((Endpoint)result).setId(((Endpoint)result).getId() + count);
  		 duplicates.put(((Endpoint)result).getId(), ((Endpoint)result).getId());
  		 //System.out.println("Found duplicate in ... Endpoint " + count++);
  	 }
  	 try {
  		 endpointDao.create((Endpoint)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Endpoint : ../../fhir-data/examples-json/endpoint-example-iid.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-benefit-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-benefit-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-participant-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-participant-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/list-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-co-value.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-co-value.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/hdlcholesterol-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/hdlcholesterol-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-example-ukpharmacy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LocationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Location)result).getId())) {
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  	 } else {
  		 ((Location)result).setId(((Location)result).getId() + count);
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  		 //System.out.println("Found duplicate in ... Location " + count++);
  	 }
  	 try {
  		 locationDao.create((Location)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Location : ../../fhir-data/examples-json/location-example-ukpharmacy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/basic-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/basic-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/audit-event-example-media.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AuditEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AuditEvent)result).getId())) {
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  	 } else {
  		 ((AuditEvent)result).setId(((AuditEvent)result).getId() + count);
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AuditEvent " + count++);
  	 }
  	 try {
  		 auditeventDao.create((AuditEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AuditEvent : ../../fhir-data/examples-json/audit-event-example-media.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/oxygensat.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/oxygensat.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measure-composite-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Measure)result).getId())) {
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  	 } else {
  		 ((Measure)result).setId(((Measure)result).getId() + count);
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  		 //System.out.println("Found duplicate in ... Measure " + count++);
  	 }
  	 try {
  		 measureDao.create((Measure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Measure : ../../fhir-data/examples-json/measure-composite-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-data-absent-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-data-absent-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/flag.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/flag.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-bloodpressure-cancel.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-bloodpressure-cancel.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-statement-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-statement-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-security-role-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-security-role-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-report-status-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-report-status-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedurerequest-reasonrefused.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedurerequest-reasonrefused.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/riskassessment-example-cardiac.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RiskAssessmentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RiskAssessment)result).getId())) {
  		 duplicates.put(((RiskAssessment)result).getId(), ((RiskAssessment)result).getId());
  	 } else {
  		 ((RiskAssessment)result).setId(((RiskAssessment)result).getId() + count);
  		 duplicates.put(((RiskAssessment)result).getId(), ((RiskAssessment)result).getId());
  		 //System.out.println("Found duplicate in ... RiskAssessment " + count++);
  	 }
  	 try {
  		 riskassessmentDao.create((RiskAssessment)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RiskAssessment : ../../fhir-data/examples-json/riskassessment-example-cardiac.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ucum-common.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ucum-common.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-exclusive-breastfeeding-intervention-01.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-exclusive-breastfeeding-intervention-01.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-encounter-location-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-encounter-location-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-medicationorder-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-medicationorder-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-audit-event-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-audit-event-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-clinical.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-clinical.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointment-example-request.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AppointmentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Appointment)result).getId())) {
  		 duplicates.put(((Appointment)result).getId(), ((Appointment)result).getId());
  	 } else {
  		 ((Appointment)result).setId(((Appointment)result).getId() + count);
  		 duplicates.put(((Appointment)result).getId(), ((Appointment)result).getId());
  		 //System.out.println("Found duplicate in ... Appointment " + count++);
  	 }
  	 try {
  		 appointmentDao.create((Appointment)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Appointment : ../../fhir-data/examples-json/appointment-example-request.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-metric-calibration-state.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-metric-calibration-state.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0326.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0326.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/relatedperson-example-f001-sarah.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RelatedPersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RelatedPerson)result).getId())) {
  		 duplicates.put(((RelatedPerson)result).getId(), ((RelatedPerson)result).getId());
  	 } else {
  		 ((RelatedPerson)result).setId(((RelatedPerson)result).getId() + count);
  		 duplicates.put(((RelatedPerson)result).getId(), ((RelatedPerson)result).getId());
  		 //System.out.println("Found duplicate in ... RelatedPerson " + count++);
  	 }
  	 try {
  		 relatedpersonDao.create((RelatedPerson)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RelatedPerson : ../../fhir-data/examples-json/relatedperson-example-f001-sarah.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0303.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0303.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunizationrecommendation-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImmunizationRecommendationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ImmunizationRecommendation)result).getId())) {
  		 duplicates.put(((ImmunizationRecommendation)result).getId(), ((ImmunizationRecommendation)result).getId());
  	 } else {
  		 ((ImmunizationRecommendation)result).setId(((ImmunizationRecommendation)result).getId() + count);
  		 duplicates.put(((ImmunizationRecommendation)result).getId(), ((ImmunizationRecommendation)result).getId());
  		 //System.out.println("Found duplicate in ... ImmunizationRecommendation " + count++);
  	 }
  	 try {
  		 immunizationrecommendationDao.create((ImmunizationRecommendation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ImmunizationRecommendation : ../../fhir-data/examples-json/immunizationrecommendation-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/medicationadministration.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodysite.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/bodysite.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-deliveryinstallationtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-deliveryinstallationtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsinterpretation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsinterpretation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-metric-calibration-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-metric-calibration-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/xds-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/xds-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-genetics-3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-genetics-3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/profiles-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/profiles-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-servicedefinition-data-requirements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-servicedefinition-data-requirements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-pharmacy-compound.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-pharmacy-compound.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedurerequest-authorizedby.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedurerequest-authorizedby.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-cardinality-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-cardinality-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-capabilitystatement-supported-system.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-capabilitystatement-supported-system.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-allergy-intolerance-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-allergy-intolerance-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-report-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-report-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-location-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-location-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-address-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-address-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-allergy-intolerance-criticality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-allergy-intolerance-criticality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/episodeofcare.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/episodeofcare.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-claim-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-claim-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-reason-medication-not-taken-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-reason-medication-not-taken-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodysite-example-fetus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BodySiteHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((BodySite)result).getId())) {
  		 duplicates.put(((BodySite)result).getId(), ((BodySite)result).getId());
  	 } else {
  		 ((BodySite)result).setId(((BodySite)result).getId() + count);
  		 duplicates.put(((BodySite)result).getId(), ((BodySite)result).getId());
  		 //System.out.println("Found duplicate in ... BodySite " + count++);
  	 }
  	 try {
  		 bodysiteDao.create((BodySite)result);
  	 } catch (Exception ex) { System.err.println("Cannot save BodySite : ../../fhir-data/examples-json/bodysite-example-fetus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointmentresponse-example-req.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AppointmentResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AppointmentResponse)result).getId())) {
  		 duplicates.put(((AppointmentResponse)result).getId(), ((AppointmentResponse)result).getId());
  	 } else {
  		 ((AppointmentResponse)result).setId(((AppointmentResponse)result).getId() + count);
  		 duplicates.put(((AppointmentResponse)result).getId(), ((AppointmentResponse)result).getId());
  		 //System.out.println("Found duplicate in ... AppointmentResponse " + count++);
  	 }
  	 try {
  		 appointmentresponseDao.create((AppointmentResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AppointmentResponse : ../../fhir-data/examples-json/appointmentresponse-example-req.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-encounter-discharge-disposition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-encounter-discharge-disposition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-deliveryaddressline.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-deliveryaddressline.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-definition-topic.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-definition-topic.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-languages.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-languages.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contributor-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contributor-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/contract-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ContractHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Contract)result).getId())) {
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  	 } else {
  		 ((Contract)result).setId(((Contract)result).getId() + count);
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  		 //System.out.println("Found duplicate in ... Contract " + count++);
  	 }
  	 try {
  		 contractDao.create((Contract)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Contract : ../../fhir-data/examples-json/contract-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f203-jvg.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f203-jvg.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-ancestor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-ancestor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatementexample3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationStatement)result).getId())) {
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  	 } else {
  		 ((MedicationStatement)result).setId(((MedicationStatement)result).getId() + count);
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationStatement " + count++);
  	 }
  	 try {
  		 medicationstatementDao.create((MedicationStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationStatement : ../../fhir-data/examples-json/medicationstatementexample3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-reason-medication-not-given-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-reason-medication-not-given-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-nationality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-nationality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-housenumber.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-housenumber.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-concept-map-equivalence.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-concept-map-equivalence.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-discharge-disposition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-discharge-disposition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-payment-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-payment-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-graphic-example-1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-graphic-example-1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-practitioner-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-practitioner-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-term-subtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-term-subtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-rendering-stylesensitive.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-rendering-stylesensitive.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/riskassessment-example-prognosis.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RiskAssessmentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RiskAssessment)result).getId())) {
  		 duplicates.put(((RiskAssessment)result).getId(), ((RiskAssessment)result).getId());
  	 } else {
  		 ((RiskAssessment)result).setId(((RiskAssessment)result).getId() + count);
  		 duplicates.put(((RiskAssessment)result).getId(), ((RiskAssessment)result).getId());
  		 //System.out.println("Found duplicate in ... RiskAssessment " + count++);
  	 }
  	 try {
  		 riskassessmentDao.create((RiskAssessment)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RiskAssessment : ../../fhir-data/examples-json/riskassessment-example-prognosis.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-history-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-history-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-resource-type-link.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-resource-type-link.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-modifiers.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-modifiers.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-measure-population.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-measure-population.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/familymemberhistory.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/familymemberhistory.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/humanname.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/humanname.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-regex.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-regex.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-actorrole.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-actorrole.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-form-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-form-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript-example-update.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TestScriptHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((TestScript)result).getId())) {
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  	 } else {
  		 ((TestScript)result).setId(((TestScript)result).getId() + count);
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  		 //System.out.println("Found duplicate in ... TestScript " + count++);
  	 }
  	 try {
  		 testscriptDao.create((TestScript)result);
  	 } catch (Exception ex) { System.err.println("Cannot save TestScript : ../../fhir-data/examples-json/testscript-example-update.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-demap.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-demap.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-colonoscopy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-colonoscopy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/distance.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/distance.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-selection-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-selection-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-encounter-reasoncancelled.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-encounter-reasoncancelled.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-rateincrement.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-rateincrement.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-participant-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-participant-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-organization-preferredcontact.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-organization-preferredcontact.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/narrative.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/narrative.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0312.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0312.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-example-pgx-1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-example-pgx-1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-cqif-evidence-quality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-cqif-evidence-quality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-reason-medication-not-given-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-reason-medication-not-given-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0305.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0305.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-timing-abbreviation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-timing-abbreviation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0320.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0320.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/oid.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/oid.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-all-languages.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-all-languages.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-immunization-origin.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-immunization-origin.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/slot-example-unavailable.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SlotHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Slot)result).getId())) {
  		 duplicates.put(((Slot)result).getId(), ((Slot)result).getId());
  	 } else {
  		 ((Slot)result).setId(((Slot)result).getId() + count);
  		 duplicates.put(((Slot)result).getId(), ((Slot)result).getId());
  		 //System.out.println("Found duplicate in ... Slot " + count++);
  	 }
  	 try {
  		 slotDao.create((Slot)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Slot : ../../fhir-data/examples-json/slot-example-unavailable.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicecomponent-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceComponentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DeviceComponent)result).getId())) {
  		 duplicates.put(((DeviceComponent)result).getId(), ((DeviceComponent)result).getId());
  	 } else {
  		 ((DeviceComponent)result).setId(((DeviceComponent)result).getId() + count);
  		 duplicates.put(((DeviceComponent)result).getId(), ((DeviceComponent)result).getId());
  		 //System.out.println("Found duplicate in ... DeviceComponent " + count++);
  	 }
  	 try {
  		 devicecomponentDao.create((DeviceComponent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DeviceComponent : ../../fhir-data/examples-json/devicecomponent-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-message-significance-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-message-significance-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-c80-practice-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-c80-practice-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-substance-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-substance-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/contributor.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/contributor.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/address.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/address.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaireresponse-example-ussg-fht-answers.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((QuestionnaireResponse)result).getId())) {
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  	 } else {
  		 ((QuestionnaireResponse)result).setId(((QuestionnaireResponse)result).getId() + count);
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  		 //System.out.println("Found duplicate in ... QuestionnaireResponse " + count++);
  	 }
  	 try {
  		 questionnaireresponseDao.create((QuestionnaireResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save QuestionnaireResponse : ../../fhir-data/examples-json/questionnaireresponse-example-ussg-fht-answers.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/codesystem-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedurerequest-targetbodysite.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedurerequest-targetbodysite.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ex-onsettype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ex-onsettype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-graph-compartment-rule.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-graph-compartment-rule.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-immunization-recommendation-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-immunization-recommendation-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-doc-typecodes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-doc-typecodes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-chinese.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-chinese.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-codesystem-hierarchy-meaning.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-codesystem-hierarchy-meaning.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-w3c-provenance-activity-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-w3c-provenance-activity-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/account-example-with-guarantor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AccountHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Account)result).getId())) {
  		 duplicates.put(((Account)result).getId(), ((Account)result).getId());
  	 } else {
  		 ((Account)result).setId(((Account)result).getId() + count);
  		 duplicates.put(((Account)result).getId(), ((Account)result).getId());
  		 //System.out.println("Found duplicate in ... Account " + count++);
  	 }
  	 try {
  		 accountDao.create((Account)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Account : ../../fhir-data/examples-json/account-example-with-guarantor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ucum-units.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ucum-units.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-sourcereference.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-sourcereference.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/basic-example-narrative.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BasicHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Basic)result).getId())) {
  		 duplicates.put(((Basic)result).getId(), ((Basic)result).getId());
  	 } else {
  		 ((Basic)result).setId(((Basic)result).getId() + count);
  		 duplicates.put(((Basic)result).getId(), ((Basic)result).getId());
  		 //System.out.println("Found duplicate in ... Basic " + count++);
  	 }
  	 try {
  		 basicDao.create((Basic)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Basic : ../../fhir-data/examples-json/basic-example-narrative.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-resource-slicing-rules.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-resource-slicing-rules.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-body-height.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-body-height.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-match-grade.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-match-grade.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-supplyrequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-supplyrequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bp.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/bp.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-examples-general.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/patient-examples-general.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-usage-context-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-usage-context-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-message-events.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-message-events.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-dataelement-sdcobjectclass.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-dataelement-sdcobjectclass.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/location-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-type-restful-interaction.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-type-restful-interaction.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-maxoccurs.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-maxoccurs.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-oral-identifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-oral-identifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adverse-event-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adverse-event-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/practitioner.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-sequence-species.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-sequence-species.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-event-capability-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-event-capability-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaire-example-gcs.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/questionnaire-example-gcs.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-name-v3-representation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-name-v3-representation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-options-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-options-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0304.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0304.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-identifier-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-identifier-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitionerrole-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerRoleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PractitionerRole)result).getId())) {
  		 duplicates.put(((PractitionerRole)result).getId(), ((PractitionerRole)result).getId());
  	 } else {
  		 ((PractitionerRole)result).setId(((PractitionerRole)result).getId() + count);
  		 duplicates.put(((PractitionerRole)result).getId(), ((PractitionerRole)result).getId());
  		 //System.out.println("Found duplicate in ... PractitionerRole " + count++);
  	 }
  	 try {
  		 practitionerroleDao.create((PractitionerRole)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PractitionerRole : ../../fhir-data/examples-json/practitionerrole-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-sibling-relationship-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-sibling-relationship-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-condition-clinical.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-condition-clinical.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-diagnosticreport-geneticsfamilymemberhistory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-diagnosticreport-geneticsfamilymemberhistory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaireresponse-example-gcs.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((QuestionnaireResponse)result).getId())) {
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  	 } else {
  		 ((QuestionnaireResponse)result).setId(((QuestionnaireResponse)result).getId() + count);
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  		 //System.out.println("Found duplicate in ... QuestionnaireResponse " + count++);
  	 }
  	 try {
  		 questionnaireresponseDao.create((QuestionnaireResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save QuestionnaireResponse : ../../fhir-data/examples-json/questionnaireresponse-example-gcs.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-location-alias.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-location-alias.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-fips-county.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-fips-county.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-constraint-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-constraint-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/substance-example-f201-dust.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SubstanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Substance)result).getId())) {
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  	 } else {
  		 ((Substance)result).setId(((Substance)result).getId() + count);
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  		 //System.out.println("Found duplicate in ... Substance " + count++);
  	 }
  	 try {
  		 substanceDao.create((Substance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Substance : ../../fhir-data/examples-json/substance-example-f201-dust.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle-response.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/bundle-response.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-procedure-followup.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-procedure-followup.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-benefit-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-benefit-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adverse-event-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adverse-event-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-codesystem-hierarchy-meaning.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-codesystem-hierarchy-meaning.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/elementdefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/elementdefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/substance-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SubstanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Substance)result).getId())) {
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  	 } else {
  		 ((Substance)result).setId(((Substance)result).getId() + count);
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  		 //System.out.println("Found duplicate in ... Substance " + count++);
  	 }
  	 try {
  		 substanceDao.create((Substance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Substance : ../../fhir-data/examples-json/substance-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/composition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/composition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-list-empty-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-list-empty-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adverse-event-causality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adverse-event-causality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitionerrole-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/practitionerrole-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatement-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/medicationstatement-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-familymemberhistory-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-familymemberhistory-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/provenance-consent-signature.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProvenanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Provenance)result).getId())) {
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  	 } else {
  		 ((Provenance)result).setId(((Provenance)result).getId() + count);
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  		 //System.out.println("Found duplicate in ... Provenance " + count++);
  	 }
  	 try {
  		 provenanceDao.create((Provenance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Provenance : ../../fhir-data/examples-json/provenance-consent-signature.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-metric-color.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-metric-color.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/relatedperson.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/relatedperson.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-lab.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-lab.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ex-diagnosistype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ex-diagnosistype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-medicationdispense-validityperiod.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-medicationdispense-validityperiod.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-remittance-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-remittance-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle-request-medsallergies.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/bundle-request-medsallergies.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-measure-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-measure-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example-f001-heart.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example-f001-heart.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedurerequest-geneticsitem.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedurerequest-geneticsitem.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-coding-sctdescid.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-coding-sctdescid.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/usagecontext.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/usagecontext.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0309.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0309.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-fundsreserve.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-fundsreserve.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-genetics.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/diagnosticreport-genetics.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-practitioner-animalspecies.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-practitioner-animalspecies.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-procedure-progress-status-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-procedure-progress-status-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedure-causedby.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedure-causedby.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-vaccination-protocol-dose-status-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-vaccination-protocol-dose-status-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-goal-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-goal-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/clinicalimpression-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/clinicalimpression-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/parameters.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/parameters.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-system.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-system.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/observation-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/messageheader-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/messageheader-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/namingsystem-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/namingsystem-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-measurement-principle.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-measurement-principle.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-manifestation-or-symptom.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-manifestation-or-symptom.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-list-example-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-list-example-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-testscript-operation-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-testscript-operation-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-resource-approvaldate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-resource-approvaldate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0302.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0302.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-communicationrequest-supportinginfo.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-communicationrequest-supportinginfo.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0310.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0310.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-extensions-Condition-part-of.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/condition-extensions-Condition-part-of.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careteam-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CareTeamHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CareTeam)result).getId())) {
  		 duplicates.put(((CareTeam)result).getId(), ((CareTeam)result).getId());
  	 } else {
  		 ((CareTeam)result).setId(((CareTeam)result).getId() + count);
  		 duplicates.put(((CareTeam)result).getId(), ((CareTeam)result).getId());
  		 //System.out.println("Found duplicate in ... CareTeam " + count++);
  	 }
  	 try {
  		 careteamDao.create((CareTeam)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CareTeam : ../../fhir-data/examples-json/careteam-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-slotstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-slotstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-occurredfollowing.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-occurredfollowing.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-consent-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-consent-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-goal-acceptance-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-goal-acceptance-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/specimen-example-serum.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SpecimenHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Specimen)result).getId())) {
  		 duplicates.put(((Specimen)result).getId(), ((Specimen)result).getId());
  	 } else {
  		 ((Specimen)result).setId(((Specimen)result).getId() + count);
  		 duplicates.put(((Specimen)result).getId(), ((Specimen)result).getId());
  		 //System.out.println("Found duplicate in ... Specimen " + count++);
  	 }
  	 try {
  		 specimenDao.create((Specimen)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Specimen : ../../fhir-data/examples-json/specimen-example-serum.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-allergy-intolerance-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-allergy-intolerance-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-sample-data.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-sample-data.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/careplan.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-questionnaire-display-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-questionnaire-display-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-1minute-apgar-score.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-1minute-apgar-score.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-openehr-careplan.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-openehr-careplan.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-namingsystem-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-namingsystem-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-data-absent-reason-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-data-absent-reason-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-zika-virus-intervention-logic.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-zika-virus-intervention-logic.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-f205-infection.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-f205-infection.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/sequence-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-codesystem-lookup.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-codesystem-lookup.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-sourcestructuremap.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-sourcestructuremap.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-notOrg.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-notOrg.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-fhirtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-fhirtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-related-claim-relationship.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-related-claim-relationship.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-supplyrequest-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-supplyrequest-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-bundle-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-bundle-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/guidanceresponse-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/guidanceresponse-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/organization-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-allergyintolerance-resolutionage.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-allergyintolerance-resolutionage.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-procedurerequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-procedurerequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/integer.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/integer.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adjudication.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adjudication.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-recommendation-date-criterion.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-recommendation-date-criterion.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/riskassessment-example-population.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RiskAssessmentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RiskAssessment)result).getId())) {
  		 duplicates.put(((RiskAssessment)result).getId(), ((RiskAssessment)result).getId());
  	 } else {
  		 ((RiskAssessment)result).setId(((RiskAssessment)result).getId() + count);
  		 duplicates.put(((RiskAssessment)result).getId(), ((RiskAssessment)result).getId());
  		 //System.out.println("Found duplicate in ... RiskAssessment " + count++);
  	 }
  	 try {
  		 riskassessmentDao.create((RiskAssessment)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RiskAssessment : ../../fhir-data/examples-json/riskassessment-example-population.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/namingsystem-example-replaced.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NamingSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NamingSystem)result).getId())) {
  		 duplicates.put(((NamingSystem)result).getId(), ((NamingSystem)result).getId());
  	 } else {
  		 ((NamingSystem)result).setId(((NamingSystem)result).getId() + count);
  		 duplicates.put(((NamingSystem)result).getId(), ((NamingSystem)result).getId());
  		 //System.out.println("Found duplicate in ... NamingSystem " + count++);
  	 }
  	 try {
  		 namingsystemDao.create((NamingSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NamingSystem : ../../fhir-data/examples-json/namingsystem-example-replaced.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-buildingnumbersuffix.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-buildingnumbersuffix.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-gingival-mass.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-gingival-mass.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-change-description.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-change-description.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/flag-example-encounter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FlagHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Flag)result).getId())) {
  		 duplicates.put(((Flag)result).getId(), ((Flag)result).getId());
  	 } else {
  		 ((Flag)result).setId(((Flag)result).getId() + count);
  		 duplicates.put(((Flag)result).getId(), ((Flag)result).getId());
  		 //System.out.println("Found duplicate in ... Flag " + count++);
  	 }
  	 try {
  		 flagDao.create((Flag)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Flag : ../../fhir-data/examples-json/flag-example-encounter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-http-response-header.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-http-response-header.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-classification-or-context.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-classification-or-context.json due to " + ex.getMessage()); }
  	System.out.println("Total tests .. " + count);
  }
  @Test
  public void test930() throws Exception {
  	 inputFile = "../../fhir-data/examples-json/extension-valueset-warning.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-warning.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0306.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0306.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-audit-event-sub-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-audit-event-sub-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0321.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0321.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coverage-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CoverageHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Coverage)result).getId())) {
  		 duplicates.put(((Coverage)result).getId(), ((Coverage)result).getId());
  	 } else {
  		 ((Coverage)result).setId(((Coverage)result).getId() + count);
  		 duplicates.put(((Coverage)result).getId(), ((Coverage)result).getId());
  		 //System.out.println("Found duplicate in ... Coverage " + count++);
  	 }
  	 try {
  		 coverageDao.create((Coverage)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Coverage : ../../fhir-data/examples-json/coverage-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-postal-address-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-postal-address-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-device-implant-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-device-implant-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsdnasequencevarianttype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsdnasequencevarianttype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-unittype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-unittype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-auditevent-numberofinstances.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-auditevent-numberofinstances.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-testscript-profile-origin-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-testscript-profile-origin-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/riskassessment.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/riskassessment.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-specimen-collection-method.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-specimen-collection-method.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/endpoint-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/endpoint-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityresponse-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/eligibilityresponse-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-casesensitive.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-casesensitive.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-displaycategory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-displaycategory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-care-team-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-care-team-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-unsat.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-unsat.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicemetric-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceMetricHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DeviceMetric)result).getId())) {
  		 duplicates.put(((DeviceMetric)result).getId(), ((DeviceMetric)result).getId());
  	 } else {
  		 ((DeviceMetric)result).setId(((DeviceMetric)result).getId() + count);
  		 duplicates.put(((DeviceMetric)result).getId(), ((DeviceMetric)result).getId());
  		 //System.out.println("Found duplicate in ... DeviceMetric " + count++);
  	 }
  	 try {
  		 devicemetricDao.create((DeviceMetric)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DeviceMetric : ../../fhir-data/examples-json/devicemetric-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-referral-method.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-referral-method.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/schedule-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/schedule-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-identity-assuranceLevel.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-identity-assuranceLevel.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-episodeofcare-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-episodeofcare-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/namingsystem.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/namingsystem.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-dicom-cid29.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-dicom-cid29.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-codesystem-content-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-codesystem-content-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-sc-coding.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-sc-coding.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0303.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0303.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/referralrequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/referralrequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-guide-dependency-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-guide-dependency-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-request-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-request-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codeableconcept.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/codeableconcept.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0308.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0308.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-plan-activity-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-plan-activity-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-censustract.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-censustract.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointmentresponse.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/appointmentresponse.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/elementdefinition-11179-DataElement-objectClassProperty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/elementdefinition-11179-DataElement-objectClassProperty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsdnasequencevariantname.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsdnasequencevariantname.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-f001-burgers.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-f001-burgers.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measure-component-a-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Measure)result).getId())) {
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  	 } else {
  		 ((Measure)result).setId(((Measure)result).getId() + count);
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  		 //System.out.println("Found duplicate in ... Measure " + count++);
  	 }
  	 try {
  		 measureDao.create((Measure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Measure : ../../fhir-data/examples-json/measure-component-a-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-plan-activity-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-plan-activity-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-task-performer-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-task-performer-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-cardiacdiet.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-cardiacdiet.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-policyholder-relationship.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-policyholder-relationship.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointment-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/appointment-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-referralrequest-reasonrefused.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-referralrequest-reasonrefused.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsphaseset.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsphaseset.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-guide-dependency-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-guide-dependency-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-bindingname.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-bindingname.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-predecessor-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-predecessor-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-map-model-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-map-model-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-search-modifier-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-search-modifier-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-expirationdate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-expirationdate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-extension-context.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-extension-context.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-payment-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-payment-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-audit-entity-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-audit-entity-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/testscript.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-is-data-element-concept.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-is-data-element-concept.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-colonoscopy-bx.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-colonoscopy-bx.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/supplydelivery.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/supplydelivery.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0301.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0301.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-subscription-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-subscription-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-filter-operator.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-filter-operator.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-implant.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-implant.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-dxa.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-dxa.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-flag-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-flag-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-satO2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-satO2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-replacedby.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-replacedby.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-flag-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-flag-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-coverage-selfpay.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-coverage-selfpay.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/heartrate-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/heartrate-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-composition-clindoc-otherconfidentiality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-composition-clindoc-otherconfidentiality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-endpoint-payload-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-endpoint-payload-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/binary-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BinaryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Binary)result).getId())) {
  		 duplicates.put(((Binary)result).getId(), ((Binary)result).getId());
  	 } else {
  		 ((Binary)result).setId(((Binary)result).getId() + count);
  		 duplicates.put(((Binary)result).getId(), ((Binary)result).getId());
  		 //System.out.println("Found duplicate in ... Binary " + count++);
  	 }
  	 try {
  		 binaryDao.create((Binary)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Binary : ../../fhir-data/examples-json/binary-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-ihe-pcd.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-ihe-pcd.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-genetics-2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-genetics-2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-binding-strength.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-binding-strength.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-iso-21089-lifecycle.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-iso-21089-lifecycle.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-pharmacy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-pharmacy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-assert-direction-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-assert-direction-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0302.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0302.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-product.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-product.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-required-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-required-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operationdefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/operationdefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-minoccurs.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-minoccurs.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-fundsreserve.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-fundsreserve.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-signature-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-signature-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-genetics-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/procedurerequest-genetics-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-list-empty-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-list-empty-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointmentresponse-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AppointmentResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AppointmentResponse)result).getId())) {
  		 duplicates.put(((AppointmentResponse)result).getId(), ((AppointmentResponse)result).getId());
  	 } else {
  		 ((AppointmentResponse)result).setId(((AppointmentResponse)result).getId() + count);
  		 duplicates.put(((AppointmentResponse)result).getId(), ((AppointmentResponse)result).getId());
  		 //System.out.println("Found duplicate in ... AppointmentResponse " + count++);
  	 }
  	 try {
  		 appointmentresponseDao.create((AppointmentResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AppointmentResponse : ../../fhir-data/examples-json/appointmentresponse-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-extensions-Organization-alias.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/organization-extensions-Organization-alias.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/implementationguide.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/implementationguide.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodytemp-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/bodytemp-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-search-xpath-usage.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-search-xpath-usage.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-oral-orthoplan.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-oral-orthoplan.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-f001-heart.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-f001-heart.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-exclusive-breastfeeding-intervention-02.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-exclusive-breastfeeding-intervention-02.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/task-example2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TaskHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Task)result).getId())) {
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  	 } else {
  		 ((Task)result).setId(((Task)result).getId() + count);
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  		 //System.out.println("Found duplicate in ... Task " + count++);
  	 }
  	 try {
  		 taskDao.create((Task)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Task : ../../fhir-data/examples-json/task-example2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-humanname-own-name.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-humanname-own-name.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-identifier-validdate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-identifier-validdate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-conditional-delete-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-conditional-delete-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f203-bicarbonate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f203-bicarbonate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-sequence-quality-standardSequence.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-sequence-quality-standardSequence.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-task-replaces.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-task-replaces.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/binary.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/binary.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-content-derivative.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-content-derivative.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/lipidprofile-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/lipidprofile-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-hla-genotyping-results-haploid.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-hla-genotyping-results-haploid.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-c.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-c.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-body-length.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-body-length.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-genetics-comprehensive-bone-marrow-report.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-genetics-comprehensive-bone-marrow-report.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-ballot-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-ballot-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-examples-general.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/location-examples-general.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-f202-bloodculture.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-f202-bloodculture.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-allergy-verification-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-allergy-verification-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/parameterdefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/parameterdefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-teeth.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-teeth.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-nutrient-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-nutrient-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-deliveryinstallationqualifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-deliveryinstallationqualifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0329.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0329.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-unknown-content-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-unknown-content-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/graphdefinition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = GraphDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((GraphDefinition)result).getId())) {
  		 duplicates.put(((GraphDefinition)result).getId(), ((GraphDefinition)result).getId());
  	 } else {
  		 ((GraphDefinition)result).setId(((GraphDefinition)result).getId() + count);
  		 duplicates.put(((GraphDefinition)result).getId(), ((GraphDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... GraphDefinition " + count++);
  	 }
  	 try {
  		 graphdefinitionDao.create((GraphDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save GraphDefinition : ../../fhir-data/examples-json/graphdefinition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f007-sh.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f007-sh.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/task.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/task.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-consent-witness.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-consent-witness.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-enteralbolus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-enteralbolus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-immunization-recommendation-date-criterion.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-immunization-recommendation-date-criterion.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/goal-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/goal-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f003-mv.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f003-mv.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-sequence-quality-method.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-sequence-quality-method.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-effectivedate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-effectivedate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adjudication-error.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adjudication-error.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedurerequest-approachbodysite.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedurerequest-approachbodysite.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-translatable.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-translatable.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-trigger-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-trigger-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/enrollmentrequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/enrollmentrequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/riskassessment-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/riskassessment-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-location-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-location-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-rategoal.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-rategoal.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-vaccination-protocol-dose-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-vaccination-protocol-dose-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-table-name.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-table-name.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-rateincrementinterval.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-rateincrementinterval.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0317.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0317.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-namingsystem-identifier-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-namingsystem-identifier-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/medicationdispense.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-location-physical-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-location-physical-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-appendectomy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-appendectomy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-structuredefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-structuredefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-colonoscopy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-colonoscopy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-genetics-5.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-genetics-5.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-ghp.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-ghp.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-allergy-clinical-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-allergy-clinical-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example-medlist.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example-medlist.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-claim-exception.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-claim-exception.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-expirationdate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-expirationdate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-glasgow.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-glasgow.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-keyword.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-keyword.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-udi.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-udi.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contact-point-system.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contact-point-system.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/specimen-example-isolate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SpecimenHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Specimen)result).getId())) {
  		 duplicates.put(((Specimen)result).getId(), ((Specimen)result).getId());
  	 } else {
  		 ((Specimen)result).setId(((Specimen)result).getId() + count);
  		 duplicates.put(((Specimen)result).getId(), ((Specimen)result).getId());
  		 //System.out.println("Found duplicate in ... Specimen " + count++);
  	 }
  	 try {
  		 specimenDao.create((Specimen)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Specimen : ../../fhir-data/examples-json/specimen-example-isolate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/researchstudy.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/researchstudy.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-extensions-CodeSystem-author.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/codesystem-extensions-CodeSystem-author.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-nhin-purposeofuse.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-nhin-purposeofuse.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-subscription-channel-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-subscription-channel-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-actionlist.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-actionlist.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communicationrequest-example-fm-solicit-attachment.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CommunicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CommunicationRequest)result).getId())) {
  		 duplicates.put(((CommunicationRequest)result).getId(), ((CommunicationRequest)result).getId());
  	 } else {
  		 ((CommunicationRequest)result).setId(((CommunicationRequest)result).getId() + count);
  		 duplicates.put(((CommunicationRequest)result).getId(), ((CommunicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... CommunicationRequest " + count++);
  	 }
  	 try {
  		 communicationrequestDao.create((CommunicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CommunicationRequest : ../../fhir-data/examples-json/communicationrequest-example-fm-solicit-attachment.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-c80-doc-classcodes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-c80-doc-classcodes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-contact-point-use-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-contact-point-use-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/detectedissue-example-allergy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DetectedIssueHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DetectedIssue)result).getId())) {
  		 duplicates.put(((DetectedIssue)result).getId(), ((DetectedIssue)result).getId());
  	 } else {
  		 ((DetectedIssue)result).setId(((DetectedIssue)result).getId() + count);
  		 duplicates.put(((DetectedIssue)result).getId(), ((DetectedIssue)result).getId());
  		 //System.out.println("Found duplicate in ... DetectedIssue " + count++);
  	 }
  	 try {
  		 detectedissueDao.create((DetectedIssue)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DetectedIssue : ../../fhir-data/examples-json/detectedissue-example-allergy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/structuremap-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/structuremap-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-education.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-education.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ex-diagnosisrelatedgroup.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ex-diagnosisrelatedgroup.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-encounter-participant-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-encounter-participant-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-specimen-processing-procedure.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-specimen-processing-procedure.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-usage-context-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-usage-context-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-versioning-policy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-versioning-policy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-servicedefinition-evaluate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-servicedefinition-evaluate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-definitions.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/extension-definitions.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityresponse-example-benefits-2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EligibilityResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EligibilityResponse)result).getId())) {
  		 duplicates.put(((EligibilityResponse)result).getId(), ((EligibilityResponse)result).getId());
  	 } else {
  		 ((EligibilityResponse)result).setId(((EligibilityResponse)result).getId() + count);
  		 duplicates.put(((EligibilityResponse)result).getId(), ((EligibilityResponse)result).getId());
  		 //System.out.println("Found duplicate in ... EligibilityResponse " + count++);
  	 }
  	 try {
  		 eligibilityresponseDao.create((EligibilityResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EligibilityResponse : ../../fhir-data/examples-json/eligibilityresponse-example-benefits-2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-match-grade.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-match-grade.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measurereport-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/measurereport-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/slot-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/slot-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/oxygensat-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/oxygensat-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/allergyintolerance-medication.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AllergyIntoleranceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AllergyIntolerance)result).getId())) {
  		 duplicates.put(((AllergyIntolerance)result).getId(), ((AllergyIntolerance)result).getId());
  	 } else {
  		 ((AllergyIntolerance)result).setId(((AllergyIntolerance)result).getId() + count);
  		 duplicates.put(((AllergyIntolerance)result).getId(), ((AllergyIntolerance)result).getId());
  		 //System.out.println("Found duplicate in ... AllergyIntolerance " + count++);
  	 }
  	 try {
  		 allergyintoleranceDao.create((AllergyIntolerance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AllergyIntolerance : ../../fhir-data/examples-json/allergyintolerance-medication.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-search-comparator.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-search-comparator.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-contact-address.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-contact-address.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-template-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-template-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/money.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/money.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adjudication-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adjudication-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicerequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/devicerequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-integrated.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-integrated.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-clinical-impression-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-clinical-impression-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-enteralcontinuous.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-enteralcontinuous.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communication-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/communication-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-claim-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-claim-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/audit-event-example-logout.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AuditEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AuditEvent)result).getId())) {
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  	 } else {
  		 ((AuditEvent)result).setId(((AuditEvent)result).getId() + count);
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AuditEvent " + count++);
  	 }
  	 try {
  		 auditeventDao.create((AuditEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AuditEvent : ../../fhir-data/examples-json/audit-event-example-logout.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/compartmentdefinition-device.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CompartmentDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CompartmentDefinition)result).getId())) {
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  	 } else {
  		 ((CompartmentDefinition)result).setId(((CompartmentDefinition)result).getId() + count);
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... CompartmentDefinition " + count++);
  	 }
  	 try {
  		 compartmentdefinitionDao.create((CompartmentDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CompartmentDefinition : ../../fhir-data/examples-json/compartmentdefinition-device.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-detectedissue-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-detectedissue-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-note-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-note-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-location-physical-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-location-physical-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adverse-event-seriousness.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adverse-event-seriousness.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0322.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0322.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f004-rb.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f004-rb.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-stage.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-stage.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunization.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/immunization.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0327.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0327.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-operation-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-operation-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-research-subject-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-research-subject-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript-example-readtest.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TestScriptHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((TestScript)result).getId())) {
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  	 } else {
  		 ((TestScript)result).setId(((TestScript)result).getId() + count);
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  		 //System.out.println("Found duplicate in ... TestScript " + count++);
  	 }
  	 try {
  		 testscriptDao.create((TestScript)result);
  	 } catch (Exception ex) { System.err.println("Cannot save TestScript : ../../fhir-data/examples-json/testscript-example-readtest.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-medication-request-status-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-medication-request-status-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/researchsubject-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ResearchSubjectHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ResearchSubject)result).getId())) {
  		 duplicates.put(((ResearchSubject)result).getId(), ((ResearchSubject)result).getId());
  	 } else {
  		 ((ResearchSubject)result).setId(((ResearchSubject)result).getId() + count);
  		 duplicates.put(((ResearchSubject)result).getId(), ((ResearchSubject)result).getId());
  		 //System.out.println("Found duplicate in ... ResearchSubject " + count++);
  	 }
  	 try {
  		 researchsubjectDao.create((ResearchSubject)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ResearchSubject : ../../fhir-data/examples-json/researchsubject-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0313.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0313.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-condition-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-condition-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/referralrequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ReferralRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ReferralRequest)result).getId())) {
  		 duplicates.put(((ReferralRequest)result).getId(), ((ReferralRequest)result).getId());
  	 } else {
  		 ((ReferralRequest)result).setId(((ReferralRequest)result).getId() + count);
  		 duplicates.put(((ReferralRequest)result).getId(), ((ReferralRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ReferralRequest " + count++);
  	 }
  	 try {
  		 referralrequestDao.create((ReferralRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ReferralRequest : ../../fhir-data/examples-json/referralrequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-quality-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-quality-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/headcircum.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/headcircum.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunizationrecommendation-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/immunizationrecommendation-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-reference-version-rules.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-reference-version-rules.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-messageheader-response-request.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-messageheader-response-request.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operationdefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/operationdefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/practitioner-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-name-part-qualifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-name-part-qualifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/paymentreconciliation.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/paymentreconciliation.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-content-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-content-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-list-example-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-list-example-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedure-progressstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedure-progressstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-statement-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-statement-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/procedure-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/basic-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BasicHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Basic)result).getId())) {
  		 duplicates.put(((Basic)result).getId(), ((Basic)result).getId());
  	 } else {
  		 ((Basic)result).setId(((Basic)result).getId() + count);
  		 duplicates.put(((Basic)result).getId(), ((Basic)result).getId());
  		 //System.out.println("Found duplicate in ... Basic " + count++);
  	 }
  	 try {
  		 basicDao.create((Basic)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Basic : ../../fhir-data/examples-json/basic-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-question-max-occurs.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-question-max-occurs.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/provenance-example-cwl.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProvenanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Provenance)result).getId())) {
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  	 } else {
  		 ((Provenance)result).setId(((Provenance)result).getId() + count);
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  		 //System.out.println("Found duplicate in ... Provenance " + count++);
  	 }
  	 try {
  		 provenanceDao.create((Provenance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Provenance : ../../fhir-data/examples-json/provenance-example-cwl.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-selector.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-selector.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-digital-media-subtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-digital-media-subtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medication-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/medication-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f001-evdb.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f001-evdb.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-objectclassproperty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-objectclassproperty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-supplyrequest-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-supplyrequest-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-trusted-expansion.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-trusted-expansion.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-openehr-exposureduration.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-openehr-exposureduration.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-parent-relationship-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-parent-relationship-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-pt.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-pt.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-history-not-done-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-history-not-done-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-bloodpressure-dar.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-bloodpressure-dar.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/decimal.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/decimal.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-resource-slicing-rules.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-resource-slicing-rules.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/relatedperson-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/relatedperson-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript-example-search.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TestScriptHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((TestScript)result).getId())) {
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  	 } else {
  		 ((TestScript)result).setId(((TestScript)result).getId() + count);
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  		 //System.out.println("Found duplicate in ... TestScript " + count++);
  	 }
  	 try {
  		 testscriptDao.create((TestScript)result);
  	 } catch (Exception ex) { System.err.println("Cannot save TestScript : ../../fhir-data/examples-json/testscript-example-search.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/list.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-referencerange-meaning.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-referencerange-meaning.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LocationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Location)result).getId())) {
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  	 } else {
  		 ((Location)result).setId(((Location)result).getId() + count);
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  		 //System.out.println("Found duplicate in ... Location " + count++);
  	 }
  	 try {
  		 locationDao.create((Location)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Location : ../../fhir-data/examples-json/location-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0332.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0332.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-basic-resource-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-basic-resource-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/dataelement-labtestmaster-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DataElementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DataElement)result).getId())) {
  		 duplicates.put(((DataElement)result).getId(), ((DataElement)result).getId());
  	 } else {
  		 ((DataElement)result).setId(((DataElement)result).getId() + count);
  		 duplicates.put(((DataElement)result).getId(), ((DataElement)result).getId());
  		 //System.out.println("Found duplicate in ... DataElement " + count++);
  	 }
  	 try {
  		 dataelementDao.create((DataElement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DataElement : ../../fhir-data/examples-json/dataelement-labtestmaster-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-extensions-ValueSet-workflow.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/valueset-extensions-ValueSet-workflow.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-diet-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-diet-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coverage-example-ehic.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CoverageHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Coverage)result).getId())) {
  		 duplicates.put(((Coverage)result).getId(), ((Coverage)result).getId());
  	 } else {
  		 ((Coverage)result).setId(((Coverage)result).getId() + count);
  		 duplicates.put(((Coverage)result).getId(), ((Coverage)result).getId());
  		 //System.out.println("Found duplicate in ... Coverage " + count++);
  	 }
  	 try {
  		 coverageDao.create((Coverage)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Coverage : ../../fhir-data/examples-json/coverage-example-ehic.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-conditional-read-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-conditional-read-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/contactpoint.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/contactpoint.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-conceptorder.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-conceptorder.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-use-context.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-use-context.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-document-reference.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-document-reference.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-provenance-entity-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-provenance-entity-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-benefit-network.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-benefit-network.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/observation.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-choiceorientation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-choiceorientation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0311.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0311.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0313.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0313.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/base64binary.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/base64binary.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-allergy-intolerance-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-allergy-intolerance-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/event.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/event.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-5minute-apgar-score.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-5minute-apgar-score.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicecomponent-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/devicecomponent-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-metric-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-metric-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-reference.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-reference.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-ex-revenue-center.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-ex-revenue-center.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-fm-conditions.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-fm-conditions.json due to " + ex.getMessage()); }
  	System.out.println("Total tests .. " + count);
  }
  @Test
  public void test1240() throws Exception {
  	 inputFile = "../../fhir-data/examples-json/extension-devicerequest-patientinstruction.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-devicerequest-patientinstruction.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-comments.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-comments.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-system-restful-interaction.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-system-restful-interaction.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-administrative-gender.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-administrative-gender.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-humanname-assembly-order.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-humanname-assembly-order.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-detectedissue-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-detectedissue-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/shareablevalueset.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/shareablevalueset.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-resource-lastreviewdate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-resource-lastreviewdate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/imagingstudy.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/imagingstudy.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0325.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0325.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaireresponse-author.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaireresponse-author.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/duration.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/duration.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-allergy-intolerance-criticality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-allergy-intolerance-criticality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-subscription-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-subscription-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-actionlist.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-actionlist.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatementexample1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationStatement)result).getId())) {
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  	 } else {
  		 ((MedicationStatement)result).setId(((MedicationStatement)result).getId() + count);
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationStatement " + count++);
  	 }
  	 try {
  		 medicationstatementDao.create((MedicationStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationStatement : ../../fhir-data/examples-json/medicationstatementexample1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-interpretation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-interpretation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-detectedissue-mitigation-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-detectedissue-mitigation-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-fm-itemtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-fm-itemtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/unsignedint.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/unsignedint.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0304.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0304.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-predecessor-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-predecessor-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-proteinsupplement.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-proteinsupplement.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-usage.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-usage.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-plan-definition-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-plan-definition-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/imagingstudy-example-xr.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImagingStudyHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ImagingStudy)result).getId())) {
  		 duplicates.put(((ImagingStudy)result).getId(), ((ImagingStudy)result).getId());
  	 } else {
  		 ((ImagingStudy)result).setId(((ImagingStudy)result).getId() + count);
  		 duplicates.put(((ImagingStudy)result).getId(), ((ImagingStudy)result).getId());
  		 //System.out.println("Found duplicate in ... ImagingStudy " + count++);
  	 }
  	 try {
  		 imagingstudyDao.create((ImagingStudy)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ImagingStudy : ../../fhir-data/examples-json/imagingstudy-example-xr.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-content-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-content-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-effectivedate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-effectivedate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-measure-report-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-measure-report-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-team-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-team-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-genetics-example1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-genetics-example1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-colon-biopsy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-colon-biopsy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-request-intent.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-request-intent.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-streetnamebase.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-streetnamebase.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-organization-alias.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-organization-alias.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-activitydefinition-apply.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-activitydefinition-apply.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-vision-eye-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-vision-eye-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/linkage-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/linkage-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ucum-vitals-common.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ucum-vitals-common.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-registry-org.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-registry-org.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-label.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-label.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-plan-activity-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-plan-activity-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example-familyhistory-genetics-profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example-familyhistory-genetics-profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-search-comparator.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-search-comparator.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-address-use-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-address-use-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-graphic-example-4.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-graphic-example-4.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-formatcodes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-formatcodes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-communication-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-communication-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/count.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/count.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0306.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0306.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/resprate.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/resprate.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-capability-statement-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-capability-statement-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-goal-relationship.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-goal-relationship.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodyheight-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/bodyheight-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-display-hint.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-display-hint.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-message-significance-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-message-significance-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/chargeitem.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/chargeitem.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-account-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-account-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-usagemode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-usagemode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/ldlcholesterol-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/ldlcholesterol-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-consent-except-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-consent-except-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0303.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0303.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-task-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-task-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communication-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CommunicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Communication)result).getId())) {
  		 duplicates.put(((Communication)result).getId(), ((Communication)result).getId());
  	 } else {
  		 ((Communication)result).setId(((Communication)result).getId() + count);
  		 duplicates.put(((Communication)result).getId(), ((Communication)result).getId());
  		 //System.out.println("Found duplicate in ... Communication " + count++);
  	 }
  	 try {
  		 communicationDao.create((Communication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Communication : ../../fhir-data/examples-json/communication-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/relatedperson-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RelatedPersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RelatedPerson)result).getId())) {
  		 duplicates.put(((RelatedPerson)result).getId(), ((RelatedPerson)result).getId());
  	 } else {
  		 ((RelatedPerson)result).setId(((RelatedPerson)result).getId() + count);
  		 duplicates.put(((RelatedPerson)result).getId(), ((RelatedPerson)result).getId());
  		 //System.out.println("Found duplicate in ... RelatedPerson " + count++);
  	 }
  	 try {
  		 relatedpersonDao.create((RelatedPerson)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RelatedPerson : ../../fhir-data/examples-json/relatedperson-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-procedure-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-procedure-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/timing.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/timing.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-appointmentstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-appointmentstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0324.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0324.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-questionnaire-populatelink.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-questionnaire-populatelink.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-chargeitem-billingcodes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-chargeitem-billingcodes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityrequest-example-2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EligibilityRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EligibilityRequest)result).getId())) {
  		 duplicates.put(((EligibilityRequest)result).getId(), ((EligibilityRequest)result).getId());
  	 } else {
  		 ((EligibilityRequest)result).setId(((EligibilityRequest)result).getId() + count);
  		 duplicates.put(((EligibilityRequest)result).getId(), ((EligibilityRequest)result).getId());
  		 //System.out.println("Found duplicate in ... EligibilityRequest " + count++);
  	 }
  	 try {
  		 eligibilityrequestDao.create((EligibilityRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EligibilityRequest : ../../fhir-data/examples-json/eligibilityrequest-example-2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sampleddata.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/sampleddata.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0306.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0306.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0314.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0314.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-quantity-comparator.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-quantity-comparator.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-dispense-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-dispense-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-questionnaire-display-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-questionnaire-display-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-example-expansion.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-example-expansion.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-housenumbernumeric.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-housenumbernumeric.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/supplydelivery-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/supplydelivery-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-network-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-network-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-teeth.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-teeth.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/binary-f006.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BinaryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Binary)result).getId())) {
  		 duplicates.put(((Binary)result).getId(), ((Binary)result).getId());
  	 } else {
  		 ((Binary)result).setId(((Binary)result).getId() + count);
  		 duplicates.put(((Binary)result).getId(), ((Binary)result).getId());
  		 //System.out.println("Found duplicate in ... Binary " + count++);
  	 }
  	 try {
  		 binaryDao.create((Binary)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Binary : ../../fhir-data/examples-json/binary-f006.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-genetics-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/observation-genetics-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/specimen-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/specimen-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-a.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-a.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-procedure-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-procedure-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-time-offset.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-time-offset.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/document-example-dischargesummary.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/document-example-dischargesummary.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-partof.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-partof.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example-f201-20130404.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example-f201-20130404.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0309.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0309.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0318.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0318.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-genetic-Observation-gene-amino-acid-change.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/observation-genetic-Observation-gene-amino-acid-change.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/basic.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/basic.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-familymemberhistory-patient-record.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-familymemberhistory-patient-record.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/search-parameters.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/search-parameters.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-f002-lung.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-f002-lung.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/clinicaldocument.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/clinicaldocument.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/searchparameter-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/searchparameter-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-map.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-map.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-extra-activity-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-extra-activity-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/substance-example-f202-staphylococcus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SubstanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Substance)result).getId())) {
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  	 } else {
  		 ((Substance)result).setId(((Substance)result).getId() + count);
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  		 //System.out.println("Found duplicate in ... Substance " + count++);
  	 }
  	 try {
  		 substanceDao.create((Substance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Substance : ../../fhir-data/examples-json/substance-example-f202-staphylococcus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-f203-sepsis.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-f203-sepsis.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-device-din.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-device-din.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-assert-response-code-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-assert-response-code-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-system-version-processing-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-system-version-processing-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-search-param-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-search-param-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-openehr-test.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-openehr-test.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-structure-definition-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-structure-definition-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-deliveryinstallationarea.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-deliveryinstallationarea.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communication-example-fm-attachment.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CommunicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Communication)result).getId())) {
  		 duplicates.put(((Communication)result).getId(), ((Communication)result).getId());
  	 } else {
  		 ((Communication)result).setId(((Communication)result).getId() + count);
  		 duplicates.put(((Communication)result).getId(), ((Communication)result).getId());
  		 //System.out.println("Found duplicate in ... Communication " + count++);
  	 }
  	 try {
  		 communicationDao.create((Communication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Communication : ../../fhir-data/examples-json/communication-example-fm-attachment.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-example-f001-feedingtube.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Device)result).getId())) {
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  	 } else {
  		 ((Device)result).setId(((Device)result).getId() + count);
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  		 //System.out.println("Found duplicate in ... Device " + count++);
  	 }
  	 try {
  		 deviceDao.create((Device)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Device : ../../fhir-data/examples-json/device-example-f001-feedingtube.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/media-example-dicom.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MediaHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Media)result).getId())) {
  		 duplicates.put(((Media)result).getId(), ((Media)result).getId());
  	 } else {
  		 ((Media)result).setId(((Media)result).getId() + count);
  		 duplicates.put(((Media)result).getId(), ((Media)result).getId());
  		 //System.out.println("Found duplicate in ... Media " + count++);
  	 }
  	 try {
  		 mediaDao.create((Media)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Media : ../../fhir-data/examples-json/media-example-dicom.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-communicationrequest-relevanthistory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-communicationrequest-relevanthistory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-examples-cypress-template.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/patient-examples-cypress-template.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contact-point-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contact-point-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-example-ihe-pcd.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Device)result).getId())) {
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  	 } else {
  		 ((Device)result).setId(((Device)result).getId() + count);
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  		 //System.out.println("Found duplicate in ... Device " + count++);
  	 }
  	 try {
  		 deviceDao.create((Device)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Device : ../../fhir-data/examples-json/device-example-ihe-pcd.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/bundle.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/requestgroup-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RequestGroupHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RequestGroup)result).getId())) {
  		 duplicates.put(((RequestGroup)result).getId(), ((RequestGroup)result).getId());
  	 } else {
  		 ((RequestGroup)result).setId(((RequestGroup)result).getId() + count);
  		 duplicates.put(((RequestGroup)result).getId(), ((RequestGroup)result).getId());
  		 //System.out.println("Found duplicate in ... RequestGroup " + count++);
  	 }
  	 try {
  		 requestgroupDao.create((RequestGroup)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RequestGroup : ../../fhir-data/examples-json/requestgroup-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-participant-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-participant-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Device)result).getId())) {
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  	 } else {
  		 ((Device)result).setId(((Device)result).getId() + count);
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  		 //System.out.println("Found duplicate in ... Device " + count++);
  	 }
  	 try {
  		 deviceDao.create((Device)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Device : ../../fhir-data/examples-json/device-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-specimen-isdryweight.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-specimen-isdryweight.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-deprecated.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-deprecated.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-endpoint-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-endpoint-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicemetric.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/devicemetric.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/signature.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/signature.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-concept-properties.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-concept-properties.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-pregnancy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-pregnancy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-rendering-style.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-rendering-style.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-subscription-channel-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-subscription-channel-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaire-zika-virus-exposure-assessment.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/questionnaire-zika-virus-exposure-assessment.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/messagedefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/messagedefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-subtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-subtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-forms.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-forms.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-forms.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-forms.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/namingsystem-terminologies.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/namingsystem-terminologies.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-cpt-all.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-cpt-all.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/request.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/request.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/clinicaldocument-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/clinicaldocument-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/vitalsigns-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/vitalsigns-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-precheck-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-precheck-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0319.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0319.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-precinct.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-precinct.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/headcircum-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/headcircum-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-clinicalimpression-prognosis.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-clinicalimpression-prognosis.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claimresponse-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/claimresponse-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-administration-method-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-administration-method-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-vitalsignresult.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-vitalsignresult.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-oral-contained.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-oral-contained.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consentdirective-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/consentdirective-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsgene.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsgene.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-focal-subject.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-focal-subject.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-lipid.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-lipid.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-oral-prosthodontic-material.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-oral-prosthodontic-material.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodyheight.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/bodyheight.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/imagingstudy-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/imagingstudy-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-institutional.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-institutional.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-unit.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-unit.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/task-example6.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TaskHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Task)result).getId())) {
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  	 } else {
  		 ((Task)result).setId(((Task)result).getId() + count);
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  		 //System.out.println("Found duplicate in ... Task " + count++);
  	 }
  	 try {
  		 taskDao.create((Task)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Task : ../../fhir-data/examples-json/task-example6.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-guidance-response-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-guidance-response-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-flag-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-flag-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/sequence.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-entformula-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-entformula-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-sequence-referenceSeq.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-sequence-referenceSeq.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityresponse-example-benefits.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EligibilityResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EligibilityResponse)result).getId())) {
  		 duplicates.put(((EligibilityResponse)result).getId(), ((EligibilityResponse)result).getId());
  	 } else {
  		 ((EligibilityResponse)result).setId(((EligibilityResponse)result).getId() + count);
  		 duplicates.put(((EligibilityResponse)result).getId(), ((EligibilityResponse)result).getId());
  		 //System.out.println("Found duplicate in ... EligibilityResponse " + count++);
  	 }
  	 try {
  		 eligibilityresponseDao.create((EligibilityResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EligibilityResponse : ../../fhir-data/examples-json/eligibilityresponse-example-benefits.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-methods.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-methods.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-library-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-library-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-request-intent.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-request-intent.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-audit-event-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-audit-event-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-flag-detail.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-flag-detail.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-device-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-device-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-dicm-405-mediatype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-dicm-405-mediatype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/goal-example-stop-smoking.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = GoalHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Goal)result).getId())) {
  		 duplicates.put(((Goal)result).getId(), ((Goal)result).getId());
  	 } else {
  		 ((Goal)result).setId(((Goal)result).getId() + count);
  		 duplicates.put(((Goal)result).getId(), ((Goal)result).getId());
  		 //System.out.println("Found duplicate in ... Goal " + count++);
  	 }
  	 try {
  		 goalDao.create((Goal)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Goal : ../../fhir-data/examples-json/goal-example-stop-smoking.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-codesystem-subsumes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-codesystem-subsumes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/goal.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/goal.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-xds.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-xds.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-payment-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-payment-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-f204-renal.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-f204-renal.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/pcd-example-notAuthor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ContractHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Contract)result).getId())) {
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  	 } else {
  		 ((Contract)result).setId(((Contract)result).getId() + count);
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  		 //System.out.println("Found duplicate in ... Contract " + count++);
  	 }
  	 try {
  		 contractDao.create((Contract)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Contract : ../../fhir-data/examples-json/pcd-example-notAuthor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-diagnosticreport-addendumof.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-diagnosticreport-addendumof.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-eventtiming.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-eventtiming.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-goal-relationship-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-goal-relationship-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/triggerdefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/triggerdefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0310.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0310.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-location-distance.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-location-distance.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/v3-codesystems.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/v3-codesystems.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-f003-burgers-ENT.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-f003-burgers-ENT.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-request-intent.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-request-intent.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-glasgow-qa.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-glasgow-qa.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-resource-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-resource-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0301.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0301.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/imagingmanifest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/imagingmanifest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-capabilitystatement-implements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-capabilitystatement-implements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-history-not-done-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-history-not-done-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f204-creatinine.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f204-creatinine.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/paymentnotice.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/paymentnotice.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-name-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-name-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0320.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0320.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/goal-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = GoalHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Goal)result).getId())) {
  		 duplicates.put(((Goal)result).getId(), ((Goal)result).getId());
  	 } else {
  		 ((Goal)result).setId(((Goal)result).getId() + count);
  		 duplicates.put(((Goal)result).getId(), ((Goal)result).getId());
  		 //System.out.println("Found duplicate in ... Goal " + count++);
  	 }
  	 try {
  		 goalDao.create((Goal)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Goal : ../../fhir-data/examples-json/goal-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-haplotype2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-haplotype2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-auditevent-participantobjectcontainsstudy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-auditevent-participantobjectcontainsstudy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-measure-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-measure-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-GPVisit.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-GPVisit.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-origin.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-origin.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-payment-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-payment-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-metric-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-metric-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-resource-validation-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-resource-validation-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-examples-general.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/practitioner-examples-general.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-additionalmaterials.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-additionalmaterials.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/attachment.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/attachment.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatementexample6.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationStatement)result).getId())) {
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  	 } else {
  		 ((MedicationStatement)result).setId(((MedicationStatement)result).getId() + count);
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationStatement " + count++);
  	 }
  	 try {
  		 medicationstatementDao.create((MedicationStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationStatement : ../../fhir-data/examples-json/medicationstatementexample6.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-rdf-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-rdf-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/auditevent-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AuditEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AuditEvent)result).getId())) {
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  	 } else {
  		 ((AuditEvent)result).setId(((AuditEvent)result).getId() + count);
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AuditEvent " + count++);
  	 }
  	 try {
  		 auditeventDao.create((AuditEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AuditEvent : ../../fhir-data/examples-json/auditevent-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-xcda-author.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-xcda-author.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0304.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0304.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/profiles-resources.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/profiles-resources.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedure-approachbodysite.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedure-approachbodysite.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-substance-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-substance-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/element.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/element.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-list-find.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-list-find.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-assert-response-code-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-assert-response-code-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/allergyintolerance-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/allergyintolerance-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-ordinalvalue.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-ordinalvalue.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-genetics-example-2-familyhistory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-genetics-example-2-familyhistory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/documentreference.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/documentreference.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-conditional-read-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-conditional-read-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-narrative-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-narrative-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coverage.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/coverage.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0330.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0330.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-f002-burgers-card.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-f002-burgers-card.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-rendering-xhtml.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-rendering-xhtml.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-extensions-Condition-based-on.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/condition-extensions-Condition-based-on.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f204-ce.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f204-ce.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-statement-taken.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-statement-taken.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-pharmacy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-pharmacy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityresponse-example-error.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EligibilityResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EligibilityResponse)result).getId())) {
  		 duplicates.put(((EligibilityResponse)result).getId(), ((EligibilityResponse)result).getId());
  	 } else {
  		 ((EligibilityResponse)result).setId(((EligibilityResponse)result).getId() + count);
  		 duplicates.put(((EligibilityResponse)result).getId(), ((EligibilityResponse)result).getId());
  		 //System.out.println("Found duplicate in ... EligibilityResponse " + count++);
  	 }
  	 try {
  		 eligibilityresponseDao.create((EligibilityResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EligibilityResponse : ../../fhir-data/examples-json/eligibilityresponse-example-error.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-notAuthor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-notAuthor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0307.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0307.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-guide-page-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-guide-page-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-benefit-subcategory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-benefit-subcategory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ucum-bodyweight.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ucum-bodyweight.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-disability.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-disability.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-auditevent-encrypted.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-auditevent-encrypted.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-capabilitystatement-subset.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-capabilitystatement-subset.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measure-exclusive-breastfeeding.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Measure)result).getId())) {
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  	 } else {
  		 ((Measure)result).setId(((Measure)result).getId() + count);
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  		 //System.out.println("Found duplicate in ... Measure " + count++);
  	 }
  	 try {
  		 measureDao.create((Measure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Measure : ../../fhir-data/examples-json/measure-exclusive-breastfeeding.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-bodysite-laterality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-bodysite-laterality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/servicedefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/servicedefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-dataelement-stringency.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-dataelement-stringency.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/encounter.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adverse-event-causality-method.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adverse-event-causality-method.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-example-room.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LocationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Location)result).getId())) {
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  	 } else {
  		 ((Location)result).setId(((Location)result).getId() + count);
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  		 //System.out.println("Found duplicate in ... Location " + count++);
  	 }
  	 try {
  		 locationDao.create((Location)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Location : ../../fhir-data/examples-json/location-example-room.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processresponse-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessResponse)result).getId())) {
  		 duplicates.put(((ProcessResponse)result).getId(), ((ProcessResponse)result).getId());
  	 } else {
  		 ((ProcessResponse)result).setId(((ProcessResponse)result).getId() + count);
  		 duplicates.put(((ProcessResponse)result).getId(), ((ProcessResponse)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessResponse " + count++);
  	 }
  	 try {
  		 processresponseDao.create((ProcessResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessResponse : ../../fhir-data/examples-json/processresponse-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-resource-type-link.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-resource-type-link.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-energysupplement.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-energysupplement.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-quantity-comparator.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-quantity-comparator.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/slot.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/slot.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsallelename.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsallelename.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-composite-measure-scoring.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-composite-measure-scoring.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-condition-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-condition-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-humanname-fathers-family.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-humanname-fathers-family.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-device-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-device-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-maxsize.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-maxsize.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-f201-renal.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-f201-renal.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-communicationrequest-orderedby.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-communicationrequest-orderedby.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-event-partof.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-event-partof.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ex-program-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ex-program-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-systemref.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-systemref.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-operation-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-operation-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-subrequest.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-subrequest.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-chlamydia-screening-intervention.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-chlamydia-screening-intervention.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-group-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-group-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-quick-model-definition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-quick-model-definition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/resprate-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/resprate-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-auditevent-mpps.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-auditevent-mpps.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-procedure-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-procedure-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaireresponse-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((QuestionnaireResponse)result).getId())) {
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  	 } else {
  		 ((QuestionnaireResponse)result).setId(((QuestionnaireResponse)result).getId() + count);
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  		 //System.out.println("Found duplicate in ... QuestionnaireResponse " + count++);
  	 }
  	 try {
  		 questionnaireresponseDao.create((QuestionnaireResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save QuestionnaireResponse : ../../fhir-data/examples-json/questionnaireresponse-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatementexample4.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationStatement)result).getId())) {
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  	 } else {
  		 ((MedicationStatement)result).setId(((MedicationStatement)result).getId() + count);
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationStatement " + count++);
  	 }
  	 try {
  		 medicationstatementDao.create((MedicationStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationStatement : ../../fhir-data/examples-json/medicationstatementexample4.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-benefit-unit.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-benefit-unit.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-payment-adjustment-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-payment-adjustment-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-cqif-recommendation-strength.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-cqif-recommendation-strength.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-ex-paymenttype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-ex-paymenttype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example-reprocess.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example-reprocess.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-list-order.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-list-order.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/visionprescription-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/visionprescription-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-capabilitystatement-expectation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-capabilitystatement-expectation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adverse-event-causality-result.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adverse-event-causality-result.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-audit-event-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-audit-event-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-f201-roel.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-f201-roel.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-supplement-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-supplement-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/vitalspanel.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/vitalspanel.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-ultrasound.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-ultrasound.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-identity-assuranceLevel.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-identity-assuranceLevel.json due to " + ex.getMessage()); }
  	System.out.println("Total tests .. " + count);
  }
  @Test
  public void test1550() throws Exception {
  	 inputFile = "../../fhir-data/examples-json/structuredefinition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/structuredefinition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-organization-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-organization-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-genetic-DiagnosticReport-assessed-condition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/diagnosticreport-genetic-DiagnosticReport-assessed-condition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-benefit-term.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-benefit-term.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-substance-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-substance-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/time.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/time.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-encounter-diet.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-encounter-diet.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-animal-species.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-animal-species.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-uscls.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-uscls.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-ob.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-ob.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/medicationrequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-goal-reasonrejected.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-goal-reasonrejected.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-TPMT-diplotype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-TPMT-diplotype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-admin-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-admin-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-diagnosticreport-extends.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-diagnosticreport-extends.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-goal-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-goal-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/imagingstudy-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImagingStudyHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ImagingStudy)result).getId())) {
  		 duplicates.put(((ImagingStudy)result).getId(), ((ImagingStudy)result).getId());
  	 } else {
  		 ((ImagingStudy)result).setId(((ImagingStudy)result).getId() + count);
  		 duplicates.put(((ImagingStudy)result).getId(), ((ImagingStudy)result).getId());
  		 //System.out.println("Found duplicate in ... ImagingStudy " + count++);
  	 }
  	 try {
  		 imagingstudyDao.create((ImagingStudy)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ImagingStudy : ../../fhir-data/examples-json/imagingstudy-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-example-udi4.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Device)result).getId())) {
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  	 } else {
  		 ((Device)result).setId(((Device)result).getId() + count);
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  		 //System.out.println("Found duplicate in ... Device " + count++);
  	 }
  	 try {
  		 deviceDao.create((Device)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Device : ../../fhir-data/examples-json/device-example-udi4.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/uri.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/uri.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/date.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/date.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-communication-media.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-communication-media.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/person-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/person-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0314.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0314.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-specimen-sequencenumber.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-specimen-sequencenumber.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-f203-bumc.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-f203-bumc.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedurerequest-reasonrejected.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedurerequest-reasonrejected.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-focal-subject.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-focal-subject.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-flag-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-flag-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-filter-operator.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-filter-operator.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0301.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0301.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-religion.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-religion.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-relationship.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-relationship.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-item-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-item-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/namingsystem-registry.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/namingsystem-registry.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-predecessor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-predecessor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adverse-event-causality-method.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adverse-event-causality-method.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/code.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/code.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-organization-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-organization-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0325.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0325.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-choice-list-orientation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-choice-list-orientation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communicationrequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/communicationrequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/subscription-example-error.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SubscriptionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Subscription)result).getId())) {
  		 duplicates.put(((Subscription)result).getId(), ((Subscription)result).getId());
  	 } else {
  		 ((Subscription)result).setId(((Subscription)result).getId() + count);
  		 duplicates.put(((Subscription)result).getId(), ((Subscription)result).getId());
  		 //System.out.println("Found duplicate in ... Subscription " + count++);
  	 }
  	 try {
  		 subscriptionDao.create((Subscription)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Subscription : ../../fhir-data/examples-json/subscription-example-error.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-c80-doc-typecodes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-c80-doc-typecodes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/procedurerequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-plan-definition-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-plan-definition-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/endpoint.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/endpoint.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-namespace.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-namespace.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedure-incisiondatetime.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedure-incisiondatetime.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodysite-example-tumor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BodySiteHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((BodySite)result).getId())) {
  		 duplicates.put(((BodySite)result).getId(), ((BodySite)result).getId());
  	 } else {
  		 ((BodySite)result).setId(((BodySite)result).getId() + count);
  		 duplicates.put(((BodySite)result).getId(), ((BodySite)result).getId());
  		 //System.out.println("Found duplicate in ... BodySite " + count++);
  	 }
  	 try {
  		 bodysiteDao.create((BodySite)result);
  	 } catch (Exception ex) { System.err.println("Cannot save BodySite : ../../fhir-data/examples-json/bodysite-example-tumor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-conceptmap-unmapped-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-conceptmap-unmapped-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-identifier-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-identifier-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-detectedissue-severity-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-detectedissue-severity-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/group-example-member.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = GroupHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Group)result).getId())) {
  		 duplicates.put(((Group)result).getId(), ((Group)result).getId());
  	 } else {
  		 ((Group)result).setId(((Group)result).getId() + count);
  		 duplicates.put(((Group)result).getId(), ((Group)result).getId());
  		 //System.out.println("Found duplicate in ... Group " + count++);
  	 }
  	 try {
  		 groupDao.create((Group)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Group : ../../fhir-data/examples-json/group-example-member.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/composition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CompositionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Composition)result).getId())) {
  		 duplicates.put(((Composition)result).getId(), ((Composition)result).getId());
  	 } else {
  		 ((Composition)result).setId(((Composition)result).getId() + count);
  		 duplicates.put(((Composition)result).getId(), ((Composition)result).getId());
  		 //System.out.println("Found duplicate in ... Composition " + count++);
  	 }
  	 try {
  		 compositionDao.create((Composition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Composition : ../../fhir-data/examples-json/composition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-notThem.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-notThem.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-binding-strength.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-binding-strength.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-rendered-value.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-rendered-value.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-trigger-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-trigger-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-ambulation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-ambulation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-intervention.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-intervention.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-extensions-CodeSystem-keyword.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/codesystem-extensions-CodeSystem-keyword.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-relationship-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-relationship-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-publication-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-publication-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/allergyintolerance.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/allergyintolerance.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-fiberrestricteddiet.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-fiberrestricteddiet.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedure-method.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedure-method.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/compartmentdefinition-patient.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CompartmentDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CompartmentDefinition)result).getId())) {
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  	 } else {
  		 ((CompartmentDefinition)result).setId(((CompartmentDefinition)result).getId() + count);
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... CompartmentDefinition " + count++);
  	 }
  	 try {
  		 compartmentdefinitionDao.create((CompartmentDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CompartmentDefinition : ../../fhir-data/examples-json/compartmentdefinition-patient.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-f003-abscess.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-f003-abscess.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-operationoutcome-issue-source.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-operationoutcome-issue-source.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-event-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-event-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle-transaction.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/bundle-transaction.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-definition-topic.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-definition-topic.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example-f003-abscess.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example-f003-abscess.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-compartment-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-compartment-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-probability-distribution-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-probability-distribution-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-modifiers.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-modifiers.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaireresponse-note.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaireresponse-note.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-consent-notificationendpoint.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-consent-notificationendpoint.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-udi-entry-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-udi-entry-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-device-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-device-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-map-input-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-map-input-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-supplydelivery-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-supplydelivery-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ex-revenue-center.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ex-revenue-center.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-sequence-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-sequence-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0318.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0318.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-label.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-label.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-consent-data-meaning.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-consent-data-meaning.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/visionprescription.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/visionprescription.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/account.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/account.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example-poll-exclusive.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example-poll-exclusive.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-2minute-apgar-score.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-2minute-apgar-score.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-library-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-library-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-annotation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-annotation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/graphdefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/graphdefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-hidden.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-hidden.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/substance-example-amoxicillin-clavulanate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SubstanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Substance)result).getId())) {
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  	 } else {
  		 ((Substance)result).setId(((Substance)result).getId() + count);
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  		 //System.out.println("Found duplicate in ... Substance " + count++);
  	 }
  	 try {
  		 substanceDao.create((Substance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Substance : ../../fhir-data/examples-json/substance-example-amoxicillin-clavulanate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-supplydelivery-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-supplydelivery-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-refillsremaining.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-refillsremaining.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-cms146-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-cms146-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-openehr-exposuredate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-openehr-exposuredate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-optionprefix.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-optionprefix.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-f003-abscess.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-f003-abscess.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0326.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0326.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/supplyrequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/supplyrequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-specimen-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-specimen-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-composition-attestation-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-composition-attestation-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-terminology-server.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CapabilityStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CapabilityStatement)result).getId())) {
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  	 } else {
  		 ((CapabilityStatement)result).setId(((CapabilityStatement)result).getId() + count);
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  		 //System.out.println("Found duplicate in ... CapabilityStatement " + count++);
  	 }
  	 try {
  		 capabilitystatementDao.create((CapabilityStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CapabilityStatement : ../../fhir-data/examples-json/capabilitystatement-terminology-server.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-encounter-admit-source.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-encounter-admit-source.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-plan-intent.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-plan-intent.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-chromosome-human.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-chromosome-human.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-diet.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-diet.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-signature.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-signature.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-maxdeliveryvolume.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-maxdeliveryvolume.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-reference-handling-policy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-reference-handling-policy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/searchparameter-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/searchparameter-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-endpoint-connection-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-endpoint-connection-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-specification-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-specification-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-example-patients-home.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LocationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Location)result).getId())) {
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  	 } else {
  		 ((Location)result).setId(((Location)result).getId() + count);
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  		 //System.out.println("Found duplicate in ... Location " + count++);
  	 }
  	 try {
  		 locationDao.create((Location)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Location : ../../fhir-data/examples-json/location-example-patients-home.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/procedure.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-date-lastmp.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-date-lastmp.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-criticality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-criticality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/group-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/group-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-conformance-expectation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-conformance-expectation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/consent.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/processrequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-document-relationship-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-document-relationship-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0335.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0335.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f205-egfr.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f205-egfr.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-messagedefinition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CapabilityStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CapabilityStatement)result).getId())) {
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  	 } else {
  		 ((CapabilityStatement)result).setId(((CapabilityStatement)result).getId() + count);
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  		 //System.out.println("Found duplicate in ... CapabilityStatement " + count++);
  	 }
  	 try {
  		 capabilitystatementDao.create((CapabilityStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CapabilityStatement : ../../fhir-data/examples-json/capabilitystatement-messagedefinition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/messagedefinition-patient-link-notification.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MessageDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MessageDefinition)result).getId())) {
  		 duplicates.put(((MessageDefinition)result).getId(), ((MessageDefinition)result).getId());
  	 } else {
  		 ((MessageDefinition)result).setId(((MessageDefinition)result).getId() + count);
  		 duplicates.put(((MessageDefinition)result).getId(), ((MessageDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... MessageDefinition " + count++);
  	 }
  	 try {
  		 messagedefinitionDao.create((MessageDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MessageDefinition : ../../fhir-data/examples-json/messagedefinition-patient-link-notification.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-search-param-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-search-param-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-icd-10.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-icd-10.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-definition-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-definition-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-questionnaire-populate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-questionnaire-populate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contactentity-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contactentity-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-message-transport.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-message-transport.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-comments.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-comments.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-genetics-1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-genetics-1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-episodeofcare-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-episodeofcare-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/riskassessment-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RiskAssessmentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RiskAssessment)result).getId())) {
  		 duplicates.put(((RiskAssessment)result).getId(), ((RiskAssessment)result).getId());
  	 } else {
  		 ((RiskAssessment)result).setId(((RiskAssessment)result).getId() + count);
  		 duplicates.put(((RiskAssessment)result).getId(), ((RiskAssessment)result).getId());
  		 //System.out.println("Found duplicate in ... RiskAssessment " + count++);
  	 }
  	 try {
  		 riskassessmentDao.create((RiskAssessment)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RiskAssessment : ../../fhir-data/examples-json/riskassessment-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0323.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0323.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-lipids.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-lipids.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript-example-rule.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TestScriptHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((TestScript)result).getId())) {
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  	 } else {
  		 ((TestScript)result).setId(((TestScript)result).getId() + count);
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  		 //System.out.println("Found duplicate in ... TestScript " + count++);
  	 }
  	 try {
  		 testscriptDao.create((TestScript)result);
  	 } catch (Exception ex) { System.err.println("Cannot save TestScript : ../../fhir-data/examples-json/testscript-example-rule.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-condition-ver-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-condition-ver-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0305.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0305.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-notThis.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-notThis.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0324.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0324.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicerequest-example-insulinpump.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DeviceRequest)result).getId())) {
  		 duplicates.put(((DeviceRequest)result).getId(), ((DeviceRequest)result).getId());
  	 } else {
  		 ((DeviceRequest)result).setId(((DeviceRequest)result).getId() + count);
  		 duplicates.put(((DeviceRequest)result).getId(), ((DeviceRequest)result).getId());
  		 //System.out.println("Found duplicate in ... DeviceRequest " + count++);
  	 }
  	 try {
  		 devicerequestDao.create((DeviceRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DeviceRequest : ../../fhir-data/examples-json/devicerequest-example-insulinpump.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-example-pgx-2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-example-pgx-2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-explicit-type-name.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-explicit-type-name.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f002-excess.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f002-excess.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-recommendation-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-recommendation-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0317.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0317.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/schedule.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/schedule.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsdnavariantid.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsdnavariantid.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/searchparameter-example-reference.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/searchparameter-example-reference.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adverse-event-causality-result.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adverse-event-causality-result.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-audit-event-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-audit-event-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/slot-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SlotHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Slot)result).getId())) {
  		 duplicates.put(((Slot)result).getId(), ((Slot)result).getId());
  	 } else {
  		 ((Slot)result).setId(((Slot)result).getId() + count);
  		 duplicates.put(((Slot)result).getId(), ((Slot)result).getId());
  		 //System.out.println("Found duplicate in ... Slot " + count++);
  	 }
  	 try {
  		 slotDao.create((Slot)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Slot : ../../fhir-data/examples-json/slot-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/messagedefinition-patient-link-response.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MessageDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MessageDefinition)result).getId())) {
  		 duplicates.put(((MessageDefinition)result).getId(), ((MessageDefinition)result).getId());
  	 } else {
  		 ((MessageDefinition)result).setId(((MessageDefinition)result).getId() + count);
  		 duplicates.put(((MessageDefinition)result).getId(), ((MessageDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... MessageDefinition " + count++);
  	 }
  	 try {
  		 messagedefinitionDao.create((MessageDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MessageDefinition : ../../fhir-data/examples-json/messagedefinition-patient-link-response.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/shareablecodesystem-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/shareablecodesystem-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/clinicalimpression-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClinicalImpressionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ClinicalImpression)result).getId())) {
  		 duplicates.put(((ClinicalImpression)result).getId(), ((ClinicalImpression)result).getId());
  	 } else {
  		 ((ClinicalImpression)result).setId(((ClinicalImpression)result).getId() + count);
  		 duplicates.put(((ClinicalImpression)result).getId(), ((ClinicalImpression)result).getId());
  		 //System.out.println("Found duplicate in ... ClinicalImpression " + count++);
  	 }
  	 try {
  		 clinicalimpressionDao.create((ClinicalImpression)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ClinicalImpression : ../../fhir-data/examples-json/clinicalimpression-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/endpoint-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EndpointHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Endpoint)result).getId())) {
  		 duplicates.put(((Endpoint)result).getId(), ((Endpoint)result).getId());
  	 } else {
  		 ((Endpoint)result).setId(((Endpoint)result).getId() + count);
  		 duplicates.put(((Endpoint)result).getId(), ((Endpoint)result).getId());
  		 //System.out.println("Found duplicate in ... Endpoint " + count++);
  	 }
  	 try {
  		 endpointDao.create((Endpoint)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Endpoint : ../../fhir-data/examples-json/endpoint-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0316.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0316.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-policyholder-relationship.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-policyholder-relationship.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-reaction-event-certainty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-reaction-event-certainty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-namingsystem-identifier-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-namingsystem-identifier-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-metric-calibration-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-metric-calibration-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-consent-content-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-consent-content-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-request-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-request-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-statement-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-statement-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-genetic-Observation-gene-identifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/observation-genetic-Observation-gene-identifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicecomponent.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/devicecomponent.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-data-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-data-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/slot-example-busy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SlotHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Slot)result).getId())) {
  		 duplicates.put(((Slot)result).getId(), ((Slot)result).getId());
  	 } else {
  		 ((Slot)result).setId(((Slot)result).getId() + count);
  		 duplicates.put(((Slot)result).getId(), ((Slot)result).getId());
  		 //System.out.println("Found duplicate in ... Slot " + count++);
  	 }
  	 try {
  		 slotDao.create((Slot)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Slot : ../../fhir-data/examples-json/slot-example-busy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-extensions-Patient-mothersMaidenName.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/patient-extensions-Patient-mothersMaidenName.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f004-erythrocyte.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f004-erythrocyte.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-assert-direction-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-assert-direction-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-auditevent-sopclass.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-auditevent-sopclass.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-diagnosticreport-summaryof.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-diagnosticreport-summaryof.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0316.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0316.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/device.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/medicationrequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-signature-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-signature-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measure-component-b-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Measure)result).getId())) {
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  	 } else {
  		 ((Measure)result).setId(((Measure)result).getId() + count);
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  		 //System.out.println("Found duplicate in ... Measure " + count++);
  	 }
  	 try {
  		 measureDao.create((Measure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Measure : ../../fhir-data/examples-json/measure-component-b-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-location-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-location-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claimresponse.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/claimresponse.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0314.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0314.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-mothersmaidenname.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-mothersmaidenname.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-f202-malignancy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-f202-malignancy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/location.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/diagnosticreport-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-unknown-content-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-unknown-content-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-metric-operational-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-metric-operational-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-allerg-intol-substance-exp-risk.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-allerg-intol-substance-exp-risk.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-f201-fever.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-f201-fever.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/compartmentdefinition-encounter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CompartmentDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CompartmentDefinition)result).getId())) {
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  	 } else {
  		 ((CompartmentDefinition)result).setId(((CompartmentDefinition)result).getId() + count);
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... CompartmentDefinition " + count++);
  	 }
  	 try {
  		 compartmentdefinitionDao.create((CompartmentDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CompartmentDefinition : ../../fhir-data/examples-json/compartmentdefinition-encounter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-goal-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-goal-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measurereport.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/measurereport.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-extensions-ValueSet-end.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/valueset-extensions-ValueSet-end.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/period.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/period.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-claim-exception.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-claim-exception.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-f201-tpf.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-f201-tpf.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bmi.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/bmi.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-report-result-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-report-result-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-recommendation-target-disease.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-recommendation-target-disease.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/message-request-link.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/message-request-link.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-pureeddiet-simple.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-pureeddiet-simple.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-obesity-narrative.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-obesity-narrative.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/guidanceresponse.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/guidanceresponse.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/range.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/range.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/account-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/account-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communication-example-fm-solicited-attachment.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CommunicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Communication)result).getId())) {
  		 duplicates.put(((Communication)result).getId(), ((Communication)result).getId());
  	 } else {
  		 ((Communication)result).setId(((Communication)result).getId() + count);
  		 duplicates.put(((Communication)result).getId(), ((Communication)result).getId());
  		 //System.out.println("Found duplicate in ... Communication " + count++);
  	 }
  	 try {
  		 communicationDao.create((Communication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Communication : ../../fhir-data/examples-json/communication-example-fm-solicited-attachment.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-vision-product.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-vision-product.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/imagingmanifest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImagingManifestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ImagingManifest)result).getId())) {
  		 duplicates.put(((ImagingManifest)result).getId(), ((ImagingManifest)result).getId());
  	 } else {
  		 ((ImagingManifest)result).setId(((ImagingManifest)result).getId() + count);
  		 duplicates.put(((ImagingManifest)result).getId(), ((ImagingManifest)result).getId());
  		 //System.out.println("Found duplicate in ... ImagingManifest " + count++);
  	 }
  	 try {
  		 imagingmanifestDao.create((ImagingManifest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ImagingManifest : ../../fhir-data/examples-json/imagingmanifest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/structuremap-supplyrequest-transform.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureMap)result).getId())) {
  		 duplicates.put(((StructureMap)result).getId(), ((StructureMap)result).getId());
  	 } else {
  		 ((StructureMap)result).setId(((StructureMap)result).getId() + count);
  		 duplicates.put(((StructureMap)result).getId(), ((StructureMap)result).getId());
  		 //System.out.println("Found duplicate in ... StructureMap " + count++);
  	 }
  	 try {
  		 structuremapDao.create((StructureMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureMap : ../../fhir-data/examples-json/structuremap-supplyrequest-transform.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-admin-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-admin-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-patient-everything.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-patient-everything.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/dataelement-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DataElementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DataElement)result).getId())) {
  		 duplicates.put(((DataElement)result).getId(), ((DataElement)result).getId());
  	 } else {
  		 ((DataElement)result).setId(((DataElement)result).getId() + count);
  		 duplicates.put(((DataElement)result).getId(), ((DataElement)result).getId());
  		 //System.out.println("Found duplicate in ... DataElement " + count++);
  	 }
  	 try {
  		 dataelementDao.create((DataElement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DataElement : ../../fhir-data/examples-json/dataelement-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-messageheader-process-message.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-messageheader-process-message.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-request-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-request-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/researchsubject-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/researchsubject-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-audit-event-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-audit-event-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-restful-capability-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-restful-capability-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-en-representation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-en-representation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-intervention.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-intervention.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/implementationguide-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImplementationGuideHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ImplementationGuide)result).getId())) {
  		 duplicates.put(((ImplementationGuide)result).getId(), ((ImplementationGuide)result).getId());
  	 } else {
  		 ((ImplementationGuide)result).setId(((ImplementationGuide)result).getId() + count);
  		 duplicates.put(((ImplementationGuide)result).getId(), ((ImplementationGuide)result).getId());
  		 //System.out.println("Found duplicate in ... ImplementationGuide " + count++);
  	 }
  	 try {
  		 implementationguideDao.create((ImplementationGuide)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ImplementationGuide : ../../fhir-data/examples-json/implementationguide-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-publication-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-publication-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-exclusive-breastfeeding-cqm-logic.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-exclusive-breastfeeding-cqm-logic.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-history-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-history-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-unclosed.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-unclosed.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-composition-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-composition-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-example-udi1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Device)result).getId())) {
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  	 } else {
  		 ((Device)result).setId(((Device)result).getId() + count);
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  		 //System.out.println("Found duplicate in ... Device " + count++);
  	 }
  	 try {
  		 deviceDao.create((Device)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Device : ../../fhir-data/examples-json/device-example-udi1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-usps-state.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-usps-state.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-grouping-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-grouping-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/dataelements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/dataelements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/medicationdispense-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measurereport-cms146-cat1-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MeasureReport)result).getId())) {
  		 duplicates.put(((MeasureReport)result).getId(), ((MeasureReport)result).getId());
  	 } else {
  		 ((MeasureReport)result).setId(((MeasureReport)result).getId() + count);
  		 duplicates.put(((MeasureReport)result).getId(), ((MeasureReport)result).getId());
  		 //System.out.println("Found duplicate in ... MeasureReport " + count++);
  	 }
  	 try {
  		 measurereportDao.create((MeasureReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MeasureReport : ../../fhir-data/examples-json/measurereport-cms146-cat1-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-claim-careteamrole.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-claim-careteamrole.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-objectclass.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-objectclass.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0329.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0329.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-reaction-event-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-reaction-event-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-extensions-Condition-definition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/condition-extensions-Condition-definition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-heart-rate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-heart-rate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitionerrole-examples-general.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/practitionerrole-examples-general.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coding.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/coding.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measure-cms146-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Measure)result).getId())) {
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  	 } else {
  		 ((Measure)result).setId(((Measure)result).getId() + count);
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  		 //System.out.println("Found duplicate in ... Measure " + count++);
  	 }
  	 try {
  		 measureDao.create((Measure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Measure : ../../fhir-data/examples-json/measure-cms146-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-relationship.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-relationship.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-device-safety.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-device-safety.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-goal-start-event.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-goal-start-event.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/ldlcholesterol.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/ldlcholesterol.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-chargeitem-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-chargeitem-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-report-action-result-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-report-action-result-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/compartmentdefinition-practitioner.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CompartmentDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CompartmentDefinition)result).getId())) {
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  	 } else {
  		 ((CompartmentDefinition)result).setId(((CompartmentDefinition)result).getId() + count);
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... CompartmentDefinition " + count++);
  	 }
  	 try {
  		 compartmentdefinitionDao.create((CompartmentDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CompartmentDefinition : ../../fhir-data/examples-json/compartmentdefinition-practitioner.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-profile-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-profile-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-episode-of-care-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-episode-of-care-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-direction.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-direction.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-notTime.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-notTime.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/enrollmentrequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EnrollmentRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EnrollmentRequest)result).getId())) {
  		 duplicates.put(((EnrollmentRequest)result).getId(), ((EnrollmentRequest)result).getId());
  	 } else {
  		 ((EnrollmentRequest)result).setId(((EnrollmentRequest)result).getId() + count);
  		 duplicates.put(((EnrollmentRequest)result).getId(), ((EnrollmentRequest)result).getId());
  		 //System.out.println("Found duplicate in ... EnrollmentRequest " + count++);
  	 }
  	 try {
  		 enrollmentrequestDao.create((EnrollmentRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EnrollmentRequest : ../../fhir-data/examples-json/enrollmentrequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-questionnaire-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-questionnaire-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-resource-validation-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-resource-validation-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-pgx.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-pgx.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-delimiter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-delimiter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-care-plan-intent.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-care-plan-intent.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-citizenship.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-citizenship.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/servicedefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/servicedefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-equivalence.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-equivalence.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-library-data-requirements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-library-data-requirements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-common-tags.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-common-tags.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-conditional-delete-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-conditional-delete-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/supplyrequest-example-simpleorder.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SupplyRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SupplyRequest)result).getId())) {
  		 duplicates.put(((SupplyRequest)result).getId(), ((SupplyRequest)result).getId());
  	 } else {
  		 ((SupplyRequest)result).setId(((SupplyRequest)result).getId() + count);
  		 duplicates.put(((SupplyRequest)result).getId(), ((SupplyRequest)result).getId());
  		 //System.out.println("Found duplicate in ... SupplyRequest " + count++);
  	 }
  	 try {
  		 supplyrequestDao.create((SupplyRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SupplyRequest : ../../fhir-data/examples-json/supplyrequest-example-simpleorder.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/conceptmap-103.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/conceptmap-103.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-diplotype1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-diplotype1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-example-summary.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-example-summary.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/uuid.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/uuid.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-definition-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-definition-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-animal-genderstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-animal-genderstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsgenomicsourceclass.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsgenomicsourceclass.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/documentreference-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DocumentReferenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DocumentReference)result).getId())) {
  		 duplicates.put(((DocumentReference)result).getId(), ((DocumentReference)result).getId());
  	 } else {
  		 ((DocumentReference)result).setId(((DocumentReference)result).getId() + count);
  		 duplicates.put(((DocumentReference)result).getId(), ((DocumentReference)result).getId());
  		 //System.out.println("Found duplicate in ... DocumentReference " + count++);
  	 }
  	 try {
  		 documentreferenceDao.create((DocumentReference)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DocumentReference : ../../fhir-data/examples-json/documentreference-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adverse-event-causality-assess.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adverse-event-causality-assess.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0311.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0311.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-copy-number-event.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-copy-number-event.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-questionnaire-populatehtml.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-questionnaire-populatehtml.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-observation-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-observation-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-studyprotocolidentifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-studyprotocolidentifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-goal-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-goal-priority.json due to " + ex.getMessage()); }
  	System.out.println("Total tests .. " + count);
  }
  @Test
  public void test1860() throws Exception {
  	 inputFile = "../../fhir-data/examples-json/valueset-classification-or-context.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-classification-or-context.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-contact-point-use-v2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-contact-point-use-v2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0312.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0312.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-capabilitystatement-prohibited.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-capabilitystatement-prohibited.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/group-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = GroupHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Group)result).getId())) {
  		 duplicates.put(((Group)result).getId(), ((Group)result).getId());
  	 } else {
  		 ((Group)result).setId(((Group)result).getId() + count);
  		 duplicates.put(((Group)result).getId(), ((Group)result).getId());
  		 //System.out.println("Found duplicate in ... Group " + count++);
  	 }
  	 try {
  		 groupDao.create((Group)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Group : ../../fhir-data/examples-json/group-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-days-of-week.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-days-of-week.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-TPMT-haplotype-two.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-TPMT-haplotype-two.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-required-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-required-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-rendering-markdown.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-rendering-markdown.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/conceptmaps.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/conceptmaps.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-task-performer-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-task-performer-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-assert-operator-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-assert-operator-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f202-lm.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f202-lm.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-address-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-address-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-base.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CapabilityStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CapabilityStatement)result).getId())) {
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  	 } else {
  		 ((CapabilityStatement)result).setId(((CapabilityStatement)result).getId() + count);
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  		 //System.out.println("Found duplicate in ... CapabilityStatement " + count++);
  	 }
  	 try {
  		 capabilitystatementDao.create((CapabilityStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CapabilityStatement : ../../fhir-data/examples-json/capabilitystatement-base.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-tooth.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-tooth.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-note-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-note-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-diagnosis-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-diagnosis-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-coverage-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-coverage-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adverse-event-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adverse-event-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/person-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Person)result).getId())) {
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  	 } else {
  		 ((Person)result).setId(((Person)result).getId() + count);
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  		 //System.out.println("Found duplicate in ... Person " + count++);
  	 }
  	 try {
  		 personDao.create((Person)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Person : ../../fhir-data/examples-json/person-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processresponse-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/processresponse-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-knowledge-repository.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CapabilityStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CapabilityStatement)result).getId())) {
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  	 } else {
  		 ((CapabilityStatement)result).setId(((CapabilityStatement)result).getId() + count);
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  		 //System.out.println("Found duplicate in ... CapabilityStatement " + count++);
  	 }
  	 try {
  		 capabilitystatementDao.create((CapabilityStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CapabilityStatement : ../../fhir-data/examples-json/capabilitystatement-knowledge-repository.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/id.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/id.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-plan-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-plan-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-fmm.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-fmm.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-family-member-history-genetics-parent.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-family-member-history-genetics-parent.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-place.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-place.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/plandefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityresponse-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EligibilityResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EligibilityResponse)result).getId())) {
  		 duplicates.put(((EligibilityResponse)result).getId(), ((EligibilityResponse)result).getId());
  	 } else {
  		 ((EligibilityResponse)result).setId(((EligibilityResponse)result).getId() + count);
  		 duplicates.put(((EligibilityResponse)result).getId(), ((EligibilityResponse)result).getId());
  		 //System.out.println("Found duplicate in ... EligibilityResponse " + count++);
  	 }
  	 try {
  		 eligibilityresponseDao.create((EligibilityResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EligibilityResponse : ../../fhir-data/examples-json/eligibilityresponse-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-f201-aumc.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-f201-aumc.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/guidanceresponse-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = GuidanceResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((GuidanceResponse)result).getId())) {
  		 duplicates.put(((GuidanceResponse)result).getId(), ((GuidanceResponse)result).getId());
  	 } else {
  		 ((GuidanceResponse)result).setId(((GuidanceResponse)result).getId() + count);
  		 duplicates.put(((GuidanceResponse)result).getId(), ((GuidanceResponse)result).getId());
  		 //System.out.println("Found duplicate in ... GuidanceResponse " + count++);
  	 }
  	 try {
  		 guidanceresponseDao.create((GuidanceResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save GuidanceResponse : ../../fhir-data/examples-json/guidanceresponse-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/person-grahame.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Person)result).getId())) {
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  	 } else {
  		 ((Person)result).setId(((Person)result).getId() + count);
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  		 //System.out.println("Found duplicate in ... Person " + count++);
  	 }
  	 try {
  		 personDao.create((Person)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Person : ../../fhir-data/examples-json/person-grahame.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-care-plan-activity-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-care-plan-activity-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-good-health-care.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-good-health-care.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-participantrequired.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-participantrequired.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-term-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-term-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-provision-conditions.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-provision-conditions.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-graphic-example-3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-graphic-example-3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-icd-10-procedures.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-icd-10-procedures.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-map-transform.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-map-transform.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-statistics.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-statistics.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-address-type-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-address-type-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0308.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0308.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-transaction-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-transaction-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-grantor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-grantor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-nutrition-request-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-nutrition-request-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/detectedissue-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/detectedissue-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-referencerange-meaning.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-referencerange-meaning.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-goal-pertainstogoal.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-goal-pertainstogoal.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-procedure-progress-status-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-procedure-progress-status-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-activity-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-activity-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-request-intent.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-request-intent.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/shareablevalueset-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/shareablevalueset-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-match-grade.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-match-grade.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-concept-property-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-concept-property-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-extensions-Patient-age.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/patient-extensions-Patient-age.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-pharmacy-medication.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-pharmacy-medication.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/specimen-example-urine.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SpecimenHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Specimen)result).getId())) {
  		 duplicates.put(((Specimen)result).getId(), ((Specimen)result).getId());
  	 } else {
  		 ((Specimen)result).setId(((Specimen)result).getId() + count);
  		 duplicates.put(((Specimen)result).getId(), ((Specimen)result).getId());
  		 //System.out.println("Found duplicate in ... Specimen " + count++);
  	 }
  	 try {
  		 specimenDao.create((Specimen)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Specimen : ../../fhir-data/examples-json/specimen-example-urine.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaire-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/questionnaire-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodylength.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/bodylength.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-complex-variant.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-complex-variant.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ucum-bodylength.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ucum-bodylength.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-bmi.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-bmi.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-cause.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-cause.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-measure-processor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CapabilityStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CapabilityStatement)result).getId())) {
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  	 } else {
  		 ((CapabilityStatement)result).setId(((CapabilityStatement)result).getId() + count);
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  		 //System.out.println("Found duplicate in ... CapabilityStatement " + count++);
  	 }
  	 try {
  		 capabilitystatementDao.create((CapabilityStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CapabilityStatement : ../../fhir-data/examples-json/capabilitystatement-measure-processor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-resource-effectiveperiod.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-resource-effectiveperiod.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-valueset-validate-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-valueset-validate-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-map-context-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-map-context-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-issue-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-issue-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measurereport-cms146-cat2-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MeasureReport)result).getId())) {
  		 duplicates.put(((MeasureReport)result).getId(), ((MeasureReport)result).getId());
  	 } else {
  		 ((MeasureReport)result).setId(((MeasureReport)result).getId() + count);
  		 duplicates.put(((MeasureReport)result).getId(), ((MeasureReport)result).getId());
  		 //System.out.println("Found duplicate in ... MeasureReport " + count++);
  	 }
  	 try {
  		 measurereportDao.create((MeasureReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MeasureReport : ../../fhir-data/examples-json/measurereport-cms146-cat2-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-animal.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-animal.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-constraint-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-constraint-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-mapsourcepublisher.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-mapsourcepublisher.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-endpoint-connection-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-endpoint-connection-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-device-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-device-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-mmi-suiciderisk-orderset-logic.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-mmi-suiciderisk-orderset-logic.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example-poll-payrec.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example-poll-payrec.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-f001-pieter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-f001-pieter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-episode-of-care-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-episode-of-care-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-cardinality-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-cardinality-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/nutritionorder.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/backboneelement.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/backboneelement.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/researchstudy-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/researchstudy-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/reference.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/reference.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-operational-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-operational-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-questionnaire-usage-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-questionnaire-usage-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-linkage-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-linkage-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-allergy-clinical-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-allergy-clinical-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-history.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-history.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-related-artifact-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-related-artifact-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-specification-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-specification-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-20minute-apgar-score.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-20minute-apgar-score.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-restful-security-service.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-restful-security-service.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatementexample5.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationStatement)result).getId())) {
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  	 } else {
  		 ((MedicationStatement)result).setId(((MedicationStatement)result).getId() + count);
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationStatement " + count++);
  	 }
  	 try {
  		 medicationstatementDao.create((MedicationStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationStatement : ../../fhir-data/examples-json/medicationstatementexample5.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-name-assembly-order.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-name-assembly-order.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operationdefinition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operationdefinition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example-f202-20130128.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example-f202-20130128.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-explanationofbenefit-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-explanationofbenefit-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-systemname.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-systemname.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ucum-bodytemp.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ucum-bodytemp.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-benefit-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-benefit-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-actorrole.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-actorrole.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-state.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-state.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-subtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-subtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-exclusive-breastfeeding-intervention-04.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-exclusive-breastfeeding-intervention-04.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-nullflavor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-nullflavor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/familymemberhistory-genetic-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/familymemberhistory-genetic-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/paymentreconciliation-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PaymentReconciliationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PaymentReconciliation)result).getId())) {
  		 duplicates.put(((PaymentReconciliation)result).getId(), ((PaymentReconciliation)result).getId());
  	 } else {
  		 ((PaymentReconciliation)result).setId(((PaymentReconciliation)result).getId() + count);
  		 duplicates.put(((PaymentReconciliation)result).getId(), ((PaymentReconciliation)result).getId());
  		 //System.out.println("Found duplicate in ... PaymentReconciliation " + count++);
  	 }
  	 try {
  		 paymentreconciliationDao.create((PaymentReconciliation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PaymentReconciliation : ../../fhir-data/examples-json/paymentreconciliation-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-hla-genotyping-results-method.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-hla-genotyping-results-method.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaire-example-f201-lifelines.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/questionnaire-example-f201-lifelines.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispenseexample8.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispenseexample8.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaire-profile-example-ussg-fht.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/questionnaire-profile-example-ussg-fht.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/subscription-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SubscriptionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Subscription)result).getId())) {
  		 duplicates.put(((Subscription)result).getId(), ((Subscription)result).getId());
  	 } else {
  		 ((Subscription)result).setId(((Subscription)result).getId() + count);
  		 duplicates.put(((Subscription)result).getId(), ((Subscription)result).getId());
  		 //System.out.println("Found duplicate in ... Subscription " + count++);
  	 }
  	 try {
  		 subscriptionDao.create((Subscription)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Subscription : ../../fhir-data/examples-json/subscription-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contactentity-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contactentity-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-example-software.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Device)result).getId())) {
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  	 } else {
  		 ((Device)result).setId(((Device)result).getId() + count);
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  		 //System.out.println("Found duplicate in ... Device " + count++);
  	 }
  	 try {
  		 deviceDao.create((Device)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Device : ../../fhir-data/examples-json/device-example-software.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testreport-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TestReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((TestReport)result).getId())) {
  		 duplicates.put(((TestReport)result).getId(), ((TestReport)result).getId());
  	 } else {
  		 ((TestReport)result).setId(((TestReport)result).getId() + count);
  		 duplicates.put(((TestReport)result).getId(), ((TestReport)result).getId());
  		 //System.out.println("Found duplicate in ... TestReport " + count++);
  	 }
  	 try {
  		 testreportDao.create((TestReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save TestReport : ../../fhir-data/examples-json/testreport-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0310.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0310.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-payeetype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-payeetype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-importance.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-importance.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/medicationadministration-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/requestgroup.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/requestgroup.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-example-intensional.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-example-intensional.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/requestgroup-kdn5-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RequestGroupHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RequestGroup)result).getId())) {
  		 duplicates.put(((RequestGroup)result).getId(), ((RequestGroup)result).getId());
  	 } else {
  		 ((RequestGroup)result).setId(((RequestGroup)result).getId() + count);
  		 duplicates.put(((RequestGroup)result).getId(), ((RequestGroup)result).getId());
  		 //System.out.println("Found duplicate in ... RequestGroup " + count++);
  	 }
  	 try {
  		 requestgroupDao.create((RequestGroup)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RequestGroup : ../../fhir-data/examples-json/requestgroup-kdn5-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/expansionprofile-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ExpansionProfileHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ExpansionProfile)result).getId())) {
  		 duplicates.put(((ExpansionProfile)result).getId(), ((ExpansionProfile)result).getId());
  	 } else {
  		 ((ExpansionProfile)result).setId(((ExpansionProfile)result).getId() + count);
  		 duplicates.put(((ExpansionProfile)result).getId(), ((ExpansionProfile)result).getId());
  		 //System.out.println("Found duplicate in ... ExpansionProfile " + count++);
  	 }
  	 try {
  		 expansionprofileDao.create((ExpansionProfile)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ExpansionProfile : ../../fhir-data/examples-json/expansionprofile-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/provenance-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProvenanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Provenance)result).getId())) {
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  	 } else {
  		 ((Provenance)result).setId(((Provenance)result).getId() + count);
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  		 //System.out.println("Found duplicate in ... Provenance " + count++);
  	 }
  	 try {
  		 provenanceDao.create((Provenance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Provenance : ../../fhir-data/examples-json/provenance-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-example-kdn5-simplified.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-example-kdn5-simplified.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processresponse-example-error.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessResponse)result).getId())) {
  		 duplicates.put(((ProcessResponse)result).getId(), ((ProcessResponse)result).getId());
  	 } else {
  		 ((ProcessResponse)result).setId(((ProcessResponse)result).getId() + count);
  		 duplicates.put(((ProcessResponse)result).getId(), ((ProcessResponse)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessResponse " + count++);
  	 }
  	 try {
  		 processresponseDao.create((ProcessResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessResponse : ../../fhir-data/examples-json/processresponse-example-error.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-procedure-not-performed-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-procedure-not-performed-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-communication-not-done-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-communication-not-done-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-conceptmap-unmapped-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-conceptmap-unmapped-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processresponse-example-pended.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessResponse)result).getId())) {
  		 duplicates.put(((ProcessResponse)result).getId(), ((ProcessResponse)result).getId());
  	 } else {
  		 ((ProcessResponse)result).setId(((ProcessResponse)result).getId() + count);
  		 duplicates.put(((ProcessResponse)result).getId(), ((ProcessResponse)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessResponse " + count++);
  	 }
  	 try {
  		 processresponseDao.create((ProcessResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessResponse : ../../fhir-data/examples-json/processresponse-example-pended.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/compartmentdefinition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CompartmentDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CompartmentDefinition)result).getId())) {
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  	 } else {
  		 ((CompartmentDefinition)result).setId(((CompartmentDefinition)result).getId() + count);
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... CompartmentDefinition " + count++);
  	 }
  	 try {
  		 compartmentdefinitionDao.create((CompartmentDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CompartmentDefinition : ../../fhir-data/examples-json/compartmentdefinition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-operationoutcome-authority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-operationoutcome-authority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-author.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-author.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-permitted-value-conceptmap.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-permitted-value-conceptmap.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/xhtml.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/xhtml.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-group-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-group-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsallelicstate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsallelicstate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ex-payee-resource-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ex-payee-resource-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-minlength.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-minlength.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-dispense-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-dispense-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-signer-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-signer-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-basic-resource-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-basic-resource-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-coverage-level.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-coverage-level.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedurerequest-precondition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedurerequest-precondition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0331.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0331.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-ordinalvalue.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-ordinalvalue.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-related-artifact-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-related-artifact-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-physical-therapy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-physical-therapy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-zika-virus-intervention.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-zika-virus-intervention.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-oral-prosthodontic-material.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-oral-prosthodontic-material.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/vitalspanel-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/vitalspanel-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-event-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-event-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-extra-security-role-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-extra-security-role-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-restful-security-service.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-restful-security-service.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/boolean.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/boolean.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-property-representation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-property-representation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-consent-state-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-consent-state-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contract-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contract-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-issue-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-issue-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-submitter-org.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-submitter-org.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-supplydelivery-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-supplydelivery-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-no-immunization-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-no-immunization-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-type-derivation-rule.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-type-derivation-rule.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claimresponse-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ClaimResponse)result).getId())) {
  		 duplicates.put(((ClaimResponse)result).getId(), ((ClaimResponse)result).getId());
  	 } else {
  		 ((ClaimResponse)result).setId(((ClaimResponse)result).getId() + count);
  		 duplicates.put(((ClaimResponse)result).getId(), ((ClaimResponse)result).getId());
  		 //System.out.println("Found duplicate in ... ClaimResponse " + count++);
  	 }
  	 try {
  		 claimresponseDao.create((ClaimResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ClaimResponse : ../../fhir-data/examples-json/claimresponse-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/vitalsigns.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/vitalsigns.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/person-patient-portal.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Person)result).getId())) {
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  	 } else {
  		 ((Person)result).setId(((Person)result).getId() + count);
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  		 //System.out.println("Found duplicate in ... Person " + count++);
  	 }
  	 try {
  		 personDao.create((Person)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Person : ../../fhir-data/examples-json/person-patient-portal.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/enrollmentrequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/enrollmentrequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-author.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-author.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-slotstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-slotstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0320.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0320.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/searchparameter-example-extension.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/searchparameter-example-extension.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-udi.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-udi.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ex-paymenttype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ex-paymenttype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-reference-handling-policy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-reference-handling-policy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-admit-source.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-admit-source.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatementexample2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationStatement)result).getId())) {
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  	 } else {
  		 ((MedicationStatement)result).setId(((MedicationStatement)result).getId() + count);
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationStatement " + count++);
  	 }
  	 try {
  		 medicationstatementDao.create((MedicationStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationStatement : ../../fhir-data/examples-json/medicationstatementexample2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/coord-1base-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/coord-1base-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-care-team-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-care-team-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-hla-genetics-results-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/diagnosticreport-hla-genetics-results-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-humanname-mothers-family.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-humanname-mothers-family.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0328.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0328.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-example-udi2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Device)result).getId())) {
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  	 } else {
  		 ((Device)result).setId(((Device)result).getId() + count);
  		 duplicates.put(((Device)result).getId(), ((Device)result).getId());
  		 //System.out.println("Found duplicate in ... Device " + count++);
  	 }
  	 try {
  		 deviceDao.create((Device)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Device : ../../fhir-data/examples-json/device-example-udi2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-digital-media-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-digital-media-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-system-version-processing-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-system-version-processing-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-administrative-gender.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-administrative-gender.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-communicationrequest-definition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-communicationrequest-definition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-gastro.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-gastro.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle-response-simplesummary.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/bundle-response-simplesummary.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-eye-color.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-eye-color.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-deliverymodeidentifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-deliverymodeidentifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0310.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0310.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-service-uscls.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-service-uscls.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-device-statement-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-device-statement-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunization-example-historical.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImmunizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Immunization)result).getId())) {
  		 duplicates.put(((Immunization)result).getId(), ((Immunization)result).getId());
  	 } else {
  		 ((Immunization)result).setId(((Immunization)result).getId() + count);
  		 duplicates.put(((Immunization)result).getId(), ((Immunization)result).getId());
  		 //System.out.println("Found duplicate in ... Immunization " + count++);
  	 }
  	 try {
  		 immunizationDao.create((Immunization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Immunization : ../../fhir-data/examples-json/immunization-example-historical.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationstatementexample7.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationStatement)result).getId())) {
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  	 } else {
  		 ((MedicationStatement)result).setId(((MedicationStatement)result).getId() + count);
  		 duplicates.put(((MedicationStatement)result).getId(), ((MedicationStatement)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationStatement " + count++);
  	 }
  	 try {
  		 medicationstatementDao.create((MedicationStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationStatement : ../../fhir-data/examples-json/medicationstatementexample7.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-consent-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-consent-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f202-temperature.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f202-temperature.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-mindoseperperiod.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-mindoseperperiod.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-request-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-request-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-list-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-list-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-kos-title.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-kos-title.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-care-plan-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-care-plan-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/media-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/media-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-map-target-list-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-map-target-list-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/person-provider-directory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Person)result).getId())) {
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  	 } else {
  		 ((Person)result).setId(((Person)result).getId() + count);
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  		 //System.out.println("Found duplicate in ... Person " + count++);
  	 }
  	 try {
  		 personDao.create((Person)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Person : ../../fhir-data/examples-json/person-provider-directory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communicationrequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CommunicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CommunicationRequest)result).getId())) {
  		 duplicates.put(((CommunicationRequest)result).getId(), ((CommunicationRequest)result).getId());
  	 } else {
  		 ((CommunicationRequest)result).setId(((CommunicationRequest)result).getId() + count);
  		 duplicates.put(((CommunicationRequest)result).getId(), ((CommunicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... CommunicationRequest " + count++);
  	 }
  	 try {
  		 communicationrequestDao.create((CommunicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CommunicationRequest : ../../fhir-data/examples-json/communicationrequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-identifier-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-identifier-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adjudication-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adjudication-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/person-example-f002-ariadne.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Person)result).getId())) {
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  	 } else {
  		 ((Person)result).setId(((Person)result).getId() + count);
  		 duplicates.put(((Person)result).getId(), ((Person)result).getId());
  		 //System.out.println("Found duplicate in ... Person " + count++);
  	 }
  	 try {
  		 personDao.create((Person)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Person : ../../fhir-data/examples-json/person-example-f002-ariadne.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-document-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-document-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-pharmacy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-pharmacy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-performer-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-performer-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-genetics-example-1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-genetics-example-1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-workflowstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-workflowstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/library.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/provenance-example-sig.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProvenanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Provenance)result).getId())) {
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  	 } else {
  		 ((Provenance)result).setId(((Provenance)result).getId() + count);
  		 duplicates.put(((Provenance)result).getId(), ((Provenance)result).getId());
  		 //System.out.println("Found duplicate in ... Provenance " + count++);
  	 }
  	 try {
  		 provenanceDao.create((Provenance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Provenance : ../../fhir-data/examples-json/provenance-example-sig.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-usage.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-usage.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-ex-onsettype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-ex-onsettype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-modified-foodtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-modified-foodtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-genetics-4.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-genetics-4.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/structuremap-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureMap)result).getId())) {
  		 duplicates.put(((StructureMap)result).getId(), ((StructureMap)result).getId());
  	 } else {
  		 ((StructureMap)result).setId(((StructureMap)result).getId() + count);
  		 duplicates.put(((StructureMap)result).getId(), ((StructureMap)result).getId());
  		 //System.out.println("Found duplicate in ... StructureMap " + count++);
  	 }
  	 try {
  		 structuremapDao.create((StructureMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureMap : ../../fhir-data/examples-json/structuremap-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-composition-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-composition-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-dueto.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-dueto.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-consent-data-meaning.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-consent-data-meaning.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/conceptmap-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/conceptmap-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-precheck-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-precheck-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-benefit-unit.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-benefit-unit.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-renaldiet.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-renaldiet.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-link-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-link-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/documentreference-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/documentreference-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-dataelement-stringency.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-dataelement-stringency.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-claim-modifiers.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-claim-modifiers.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-consent-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-consent-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example-poll-eob.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example-poll-eob.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/episodeofcare-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/episodeofcare-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-name-assembly-order.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-name-assembly-order.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/documentmanifest-fm-attachment.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DocumentManifestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DocumentManifest)result).getId())) {
  		 duplicates.put(((DocumentManifest)result).getId(), ((DocumentManifest)result).getId());
  	 } else {
  		 ((DocumentManifest)result).setId(((DocumentManifest)result).getId() + count);
  		 duplicates.put(((DocumentManifest)result).getId(), ((DocumentManifest)result).getId());
  		 //System.out.println("Found duplicate in ... DocumentManifest " + count++);
  	 }
  	 try {
  		 documentmanifestDao.create((DocumentManifest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DocumentManifest : ../../fhir-data/examples-json/documentmanifest-fm-attachment.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adjudication-error.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adjudication-error.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-template-status-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-template-status-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/valueset.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/linkage-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LinkageHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Linkage)result).getId())) {
  		 duplicates.put(((Linkage)result).getId(), ((Linkage)result).getId());
  	 } else {
  		 ((Linkage)result).setId(((Linkage)result).getId() + count);
  		 duplicates.put(((Linkage)result).getId(), ((Linkage)result).getId());
  		 //System.out.println("Found duplicate in ... Linkage " + count++);
  	 }
  	 try {
  		 linkageDao.create((Linkage)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Linkage : ../../fhir-data/examples-json/linkage-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/endpoint-examples-general-template.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/endpoint-examples-general-template.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-payment-adjustment-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-payment-adjustment-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-entryformat.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-entryformat.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-map.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-map.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/consent-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valuesets.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/valuesets.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-hl7-work-group.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-hl7-work-group.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-additionallocator.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-additionallocator.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-extensions-Location-alias.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/location-extensions-Location-alias.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-map-group-type-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-map-group-type-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/task-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/task-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/detectedissue.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/detectedissue.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-f001-bloodexam.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-f001-bloodexam.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-oral-bridge.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-oral-bridge.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/graphdefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/graphdefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-chargeitem-billingcodes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-chargeitem-billingcodes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-goal-acceptance.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-goal-acceptance.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-namingsystem-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-namingsystem-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/patient-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contact-point-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contact-point-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/account-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AccountHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Account)result).getId())) {
  		 duplicates.put(((Account)result).getId(), ((Account)result).getId());
  	 } else {
  		 ((Account)result).setId(((Account)result).getId() + count);
  		 duplicates.put(((Account)result).getId(), ((Account)result).getId());
  		 //System.out.println("Found duplicate in ... Account " + count++);
  	 }
  	 try {
  		 accountDao.create((Account)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Account : ../../fhir-data/examples-json/account-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-composition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-composition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-specimen-processingtime.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-specimen-processingtime.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-diagnostic-service-sections.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-diagnostic-service-sections.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-genetics-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/diagnosticreport-genetics-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0321.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0321.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/imagingmanifest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/imagingmanifest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-discriminator-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-discriminator-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-fm-itemtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-fm-itemtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-summary.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-summary.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/messageheader-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MessageHeaderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MessageHeader)result).getId())) {
  		 duplicates.put(((MessageHeader)result).getId(), ((MessageHeader)result).getId());
  	 } else {
  		 ((MessageHeader)result).setId(((MessageHeader)result).getId() + count);
  		 duplicates.put(((MessageHeader)result).getId(), ((MessageHeader)result).getId());
  		 //System.out.println("Found duplicate in ... MessageHeader " + count++);
  	 }
  	 try {
  		 messageheaderDao.create((MessageHeader)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MessageHeader : ../../fhir-data/examples-json/messageheader-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-media-view.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-media-view.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-maxdecimalplaces.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-maxdecimalplaces.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-openehr-location.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-openehr-location.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-exclusive-breastfeeding-cds-logic.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-exclusive-breastfeeding-cds-logic.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-implant-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-implant-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-messageheader-response-request.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-messageheader-response-request.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-codesystem-content-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-codesystem-content-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/relatedperson-example-f002-ariadne.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RelatedPersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RelatedPerson)result).getId())) {
  		 duplicates.put(((RelatedPerson)result).getId(), ((RelatedPerson)result).getId());
  	 } else {
  		 ((RelatedPerson)result).setId(((RelatedPerson)result).getId() + count);
  		 duplicates.put(((RelatedPerson)result).getId(), ((RelatedPerson)result).getId());
  		 //System.out.println("Found duplicate in ... RelatedPerson " + count++);
  	 }
  	 try {
  		 relatedpersonDao.create((RelatedPerson)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RelatedPerson : ../../fhir-data/examples-json/relatedperson-example-f002-ariadne.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-appointmentstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-appointmentstatus.json due to " + ex.getMessage()); }
  	System.out.println("Total tests .. " + count);
  }
  @Test
  public void test2170() throws Exception {
  	 inputFile = "../../fhir-data/examples-json/codesystem-udi-entry-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-udi-entry-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-provider-qualification.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-provider-qualification.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/substance.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/substance.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-participant-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-participant-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-comment.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-comment.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-practitioner-specialty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-practitioner-specialty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-organization-period.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-organization-period.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-practitioner-specialty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-practitioner-specialty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0309.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0309.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-document-relationship-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-document-relationship-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsaminoacidchangename.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsaminoacidchangename.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-as-needed-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-as-needed-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-observation-valueabsentreason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-observation-valueabsentreason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0307.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0307.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-audit-source-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-audit-source-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/structuremap.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/structuremap.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-vision-product.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-vision-product.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-dicom-dcim.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-dicom-dcim.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/adverseevent-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/adverseevent-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-ldlcholesterol-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-ldlcholesterol-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-devicemetric-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-devicemetric-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-care-plan-activity-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-care-plan-activity-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-datadictionary.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-datadictionary.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/hlaresult-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/hlaresult-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/paymentnotice-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/paymentnotice-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/relatedperson-example-peter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = RelatedPersonHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((RelatedPerson)result).getId())) {
  		 duplicates.put(((RelatedPerson)result).getId(), ((RelatedPerson)result).getId());
  	 } else {
  		 ((RelatedPerson)result).setId(((RelatedPerson)result).getId() + count);
  		 duplicates.put(((RelatedPerson)result).getId(), ((RelatedPerson)result).getId());
  		 //System.out.println("Found duplicate in ... RelatedPerson " + count++);
  	 }
  	 try {
  		 relatedpersonDao.create((RelatedPerson)result);
  	 } catch (Exception ex) { System.err.println("Cannot save RelatedPerson : ../../fhir-data/examples-json/relatedperson-example-peter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaireresponse.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/questionnaireresponse.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-example-ambulance.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LocationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Location)result).getId())) {
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  	 } else {
  		 ((Location)result).setId(((Location)result).getId() + count);
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  		 //System.out.println("Found duplicate in ... Location " + count++);
  	 }
  	 try {
  		 locationDao.create((Location)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Location : ../../fhir-data/examples-json/location-example-ambulance.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testreport.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/testreport.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-composition-status-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-composition-status-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-restful-interaction.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-restful-interaction.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-extensions-ValueSet-author.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/valueset-extensions-ValueSet-author.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-itemcontrol.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-itemcontrol.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/media-example-xray.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MediaHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Media)result).getId())) {
  		 duplicates.put(((Media)result).getId(), ((Media)result).getId());
  	 } else {
  		 ((Media)result).setId(((Media)result).getId() + count);
  		 duplicates.put(((Media)result).getId(), ((Media)result).getId());
  		 //System.out.println("Found duplicate in ... Media " + count++);
  	 }
  	 try {
  		 mediaDao.create((Media)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Media : ../../fhir-data/examples-json/media-example-xray.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-extensions-Patient-birthOrderBoolean.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/patient-extensions-Patient-birthOrderBoolean.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/careplan-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/location-example-hl7hq.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LocationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Location)result).getId())) {
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  	 } else {
  		 ((Location)result).setId(((Location)result).getId() + count);
  		 duplicates.put(((Location)result).getId(), ((Location)result).getId());
  		 //System.out.println("Found duplicate in ... Location " + count++);
  	 }
  	 try {
  		 locationDao.create((Location)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Location : ../../fhir-data/examples-json/location-example-hl7hq.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/implementationguide-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/implementationguide-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-task-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-task-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-practitionerrole-primaryind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-practitionerrole-primaryind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-goal-status-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-goal-status-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-variant-state.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-variant-state.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-example-TPMT-one.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-example-TPMT-one.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-data-absent-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-data-absent-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-lookupquestionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-lookupquestionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-practitioner-classification.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-practitioner-classification.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-referral-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-referral-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-questionnaire-item-control.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-questionnaire-item-control.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-d.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-d.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-body-site-instance.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-body-site-instance.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-animal-genderstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-animal-genderstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-choice-list-orientation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-choice-list-orientation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0334.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0334.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-link-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-link-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-allowedprofile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-allowedprofile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-body-temperature.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-body-temperature.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-allergy-verification-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-allergy-verification-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adverse-event-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adverse-event-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0315.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0315.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measurereport-cms146-cat3-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MeasureReport)result).getId())) {
  		 duplicates.put(((MeasureReport)result).getId(), ((MeasureReport)result).getId());
  	 } else {
  		 ((MeasureReport)result).setId(((MeasureReport)result).getId() + count);
  		 duplicates.put(((MeasureReport)result).getId(), ((MeasureReport)result).getId());
  		 //System.out.println("Found duplicate in ... MeasureReport " + count++);
  	 }
  	 try {
  		 measurereportDao.create((MeasureReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MeasureReport : ../../fhir-data/examples-json/measurereport-cms146-cat3-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-report-result-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-report-result-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-unitid.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-unitid.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-claim-informationcategory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-claim-informationcategory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-missing-tooth-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-missing-tooth-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-auditevent-instance.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-auditevent-instance.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-icd-10-procedures.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-icd-10-procedures.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example-f203-20130311.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example-f203-20130311.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-clinical-impression-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-clinical-impression-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-participantrequired.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-participantrequired.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-object-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-object-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/compartmentdefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/compartmentdefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-data-absent-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-data-absent-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicerequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/devicerequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-iscommonbinding.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-iscommonbinding.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-message-reason-encounter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-message-reason-encounter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-participant-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-participant-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-defined-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-defined-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f005-hemoglobin.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f005-hemoglobin.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measure-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/measure-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-diabeticsupplement.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-diabeticsupplement.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-request-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-request-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-extensions-CodeSystem-end.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/codesystem-extensions-CodeSystem-end.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-practitioner-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-practitioner-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-family-member-history-genetics-sibling.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-family-member-history-genetics-sibling.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-relationship-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-relationship-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-list-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-list-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CapabilityStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CapabilityStatement)result).getId())) {
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  	 } else {
  		 ((CapabilityStatement)result).setId(((CapabilityStatement)result).getId() + count);
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  		 //System.out.println("Found duplicate in ... CapabilityStatement " + count++);
  	 }
  	 try {
  		 capabilitystatementDao.create((CapabilityStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CapabilityStatement : ../../fhir-data/examples-json/capabilitystatement-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0321.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0321.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-plan-activity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-plan-activity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-research-subject-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-research-subject-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-identifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-identifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-measure-evaluate-measure.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-measure-evaluate-measure.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-consistency-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-consistency-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-adverse-event-seriousness.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-adverse-event-seriousness.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example-empty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example-empty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/media-example-sound.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MediaHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Media)result).getId())) {
  		 duplicates.put(((Media)result).getId(), ((Media)result).getId());
  	 } else {
  		 ((Media)result).setId(((Media)result).getId() + count);
  		 duplicates.put(((Media)result).getId(), ((Media)result).getId());
  		 //System.out.println("Found duplicate in ... Media " + count++);
  	 }
  	 try {
  		 mediaDao.create((Media)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Media : ../../fhir-data/examples-json/media-example-sound.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-enteral-route.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-enteral-route.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-congregation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-congregation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example-family-history.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example-family-history.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0305.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0305.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-address-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-address-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/requestgroup-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/requestgroup-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-request-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-request-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-concept-bidirectional.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-concept-bidirectional.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointment.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/appointment.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-resource-validate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-resource-validate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-concept-property-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-concept-property-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-goal-acceptance-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-goal-acceptance-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/media-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MediaHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Media)result).getId())) {
  		 duplicates.put(((Media)result).getId(), ((Media)result).getId());
  	 } else {
  		 ((Media)result).setId(((Media)result).getId() + count);
  		 duplicates.put(((Media)result).getId(), ((Media)result).getId());
  		 //System.out.println("Found duplicate in ... Media " + count++);
  	 }
  	 try {
  		 mediaDao.create((Media)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Media : ../../fhir-data/examples-json/media-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example-home.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example-home.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticssequence.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticssequence.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/definition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/definition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-allergyintolerance-reasonrefuted.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-allergyintolerance-reasonrefuted.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityrequest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/eligibilityrequest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-reference.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-reference.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-familymemberhistory-abatement.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-familymemberhistory-abatement.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-ft4.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-ft4.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-glossy-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-glossy-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-special-values.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-special-values.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-usagecontext-group.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-usagecontext-group.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityrequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EligibilityRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EligibilityRequest)result).getId())) {
  		 duplicates.put(((EligibilityRequest)result).getId(), ((EligibilityRequest)result).getId());
  	 } else {
  		 ((EligibilityRequest)result).setId(((EligibilityRequest)result).getId() + count);
  		 duplicates.put(((EligibilityRequest)result).getId(), ((EligibilityRequest)result).getId());
  		 //System.out.println("Found duplicate in ... EligibilityRequest " + count++);
  	 }
  	 try {
  		 eligibilityrequestDao.create((EligibilityRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EligibilityRequest : ../../fhir-data/examples-json/eligibilityrequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-copy-number-event.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-copy-number-event.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-plandefinition-apply.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-plandefinition-apply.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/pcd-example-notThis.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ContractHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Contract)result).getId())) {
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  	 } else {
  		 ((Contract)result).setId(((Contract)result).getId() + count);
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  		 //System.out.println("Found duplicate in ... Contract " + count++);
  	 }
  	 try {
  		 contractDao.create((Contract)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Contract : ../../fhir-data/examples-json/pcd-example-notThis.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-coverage-level.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-coverage-level.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/age.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/age.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-capabilitystatement-websocket.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-capabilitystatement-websocket.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-specimen-collectionpriority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-specimen-collectionpriority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/visionprescription-example-1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = VisionPrescriptionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((VisionPrescription)result).getId())) {
  		 duplicates.put(((VisionPrescription)result).getId(), ((VisionPrescription)result).getId());
  	 } else {
  		 ((VisionPrescription)result).setId(((VisionPrescription)result).getId() + count);
  		 duplicates.put(((VisionPrescription)result).getId(), ((VisionPrescription)result).getId());
  		 //System.out.println("Found duplicate in ... VisionPrescription " + count++);
  	 }
  	 try {
  		 visionprescriptionDao.create((VisionPrescription)result);
  	 } catch (Exception ex) { System.err.println("Cannot save VisionPrescription : ../../fhir-data/examples-json/visionprescription-example-1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-claim-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-claim-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-map-target-list-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-map-target-list-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/explanationofbenefit.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/explanationofbenefit.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medication.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/medication.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-operation-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-operation-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-research-study-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-research-study-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-diagnostic-report-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-diagnostic-report-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-account-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-account-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/healthcareservice.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/healthcareservice.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/eligibilityrequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/eligibilityrequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-regex.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-regex.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-xml-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-xml-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/contract-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/contract-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0302.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0302.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example-double-cousin-relationship-pedigree.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example-double-cousin-relationship-pedigree.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-explanationofbenefit-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-explanationofbenefit-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-preferred.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-preferred.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-auditevent-accession.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-auditevent-accession.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-account-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-account-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-question.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-question.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicerequest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DeviceRequest)result).getId())) {
  		 duplicates.put(((DeviceRequest)result).getId(), ((DeviceRequest)result).getId());
  	 } else {
  		 ((DeviceRequest)result).setId(((DeviceRequest)result).getId() + count);
  		 duplicates.put(((DeviceRequest)result).getId(), ((DeviceRequest)result).getId());
  		 //System.out.println("Found duplicate in ... DeviceRequest " + count++);
  	 }
  	 try {
  		 devicerequestDao.create((DeviceRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DeviceRequest : ../../fhir-data/examples-json/devicerequest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-extensions-CodeSystem-workflow.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/codesystem-extensions-CodeSystem-workflow.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/provenance.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/provenance.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-vaccination-protocol-dose-target.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-vaccination-protocol-dose-target.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-streetaddressline.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-streetaddressline.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-event-reasonreference.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-event-reasonreference.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/compartmentdefinition-relatedperson.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CompartmentDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CompartmentDefinition)result).getId())) {
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  	 } else {
  		 ((CompartmentDefinition)result).setId(((CompartmentDefinition)result).getId() + count);
  		 duplicates.put(((CompartmentDefinition)result).getId(), ((CompartmentDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... CompartmentDefinition " + count++);
  	 }
  	 try {
  		 compartmentdefinitionDao.create((CompartmentDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CompartmentDefinition : ../../fhir-data/examples-json/compartmentdefinition-relatedperson.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example4.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example4.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-patient-match.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-patient-match.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-Emergency.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-Emergency.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/namingsystem-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NamingSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NamingSystem)result).getId())) {
  		 duplicates.put(((NamingSystem)result).getId(), ((NamingSystem)result).getId());
  	 } else {
  		 ((NamingSystem)result).setId(((NamingSystem)result).getId() + count);
  		 duplicates.put(((NamingSystem)result).getId(), ((NamingSystem)result).getId());
  		 //System.out.println("Found duplicate in ... NamingSystem " + count++);
  	 }
  	 try {
  		 namingsystemDao.create((NamingSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NamingSystem : ../../fhir-data/examples-json/namingsystem-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communicationrequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/communicationrequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-action-grouping-behavior.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-action-grouping-behavior.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-map-model-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-map-model-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/elementdefinition-de-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/elementdefinition-de-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/subscription.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/subscription.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-digital-media-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-digital-media-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bodysite-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/bodysite-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-procedurerequest-questionnairerequest.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-procedurerequest-questionnairerequest.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/task-example1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TaskHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Task)result).getId())) {
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  	 } else {
  		 ((Task)result).setId(((Task)result).getId() + count);
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  		 //System.out.println("Found duplicate in ... Task " + count++);
  	 }
  	 try {
  		 taskDao.create((Task)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Task : ../../fhir-data/examples-json/task-example1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/servicedefinition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ServiceDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ServiceDefinition)result).getId())) {
  		 duplicates.put(((ServiceDefinition)result).getId(), ((ServiceDefinition)result).getId());
  	 } else {
  		 ((ServiceDefinition)result).setId(((ServiceDefinition)result).getId() + count);
  		 duplicates.put(((ServiceDefinition)result).getId(), ((ServiceDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ServiceDefinition " + count++);
  	 }
  	 try {
  		 servicedefinitionDao.create((ServiceDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ServiceDefinition : ../../fhir-data/examples-json/servicedefinition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0308.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0308.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-measure-data-requirements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-measure-data-requirements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-fm-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-fm-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-supplyrequest-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-supplyrequest-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-family-member-history-genetics-observation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-family-member-history-genetics-observation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-observation-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-observation-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-procedure-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-procedure-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-fmm-no-warnings.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-fmm-no-warnings.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-ex-payee-resource-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-ex-payee-resource-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-observation-relationshiptypes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-observation-relationshiptypes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-diagnosticreport-replaces.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-diagnosticreport-replaces.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0305.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0305.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-place.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-place.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-json-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-json-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-specimen-specialhandling.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-specimen-specialhandling.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/annotation.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/annotation.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-streetname.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-streetname.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle-response-medsallergies.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/bundle-response-medsallergies.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-humanname-partner-name.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-humanname-partner-name.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f005-al.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f005-al.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-address-use-v2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-address-use-v2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-task-candidatelist.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-task-candidatelist.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-questionnaire-questions.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-questionnaire-questions.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-substance-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-substance-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-care-plan-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-care-plan-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-f201-brainct.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-f201-brainct.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/dosage.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/dosage.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-tooth.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-tooth.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-message-transport.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-message-transport.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-entformula-additive.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-entformula-additive.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-ruledout.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-ruledout.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/messagedefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/messagedefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-hla-genotyping-results-allele-database.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-hla-genotyping-results-allele-database.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/activitydefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/documentmanifest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/documentmanifest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-package-form.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-package-form.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-route.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-route.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-units-of-time.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-units-of-time.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-question-max-occurs.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-question-max-occurs.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-uncertaintytype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-uncertaintytype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-observation-relationshiptypes-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-observation-relationshiptypes-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/auditevent-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/auditevent-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-http-verb.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-http-verb.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/measure-predecessor-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MeasureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Measure)result).getId())) {
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  	 } else {
  		 ((Measure)result).setId(((Measure)result).getId() + count);
  		 duplicates.put(((Measure)result).getId(), ((Measure)result).getId());
  		 //System.out.println("Found duplicate in ... Measure " + count++);
  	 }
  	 try {
  		 measureDao.create((Measure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Measure : ../../fhir-data/examples-json/measure-predecessor-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-referencerange-appliesto.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-referencerange-appliesto.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle-request-simplesummary.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/bundle-request-simplesummary.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/deviceusestatement-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DeviceUseStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DeviceUseStatement)result).getId())) {
  		 duplicates.put(((DeviceUseStatement)result).getId(), ((DeviceUseStatement)result).getId());
  	 } else {
  		 ((DeviceUseStatement)result).setId(((DeviceUseStatement)result).getId() + count);
  		 duplicates.put(((DeviceUseStatement)result).getId(), ((DeviceUseStatement)result).getId());
  		 //System.out.println("Found duplicate in ... DeviceUseStatement " + count++);
  	 }
  	 try {
  		 deviceusestatementDao.create((DeviceUseStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DeviceUseStatement : ../../fhir-data/examples-json/deviceusestatement-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/supplydelivery-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SupplyDeliveryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SupplyDelivery)result).getId())) {
  		 duplicates.put(((SupplyDelivery)result).getId(), ((SupplyDelivery)result).getId());
  	 } else {
  		 ((SupplyDelivery)result).setId(((SupplyDelivery)result).getId() + count);
  		 duplicates.put(((SupplyDelivery)result).getId(), ((SupplyDelivery)result).getId());
  		 //System.out.println("Found duplicate in ... SupplyDelivery " + count++);
  	 }
  	 try {
  		 supplydeliveryDao.create((SupplyDelivery)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SupplyDelivery : ../../fhir-data/examples-json/supplydelivery-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-quality-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-quality-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-f003-pharynx.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-f003-pharynx.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/messagedefinition-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MessageDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MessageDefinition)result).getId())) {
  		 duplicates.put(((MessageDefinition)result).getId(), ((MessageDefinition)result).getId());
  	 } else {
  		 ((MessageDefinition)result).setId(((MessageDefinition)result).getId() + count);
  		 duplicates.put(((MessageDefinition)result).getId(), ((MessageDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... MessageDefinition " + count++);
  	 }
  	 try {
  		 messagedefinitionDao.create((MessageDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MessageDefinition : ../../fhir-data/examples-json/messagedefinition-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-streetnametype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-streetnametype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-specimen-container-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-specimen-container-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-maxvalue.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-maxvalue.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example-poll-specific.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example-poll-specific.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-expansionsource.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-expansionsource.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-maxvalueset.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-maxvalueset.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/specimen-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SpecimenHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Specimen)result).getId())) {
  		 duplicates.put(((Specimen)result).getId(), ((Specimen)result).getId());
  	 } else {
  		 ((Specimen)result).setId(((Specimen)result).getId() + count);
  		 duplicates.put(((Specimen)result).getId(), ((Specimen)result).getId());
  		 //System.out.println("Found duplicate in ... Specimen " + count++);
  	 }
  	 try {
  		 specimenDao.create((Specimen)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Specimen : ../../fhir-data/examples-json/specimen-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/healthcareservice-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = HealthcareServiceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((HealthcareService)result).getId())) {
  		 duplicates.put(((HealthcareService)result).getId(), ((HealthcareService)result).getId());
  	 } else {
  		 ((HealthcareService)result).setId(((HealthcareService)result).getId() + count);
  		 duplicates.put(((HealthcareService)result).getId(), ((HealthcareService)result).getId());
  		 //System.out.println("Found duplicate in ... HealthcareService " + count++);
  	 }
  	 try {
  		 healthcareserviceDao.create((HealthcareService)result);
  	 } catch (Exception ex) { System.err.println("Cannot save HealthcareService : ../../fhir-data/examples-json/healthcareservice-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-conceptorder.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-conceptorder.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-route-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-route-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-claim-subtype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-claim-subtype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/audit-event-example-search.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AuditEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AuditEvent)result).getId())) {
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  	 } else {
  		 ((AuditEvent)result).setId(((AuditEvent)result).getId() + count);
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AuditEvent " + count++);
  	 }
  	 try {
  		 auditeventDao.create((AuditEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AuditEvent : ../../fhir-data/examples-json/audit-event-example-search.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-definition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-definition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-workflowstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-workflowstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-basedon.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-basedon.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-guidance-response-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-guidance-response-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-map-group-type-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-map-group-type-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-report-action-result-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-report-action-result-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticscopynumberevent.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticscopynumberevent.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-questionnaire-answers-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-questionnaire-answers-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-infuseover.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-infuseover.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-ad-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-ad-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-map-transform.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-map-transform.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-allergyintolerance-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-allergyintolerance-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-location-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-location-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consentdirective.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/consentdirective.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-c80-facilitycodes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-c80-facilitycodes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaireresponse-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaireresponse-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/auditevent.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/auditevent.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-conceptmap-translate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-conceptmap-translate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-dicom.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-dicom.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-condition-targetbodysite.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-condition-targetbodysite.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-measure-report-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-measure-report-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-list-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-list-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-product.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-product.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-measure-report-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-measure-report-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/communication.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/communication.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processrequest-example-poll-inclusive.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcessRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcessRequest)result).getId())) {
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  	 } else {
  		 ((ProcessRequest)result).setId(((ProcessRequest)result).getId() + count);
  		 duplicates.put(((ProcessRequest)result).getId(), ((ProcessRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcessRequest " + count++);
  	 }
  	 try {
  		 processrequestDao.create((ProcessRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcessRequest : ../../fhir-data/examples-json/processrequest-example-poll-inclusive.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-allergyintolerance-certainty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-allergyintolerance-certainty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequestexample1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequestexample1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/pcd-example-notLabs.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ContractHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Contract)result).getId())) {
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  	 } else {
  		 ((Contract)result).setId(((Contract)result).getId() + count);
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  		 //System.out.println("Found duplicate in ... Contract " + count++);
  	 }
  	 try {
  		 contractDao.create((Contract)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Contract : ../../fhir-data/examples-json/pcd-example-notLabs.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-minvalueset.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-minvalueset.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript-example-multisystem.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TestScriptHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((TestScript)result).getId())) {
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  	 } else {
  		 ((TestScript)result).setId(((TestScript)result).getId() + count);
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  		 //System.out.println("Found duplicate in ... TestScript " + count++);
  	 }
  	 try {
  		 testscriptDao.create((TestScript)result);
  	 } catch (Exception ex) { System.err.println("Cannot save TestScript : ../../fhir-data/examples-json/testscript-example-multisystem.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-package-form.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-package-form.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-days-of-week.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-days-of-week.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-admin-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-admin-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f001-glucose.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f001-glucose.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-f003-co2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-f003-co2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-hl7-work-group.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-hl7-work-group.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/elementdefinition-de.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/elementdefinition-de.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-address-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-address-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-event-timing.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-event-timing.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-reaction-event-severity.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-reaction-event-severity.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-texture-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-texture-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-observation-stats.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-observation-stats.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-hla-genotyping-results-glstring.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-hla-genotyping-results-glstring.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-item-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-item-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/adverseevent.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/adverseevent.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-fm-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-fm-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-consent-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-consent-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-document-reference-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-document-reference-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-event-timing.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-event-timing.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-metric-operational-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-metric-operational-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-allowedunits.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-allowedunits.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/testscript-example-history.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TestScriptHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((TestScript)result).getId())) {
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  	 } else {
  		 ((TestScript)result).setId(((TestScript)result).getId() + count);
  		 duplicates.put(((TestScript)result).getId(), ((TestScript)result).getId());
  		 //System.out.println("Found duplicate in ... TestScript " + count++);
  	 }
  	 try {
  		 testscriptDao.create((TestScript)result);
  	 } catch (Exception ex) { System.err.println("Cannot save TestScript : ../../fhir-data/examples-json/testscript-example-history.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-provider-qualification.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-provider-qualification.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/deviceusestatement.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/deviceusestatement.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunization-example-refused.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImmunizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Immunization)result).getId())) {
  		 duplicates.put(((Immunization)result).getId(), ((Immunization)result).getId());
  	 } else {
  		 ((Immunization)result).setId(((Immunization)result).getId() + count);
  		 duplicates.put(((Immunization)result).getId(), ((Immunization)result).getId());
  		 //System.out.println("Found duplicate in ... Immunization " + count++);
  	 }
  	 try {
  		 immunizationDao.create((Immunization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Immunization : ../../fhir-data/examples-json/immunization-example-refused.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0319.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0319.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-provenance-entity-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-provenance-entity-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-reason-medication-given-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-reason-medication-given-codes.json due to " + ex.getMessage()); }
  	System.out.println("Total tests .. " + count);
  }
  @Test
  public void test2480() throws Exception {
  	 inputFile = "../../fhir-data/examples-json/observation-example-vitals-panel.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-vitals-panel.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-ordinalvalue.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-ordinalvalue.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/activitydefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-mimetype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-mimetype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-admin-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-admin-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/slot-example-tentative.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SlotHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Slot)result).getId())) {
  		 duplicates.put(((Slot)result).getId(), ((Slot)result).getId());
  	 } else {
  		 ((Slot)result).setId(((Slot)result).getId() + count);
  		 duplicates.put(((Slot)result).getId(), ((Slot)result).getId());
  		 //System.out.println("Found duplicate in ... Slot " + count++);
  	 }
  	 try {
  		 slotDao.create((Slot)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Slot : ../../fhir-data/examples-json/slot-example-tentative.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-testscript-profile-destination-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-testscript-profile-destination-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0304.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0304.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-institutional-rich.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-institutional-rich.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-designation-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-designation-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-implant.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-implant.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/activitydefinition-order-serum-dengue-virus-igm.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ActivityDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ActivityDefinition)result).getId())) {
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  	 } else {
  		 ((ActivityDefinition)result).setId(((ActivityDefinition)result).getId() + count);
  		 duplicates.put(((ActivityDefinition)result).getId(), ((ActivityDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ActivityDefinition " + count++);
  	 }
  	 try {
  		 activitydefinitionDao.create((ActivityDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ActivityDefinition : ../../fhir-data/examples-json/activitydefinition-order-serum-dengue-virus-igm.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointment-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AppointmentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Appointment)result).getId())) {
  		 duplicates.put(((Appointment)result).getId(), ((Appointment)result).getId());
  	 } else {
  		 ((Appointment)result).setId(((Appointment)result).getId() + count);
  		 duplicates.put(((Appointment)result).getId(), ((Appointment)result).getId());
  		 //System.out.println("Found duplicate in ... Appointment " + count++);
  	 }
  	 try {
  		 appointmentDao.create((Appointment)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Appointment : ../../fhir-data/examples-json/appointment-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-operationoutcome-detectedissue.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-operationoutcome-detectedissue.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-narrative-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-narrative-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-remittance-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-remittance-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-vision-base-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-vision-base-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/capabilitystatement.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/datarequirement.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/datarequirement.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-statement-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-statement-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition-example2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConditionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Condition)result).getId())) {
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  	 } else {
  		 ((Condition)result).setId(((Condition)result).getId() + count);
  		 duplicates.put(((Condition)result).getId(), ((Condition)result).getId());
  		 //System.out.println("Found duplicate in ... Condition " + count++);
  	 }
  	 try {
  		 conditionDao.create((Condition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Condition : ../../fhir-data/examples-json/condition-example2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/nutritionorder-example-diabeticdiet.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = NutritionOrderHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((NutritionOrder)result).getId())) {
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  	 } else {
  		 ((NutritionOrder)result).setId(((NutritionOrder)result).getId() + count);
  		 duplicates.put(((NutritionOrder)result).getId(), ((NutritionOrder)result).getId());
  		 //System.out.println("Found duplicate in ... NutritionOrder " + count++);
  	 }
  	 try {
  		 nutritionorderDao.create((NutritionOrder)result);
  	 } catch (Exception ex) { System.err.println("Cannot save NutritionOrder : ../../fhir-data/examples-json/nutritionorder-example-diabeticdiet.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-subscription-tag.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-subscription-tag.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-administrative-gender-v2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-administrative-gender-v2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/binary-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/binary-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-encounter-primarydiagnosis.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-encounter-primarydiagnosis.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/condition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/condition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/documentmanifest-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DocumentManifestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DocumentManifest)result).getId())) {
  		 duplicates.put(((DocumentManifest)result).getId(), ((DocumentManifest)result).getId());
  	 } else {
  		 ((DocumentManifest)result).setId(((DocumentManifest)result).getId() + count);
  		 duplicates.put(((DocumentManifest)result).getId(), ((DocumentManifest)result).getId());
  		 //System.out.println("Found duplicate in ... DocumentManifest " + count++);
  	 }
  	 try {
  		 documentmanifestDao.create((DocumentManifest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DocumentManifest : ../../fhir-data/examples-json/documentmanifest-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-cadavericdonor.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-cadavericdonor.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/diagnosticreport.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-ex-program-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-ex-program-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-request-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-request-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-pharmacy-core-maxdeliveryrate.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-pharmacy-core-maxdeliveryrate.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-supplyrequest-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-supplyrequest-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-animal-species.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-animal-species.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0301.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0301.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/codesystem.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-process-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-process-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/familymemberhistory-example-mother.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FamilyMemberHistoryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FamilyMemberHistory)result).getId())) {
  		 duplicates.put(((FamilyMemberHistory)result).getId(), ((FamilyMemberHistory)result).getId());
  	 } else {
  		 ((FamilyMemberHistory)result).setId(((FamilyMemberHistory)result).getId() + count);
  		 duplicates.put(((FamilyMemberHistory)result).getId(), ((FamilyMemberHistory)result).getId());
  		 //System.out.println("Found duplicate in ... FamilyMemberHistory " + count++);
  	 }
  	 try {
  		 familymemberhistoryDao.create((FamilyMemberHistory)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FamilyMemberHistory : ../../fhir-data/examples-json/familymemberhistory-example-mother.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-report-status-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-report-status-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-di.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-di.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaireresponse-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/questionnaireresponse-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/contract-example-42cfr-part2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ContractHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Contract)result).getId())) {
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  	 } else {
  		 ((Contract)result).setId(((Contract)result).getId() + count);
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  		 //System.out.println("Found duplicate in ... Contract " + count++);
  	 }
  	 try {
  		 contractDao.create((Contract)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Contract : ../../fhir-data/examples-json/contract-example-42cfr-part2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-abstract-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-abstract-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cholesterol-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/cholesterol-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example-edu.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example-edu.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0307.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0307.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-resource-aggregation-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-resource-aggregation-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/explanationofbenefit-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/explanationofbenefit-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-marital-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-marital-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-concept-map-equivalence.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-concept-map-equivalence.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-ex-diagnosisrelatedgroup.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-ex-diagnosisrelatedgroup.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-service-provision-conditions.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-service-provision-conditions.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-reaction-event-certainty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-reaction-event-certainty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-name-use-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-name-use-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/composition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/composition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-bundle-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-bundle-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/task-example5.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TaskHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Task)result).getId())) {
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  	 } else {
  		 ((Task)result).setId(((Task)result).getId() + count);
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  		 //System.out.println("Found duplicate in ... Task " + count++);
  	 }
  	 try {
  		 taskDao.create((Task)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Task : ../../fhir-data/examples-json/task-example5.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/allergyintolerance-fishallergy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AllergyIntoleranceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AllergyIntolerance)result).getId())) {
  		 duplicates.put(((AllergyIntolerance)result).getId(), ((AllergyIntolerance)result).getId());
  	 } else {
  		 ((AllergyIntolerance)result).setId(((AllergyIntolerance)result).getId() + count);
  		 duplicates.put(((AllergyIntolerance)result).getId(), ((AllergyIntolerance)result).getId());
  		 //System.out.println("Found duplicate in ... AllergyIntolerance " + count++);
  	 }
  	 try {
  		 allergyintoleranceDao.create((AllergyIntolerance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AllergyIntolerance : ../../fhir-data/examples-json/allergyintolerance-fishallergy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/capabilitystatement-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-investigation-sets.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-investigation-sets.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaireresponse-reviewer.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaireresponse-reviewer.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-consent-except-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-consent-except-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/lipidprofile.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/lipidprofile.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-uncertainty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-uncertainty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-identifier-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-identifier-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-measure-report-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-measure-report-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/questionnaireresponse-example-bluebook.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((QuestionnaireResponse)result).getId())) {
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  	 } else {
  		 ((QuestionnaireResponse)result).setId(((QuestionnaireResponse)result).getId() + count);
  		 duplicates.put(((QuestionnaireResponse)result).getId(), ((QuestionnaireResponse)result).getId());
  		 //System.out.println("Found duplicate in ... QuestionnaireResponse " + count++);
  	 }
  	 try {
  		 questionnaireresponseDao.create((QuestionnaireResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save QuestionnaireResponse : ../../fhir-data/examples-json/questionnaireresponse-example-bluebook.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-document-reference-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-document-reference-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-report-participant-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-report-participant-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-deliverymode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-deliverymode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-supplyrequest-reason.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-supplyrequest-reason.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-measure-population.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-measure-population.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-participationstatus.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-participationstatus.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-allergy-intolerance-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-allergy-intolerance-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/quantity.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/quantity.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/ratio.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/ratio.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/schedule-provider-location1-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ScheduleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Schedule)result).getId())) {
  		 duplicates.put(((Schedule)result).getId(), ((Schedule)result).getId());
  	 } else {
  		 ((Schedule)result).setId(((Schedule)result).getId() + count);
  		 duplicates.put(((Schedule)result).getId(), ((Schedule)result).getId());
  		 //System.out.println("Found duplicate in ... Schedule " + count++);
  	 }
  	 try {
  		 scheduleDao.create((Schedule)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Schedule : ../../fhir-data/examples-json/schedule-provider-location1-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-medication-request-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-medication-request-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-abstract-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-abstract-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-consent-location.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-consent-location.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-activity-definition-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-activity-definition-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-search-entry-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-search-entry-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-repository-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-repository-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-f004-tracheotomy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-f004-tracheotomy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-parameter-group.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-parameter-group.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-testscript-profile-origin-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-testscript-profile-origin-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-immunization-site.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-immunization-site.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-implementationguide-page.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-implementationguide-page.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/messageheader.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/messageheader.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-operation-parameter-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-operation-parameter-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-provider-taxonomy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-provider-taxonomy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/substance-example-f203-potassium.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SubstanceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Substance)result).getId())) {
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  	 } else {
  		 ((Substance)result).setId(((Substance)result).getId() + count);
  		 duplicates.put(((Substance)result).getId(), ((Substance)result).getId());
  		 //System.out.println("Found duplicate in ... Substance " + count++);
  	 }
  	 try {
  		 substanceDao.create((Substance)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Substance : ../../fhir-data/examples-json/substance-example-f203-potassium.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-medication-admin-status-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-medication-admin-status-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-basetype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-basetype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-contact-point-system.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-contact-point-system.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-action.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-action.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-resource-meta-delete.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-resource-meta-delete.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-map-source-list-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-map-source-list-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-vision-glasses-3tier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-vision-glasses-3tier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0327.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0327.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/enrollmentresponse-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EnrollmentResponseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((EnrollmentResponse)result).getId())) {
  		 duplicates.put(((EnrollmentResponse)result).getId(), ((EnrollmentResponse)result).getId());
  	 } else {
  		 ((EnrollmentResponse)result).setId(((EnrollmentResponse)result).getId() + count);
  		 duplicates.put(((EnrollmentResponse)result).getId(), ((EnrollmentResponse)result).getId());
  		 //System.out.println("Found duplicate in ... EnrollmentResponse " + count++);
  	 }
  	 try {
  		 enrollmentresponseDao.create((EnrollmentResponse)result);
  	 } catch (Exception ex) { System.err.println("Cannot save EnrollmentResponse : ../../fhir-data/examples-json/enrollmentresponse-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-extensions-ValueSet-effective.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/valueset-extensions-ValueSet-effective.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0313.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0313.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-fhir-model-definition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-fhir-model-definition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-valueset-keyword.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-valueset-keyword.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example-f001-heart.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example-f001-heart.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-vision-eye-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-vision-eye-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-elementdefinition-inheritedextensiblevalueset.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-elementdefinition-inheritedextensiblevalueset.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-extensions-CodeSystem-effective.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/codesystem-extensions-CodeSystem-effective.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-payeetype.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-payeetype.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/paymentreconciliation-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/paymentreconciliation-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-measure-data-usage.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-measure-data-usage.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-allergyintolerance-substanceexposurerisk.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-allergyintolerance-substanceexposurerisk.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/chargeitem-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/chargeitem-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/contactdetail.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/contactdetail.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/appointmentresponse-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/appointmentresponse-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-request-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-request-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/processresponse.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/processresponse.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-openehr-exposuredescription.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-openehr-exposuredescription.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/specimen.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/specimen.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-name-use-v2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-name-use-v2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-benefit-subcategory.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-benefit-subcategory.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/compartmentdefinition.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/compartmentdefinition.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-base2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CapabilityStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CapabilityStatement)result).getId())) {
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  	 } else {
  		 ((CapabilityStatement)result).setId(((CapabilityStatement)result).getId() + count);
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  		 //System.out.println("Found duplicate in ... CapabilityStatement " + count++);
  	 }
  	 try {
  		 capabilitystatementDao.create((CapabilityStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CapabilityStatement : ../../fhir-data/examples-json/capabilitystatement-base2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-measurement-principle.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-measurement-principle.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-vaccination-protocol-dose-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-vaccination-protocol-dose-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-event-capability-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-event-capability-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-endpoint-payload-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-endpoint-payload-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-timing-daysofcycle.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-timing-daysofcycle.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bmi-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/bmi-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-diagnosticreport-geneticsassessedcondition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-diagnosticreport-geneticsassessedcondition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-classification-or-context.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-classification-or-context.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/device-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequestexample2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequestexample2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-provenance-activity-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-provenance-activity-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-oral-contained-identifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-oral-contained-identifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/encounter-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-questionnaire-item-control.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-questionnaire-item-control.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-medication-usualroute.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-medication-usualroute.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-flag-code.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-flag-code.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-fm-conditions.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-fm-conditions.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example-simple-empty.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example-simple-empty.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedure-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Procedure)result).getId())) {
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  	 } else {
  		 ((Procedure)result).setId(((Procedure)result).getId() + count);
  		 duplicates.put(((Procedure)result).getId(), ((Procedure)result).getId());
  		 //System.out.println("Found duplicate in ... Procedure " + count++);
  	 }
  	 try {
  		 procedureDao.create((Procedure)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Procedure : ../../fhir-data/examples-json/procedure-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0302.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0302.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bp-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/bp-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-medication-dispense-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-medication-dispense-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministrationexample3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministrationexample3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-contact-point-system-v2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-contact-point-system-v2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-questionnaire-answers.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-questionnaire-answers.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-supplyrequest-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-supplyrequest-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-professional.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-professional.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-contract-term-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-contract-term-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/plandefinition-exclusive-breastfeeding-intervention-03.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PlanDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((PlanDefinition)result).getId())) {
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  	 } else {
  		 ((PlanDefinition)result).setId(((PlanDefinition)result).getId() + count);
  		 duplicates.put(((PlanDefinition)result).getId(), ((PlanDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... PlanDefinition " + count++);
  	 }
  	 try {
  		 plandefinitionDao.create((PlanDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save PlanDefinition : ../../fhir-data/examples-json/plandefinition-exclusive-breastfeeding-intervention-03.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-history.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-history.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-map-input-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-map-input-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-diagnostic-report-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-diagnostic-report-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/immunization-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ImmunizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Immunization)result).getId())) {
  		 duplicates.put(((Immunization)result).getId(), ((Immunization)result).getId());
  	 } else {
  		 ((Immunization)result).setId(((Immunization)result).getId() + count);
  		 duplicates.put(((Immunization)result).getId(), ((Immunization)result).getId());
  		 //System.out.println("Found duplicate in ... Immunization " + count++);
  	 }
  	 try {
  		 immunizationDao.create((Immunization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Immunization : ../../fhir-data/examples-json/immunization-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-metric-color.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-metric-color.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-animal-breeds.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-animal-breeds.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-process-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-process-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/schedule-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ScheduleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Schedule)result).getId())) {
  		 duplicates.put(((Schedule)result).getId(), ((Schedule)result).getId());
  	 } else {
  		 ((Schedule)result).setId(((Schedule)result).getId() + count);
  		 duplicates.put(((Schedule)result).getId(), ((Schedule)result).getId());
  		 //System.out.println("Found duplicate in ... Schedule " + count++);
  	 }
  	 try {
  		 scheduleDao.create((Schedule)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Schedule : ../../fhir-data/examples-json/schedule-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/cm-administrative-gender-v3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/cm-administrative-gender-v3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-delta.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-delta.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-encounter-everything.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-encounter-everything.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-special-values.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-special-values.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/task-example3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TaskHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Task)result).getId())) {
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  	 } else {
  		 ((Task)result).setId(((Task)result).getId() + count);
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  		 //System.out.println("Found duplicate in ... Task " + count++);
  	 }
  	 try {
  		 taskDao.create((Task)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Task : ../../fhir-data/examples-json/task-example3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/triglyceride-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/triglyceride-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/domainresource.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/domainresource.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-benefit-network.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-benefit-network.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/dataelement.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/dataelement.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-snomedct.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-snomedct.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/servicedefinition-infobutton.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ServiceDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ServiceDefinition)result).getId())) {
  		 duplicates.put(((ServiceDefinition)result).getId(), ((ServiceDefinition)result).getId());
  	 } else {
  		 ((ServiceDefinition)result).setId(((ServiceDefinition)result).getId() + count);
  		 duplicates.put(((ServiceDefinition)result).getId(), ((ServiceDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... ServiceDefinition " + count++);
  	 }
  	 try {
  		 servicedefinitionDao.create((ServiceDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ServiceDefinition : ../../fhir-data/examples-json/servicedefinition-infobutton.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0312.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0312.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-observation-geneticsallelicfrequency.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-observation-geneticsallelicfrequency.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/detectedissue-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DetectedIssueHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DetectedIssue)result).getId())) {
  		 duplicates.put(((DetectedIssue)result).getId(), ((DetectedIssue)result).getId());
  	 } else {
  		 ((DetectedIssue)result).setId(((DetectedIssue)result).getId() + count);
  		 duplicates.put(((DetectedIssue)result).getId(), ((DetectedIssue)result).getId());
  		 //System.out.println("Found duplicate in ... DetectedIssue " + count++);
  	 }
  	 try {
  		 detectedissueDao.create((DetectedIssue)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DetectedIssue : ../../fhir-data/examples-json/detectedissue-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-process-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-process-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/supplydelivery-example-pumpdelivery.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SupplyDeliveryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SupplyDelivery)result).getId())) {
  		 duplicates.put(((SupplyDelivery)result).getId(), ((SupplyDelivery)result).getId());
  	 } else {
  		 ((SupplyDelivery)result).setId(((SupplyDelivery)result).getId() + count);
  		 duplicates.put(((SupplyDelivery)result).getId(), ((SupplyDelivery)result).getId());
  		 //System.out.println("Found duplicate in ... SupplyDelivery " + count++);
  	 }
  	 try {
  		 supplydeliveryDao.create((SupplyDelivery)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SupplyDelivery : ../../fhir-data/examples-json/supplydelivery-example-pumpdelivery.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/media.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/media.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-mbp.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-mbp.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-assert-operator-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-assert-operator-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-micro1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-micro1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-encounter-special-courtesy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-encounter-special-courtesy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-reason-medication-given-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-reason-medication-given-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/substance-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/substance-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/audit-event-example-login.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AuditEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AuditEvent)result).getId())) {
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  	 } else {
  		 ((AuditEvent)result).setId(((AuditEvent)result).getId() + count);
  		 duplicates.put(((AuditEvent)result).getId(), ((AuditEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AuditEvent " + count++);
  	 }
  	 try {
  		 auditeventDao.create((AuditEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AuditEvent : ../../fhir-data/examples-json/audit-event-example-login.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-observation-lastn.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-observation-lastn.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/flag-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FlagHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Flag)result).getId())) {
  		 duplicates.put(((Flag)result).getId(), ((Flag)result).getId());
  	 } else {
  		 ((Flag)result).setId(((Flag)result).getId() + count);
  		 duplicates.put(((Flag)result).getId(), ((Flag)result).getId());
  		 //System.out.println("Found duplicate in ... Flag " + count++);
  	 }
  	 try {
  		 flagDao.create((Flag)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Flag : ../../fhir-data/examples-json/flag-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-permitted-value-valueset.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-permitted-value-valueset.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/diagnosticreport-example-papsmear.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DiagnosticReportHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DiagnosticReport)result).getId())) {
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  	 } else {
  		 ((DiagnosticReport)result).setId(((DiagnosticReport)result).getId() + count);
  		 duplicates.put(((DiagnosticReport)result).getId(), ((DiagnosticReport)result).getId());
  		 //System.out.println("Found duplicate in ... DiagnosticReport " + count++);
  	 }
  	 try {
  		 diagnosticreportDao.create((DiagnosticReport)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DiagnosticReport : ../../fhir-data/examples-json/diagnosticreport-example-papsmear.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-body-site.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-body-site.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/shareablecodesystem.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/shareablecodesystem.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-audit-source-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-audit-source-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-structuredefinition-category.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-structuredefinition-category.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-versioning-policy.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-versioning-policy.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-vision-base-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-vision-base-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationrequest0318.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationRequest)result).getId())) {
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  	 } else {
  		 ((MedicationRequest)result).setId(((MedicationRequest)result).getId() + count);
  		 duplicates.put(((MedicationRequest)result).getId(), ((MedicationRequest)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationRequest " + count++);
  	 }
  	 try {
  		 medicationrequestDao.create((MedicationRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationRequest : ../../fhir-data/examples-json/medicationrequest0318.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-graph-compartment-rule.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-graph-compartment-rule.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/pcd-example-notOrg.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ContractHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Contract)result).getId())) {
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  	 } else {
  		 ((Contract)result).setId(((Contract)result).getId() + count);
  		 duplicates.put(((Contract)result).getId(), ((Contract)result).getId());
  		 //System.out.println("Found duplicate in ... Contract " + count++);
  	 }
  	 try {
  		 contractDao.create((Contract)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Contract : ../../fhir-data/examples-json/pcd-example-notOrg.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-related-claim-relationship.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-related-claim-relationship.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-referencefilter.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-referencefilter.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-communication-reasonnotperformed.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-communication-reasonnotperformed.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/task-example4.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = TaskHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Task)result).getId())) {
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  	 } else {
  		 ((Task)result).setId(((Task)result).getId() + count);
  		 duplicates.put(((Task)result).getId(), ((Task)result).getId());
  		 //System.out.println("Found duplicate in ... Task " + count++);
  	 }
  	 try {
  		 taskDao.create((Task)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Task : ../../fhir-data/examples-json/task-example4.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/triglyceride.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/triglyceride.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/organization.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-risk-probability.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-risk-probability.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/documentmanifest.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/documentmanifest.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-approach-site-codes.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-approach-site-codes.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-compartment-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-compartment-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/basic-example2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BasicHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Basic)result).getId())) {
  		 duplicates.put(((Basic)result).getId(), ((Basic)result).getId());
  	 } else {
  		 ((Basic)result).setId(((Basic)result).getId() + count);
  		 duplicates.put(((Basic)result).getId(), ((Basic)result).getId());
  		 //System.out.println("Found duplicate in ... Basic " + count++);
  	 }
  	 try {
  		 basicDao.create((Basic)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Basic : ../../fhir-data/examples-json/basic-example2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-data-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-data-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-birthplace.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-birthplace.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-chargeitem-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-chargeitem-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-security-labels.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-security-labels.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/procedurerequest-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-allowedresource.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-allowedresource.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/device-extensions-Device-din.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/device-extensions-Device-din.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-codesystem-othername.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-codesystem-othername.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/profiles-others.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = BundleHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Bundle)result).getId())) {
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  	 } else {
  		 ((Bundle)result).setId(((Bundle)result).getId() + count);
  		 duplicates.put(((Bundle)result).getId(), ((Bundle)result).getId());
  		 //System.out.println("Found duplicate in ... Bundle " + count++);
  	 }
  	 try {
  		 bundleDao.create((Bundle)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Bundle : ../../fhir-data/examples-json/profiles-others.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0312.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0312.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/organization-example-insurer.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OrganizationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Organization)result).getId())) {
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  	 } else {
  		 ((Organization)result).setId(((Organization)result).getId() + count);
  		 duplicates.put(((Organization)result).getId(), ((Organization)result).getId());
  		 //System.out.println("Found duplicate in ... Organization " + count++);
  	 }
  	 try {
  		 organizationDao.create((Organization)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Organization : ../../fhir-data/examples-json/organization-example-insurer.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-graphic-example-5.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-graphic-example-5.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/detectedissue-example-lab.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = DetectedIssueHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((DetectedIssue)result).getId())) {
  		 duplicates.put(((DetectedIssue)result).getId(), ((DetectedIssue)result).getId());
  	 } else {
  		 ((DetectedIssue)result).setId(((DetectedIssue)result).getId() + count);
  		 duplicates.put(((DetectedIssue)result).getId(), ((DetectedIssue)result).getId());
  		 //System.out.println("Found duplicate in ... DetectedIssue " + count++);
  	 }
  	 try {
  		 detectedissueDao.create((DetectedIssue)result);
  	 } catch (Exception ex) { System.err.println("Cannot save DetectedIssue : ../../fhir-data/examples-json/detectedissue-example-lab.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/list-example-familyhistory-genetics-profile-annie.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = FHIRListHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((FHIRList)result).getId())) {
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  	 } else {
  		 ((FHIRList)result).setId(((FHIRList)result).getId() + count);
  		 duplicates.put(((FHIRList)result).getId(), ((FHIRList)result).getId());
  		 //System.out.println("Found duplicate in ... FHIRList " + count++);
  	 }
  	 try {
  		 fhirlistDao.create((FHIRList)result);
  	 } catch (Exception ex) { System.err.println("Cannot save FHIRList : ../../fhir-data/examples-json/list-example-familyhistory-genetics-profile-annie.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-adxp-careof.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-adxp-careof.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-b.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-b.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-activitydefinition-data-requirements.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-activitydefinition-data-requirements.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/patient.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/conceptmap-example-2.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/conceptmap-example-2.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-extensions-ValueSet-keyword.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SearchParameterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((SearchParameter)result).getId())) {
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  	 } else {
  		 ((SearchParameter)result).setId(((SearchParameter)result).getId() + count);
  		 duplicates.put(((SearchParameter)result).getId(), ((SearchParameter)result).getId());
  		 //System.out.println("Found duplicate in ... SearchParameter " + count++);
  	 }
  	 try {
  		 searchparameterDao.create((SearchParameter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save SearchParameter : ../../fhir-data/examples-json/valueset-extensions-ValueSet-keyword.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-diagnosis-role.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-diagnosis-role.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-openehr-administration.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-openehr-administration.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-http-verb.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-http-verb.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/consent-example-smartonfhir.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConsentHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Consent)result).getId())) {
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  	 } else {
  		 ((Consent)result).setId(((Consent)result).getId() + count);
  		 duplicates.put(((Consent)result).getId(), ((Consent)result).getId());
  		 //System.out.println("Found duplicate in ... Consent " + count++);
  	 }
  	 try {
  		 consentDao.create((Consent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Consent : ../../fhir-data/examples-json/consent-example-smartonfhir.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample15.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample15.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-devicerequest-reasonrejected.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-devicerequest-reasonrejected.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationadministration0303.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationAdministrationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationAdministration)result).getId())) {
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  	 } else {
  		 ((MedicationAdministration)result).setId(((MedicationAdministration)result).getId() + count);
  		 duplicates.put(((MedicationAdministration)result).getId(), ((MedicationAdministration)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationAdministration " + count++);
  	 }
  	 try {
  		 medicationadministrationDao.create((MedicationAdministration)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationAdministration : ../../fhir-data/examples-json/medicationadministration0303.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample0309.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample0309.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-specimen-collection-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-specimen-collection-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-reference-version-rules.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-reference-version-rules.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-process-outcome.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-process-outcome.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/claim-example-vision-glasses.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ClaimHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Claim)result).getId())) {
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  	 } else {
  		 ((Claim)result).setId(((Claim)result).getId() + count);
  		 duplicates.put(((Claim)result).getId(), ((Claim)result).getId());
  		 //System.out.println("Found duplicate in ... Claim " + count++);
  	 }
  	 try {
  		 claimDao.create((Claim)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Claim : ../../fhir-data/examples-json/claim-example-vision-glasses.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-discriminator-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-discriminator-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/dataelement-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/dataelement-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/structuredefinition-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/structuredefinition-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-condition-state.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-condition-state.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/instant.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/instant.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/sequence-example-fda.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = SequenceHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Sequence)result).getId())) {
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  	 } else {
  		 ((Sequence)result).setId(((Sequence)result).getId() + count);
  		 duplicates.put(((Sequence)result).getId(), ((Sequence)result).getId());
  		 //System.out.println("Found duplicate in ... Sequence " + count++);
  	 }
  	 try {
  		 sequenceDao.create((Sequence)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Sequence : ../../fhir-data/examples-json/sequence-example-fda.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-benefit-term.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-benefit-term.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/patient-example-proband.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PatientHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Patient)result).getId())) {
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  	 } else {
  		 ((Patient)result).setId(((Patient)result).getId() + count);
  		 duplicates.put(((Patient)result).getId(), ((Patient)result).getId());
  		 //System.out.println("Found duplicate in ... Patient " + count++);
  	 }
  	 try {
  		 patientDao.create((Patient)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Patient : ../../fhir-data/examples-json/patient-example-proband.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/adverseevent-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = AdverseEventHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((AdverseEvent)result).getId())) {
  		 duplicates.put(((AdverseEvent)result).getId(), ((AdverseEvent)result).getId());
  	 } else {
  		 ((AdverseEvent)result).setId(((AdverseEvent)result).getId() + count);
  		 duplicates.put(((AdverseEvent)result).getId(), ((AdverseEvent)result).getId());
  		 //System.out.println("Found duplicate in ... AdverseEvent " + count++);
  	 }
  	 try {
  		 adverseeventDao.create((AdverseEvent)result);
  	 } catch (Exception ex) { System.err.println("Cannot save AdverseEvent : ../../fhir-data/examples-json/adverseevent-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-encounter-type.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-encounter-type.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/conceptmap-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ConceptMapHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ConceptMap)result).getId())) {
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  	 } else {
  		 ((ConceptMap)result).setId(((ConceptMap)result).getId() + count);
  		 duplicates.put(((ConceptMap)result).getId(), ((ConceptMap)result).getId());
  		 //System.out.println("Found duplicate in ... ConceptMap " + count++);
  	 }
  	 try {
  		 conceptmapDao.create((ConceptMap)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ConceptMap : ../../fhir-data/examples-json/conceptmap-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-iso21090-en-qualifier.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-iso21090-en-qualifier.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-patient-interpreterrequired.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-patient-interpreterrequired.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/procedurerequest-example3.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ProcedureRequestHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ProcedureRequest)result).getId())) {
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  	 } else {
  		 ((ProcedureRequest)result).setId(((ProcedureRequest)result).getId() + count);
  		 duplicates.put(((ProcedureRequest)result).getId(), ((ProcedureRequest)result).getId());
  		 //System.out.println("Found duplicate in ... ProcedureRequest " + count++);
  	 }
  	 try {
  		 procedurerequestDao.create((ProcedureRequest)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ProcedureRequest : ../../fhir-data/examples-json/procedurerequest-example3.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/observation-example-bmd.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ObservationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Observation)result).getId())) {
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  	 } else {
  		 ((Observation)result).setId(((Observation)result).getId() + count);
  		 duplicates.put(((Observation)result).getId(), ((Observation)result).getId());
  		 //System.out.println("Found duplicate in ... Observation " + count++);
  	 }
  	 try {
  		 observationDao.create((Observation)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Observation : ../../fhir-data/examples-json/observation-example-bmd.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-capability-statement-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-capability-statement-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-event-onbehalfof.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-event-onbehalfof.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-flag-priority.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-flag-priority.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/careplan-example-f002-lung.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CarePlanHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CarePlan)result).getId())) {
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  	 } else {
  		 ((CarePlan)result).setId(((CarePlan)result).getId() + count);
  		 duplicates.put(((CarePlan)result).getId(), ((CarePlan)result).getId());
  		 //System.out.println("Found duplicate in ... CarePlan " + count++);
  	 }
  	 try {
  		 careplanDao.create((CarePlan)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CarePlan : ../../fhir-data/examples-json/careplan-example-f002-lung.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-claim-use.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-claim-use.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-conformance-expectation.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-conformance-expectation.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-event-definition.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-event-definition.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-condition-ver-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-condition-ver-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-action-condition-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-action-condition-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/encounter-example-f002-lung.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = EncounterHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Encounter)result).getId())) {
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  	 } else {
  		 ((Encounter)result).setId(((Encounter)result).getId() + count);
  		 duplicates.put(((Encounter)result).getId(), ((Encounter)result).getId());
  		 //System.out.println("Found duplicate in ... Encounter " + count++);
  	 }
  	 try {
  		 encounterDao.create((Encounter)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Encounter : ../../fhir-data/examples-json/encounter-example-f002-lung.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-guide-page-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-guide-page-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-event-notdone.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-event-notdone.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-adverse-event-causality.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-adverse-event-causality.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationexample1.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Medication)result).getId())) {
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  	 } else {
  		 ((Medication)result).setId(((Medication)result).getId() + count);
  		 duplicates.put(((Medication)result).getId(), ((Medication)result).getId());
  		 //System.out.println("Found duplicate in ... Medication " + count++);
  	 }
  	 try {
  		 medicationDao.create((Medication)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Medication : ../../fhir-data/examples-json/medicationexample1.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/person.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/person.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-nhin-purposeofuse.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-nhin-purposeofuse.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/bundle-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/bundle-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-structure-definition-kind.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-structure-definition-kind.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/codesystem-common-tags.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CodeSystemHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CodeSystem)result).getId())) {
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  	 } else {
  		 ((CodeSystem)result).setId(((CodeSystem)result).getId() + count);
  		 duplicates.put(((CodeSystem)result).getId(), ((CodeSystem)result).getId());
  		 //System.out.println("Found duplicate in ... CodeSystem " + count++);
  	 }
  	 try {
  		 codesystemDao.create((CodeSystem)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CodeSystem : ../../fhir-data/examples-json/codesystem-common-tags.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-medicationstatement-prescriber.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-medicationstatement-prescriber.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operation-resource-meta.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = OperationDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((OperationDefinition)result).getId())) {
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  	 } else {
  		 ((OperationDefinition)result).setId(((OperationDefinition)result).getId() + count);
  		 duplicates.put(((OperationDefinition)result).getId(), ((OperationDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... OperationDefinition " + count++);
  	 }
  	 try {
  		 operationdefinitionDao.create((OperationDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save OperationDefinition : ../../fhir-data/examples-json/operation-resource-meta.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/library-predecessor-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = LibraryHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Library)result).getId())) {
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  	 } else {
  		 ((Library)result).setId(((Library)result).getId() + count);
  		 duplicates.put(((Library)result).getId(), ((Library)result).getId());
  		 //System.out.println("Found duplicate in ... Library " + count++);
  	 }
  	 try {
  		 libraryDao.create((Library)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Library : ../../fhir-data/examples-json/library-predecessor-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/practitioner-example-f201-ab.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = PractitionerHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Practitioner)result).getId())) {
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  	 } else {
  		 ((Practitioner)result).setId(((Practitioner)result).getId() + count);
  		 duplicates.put(((Practitioner)result).getId(), ((Practitioner)result).getId());
  		 //System.out.println("Found duplicate in ... Practitioner " + count++);
  	 }
  	 try {
  		 practitionerDao.create((Practitioner)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Practitioner : ../../fhir-data/examples-json/practitioner-example-f201-ab.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-11179-de-administrative-status.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-11179-de-administrative-status.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-testscript-profile-destination-types.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-testscript-profile-destination-types.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/valueset-restful-capability-mode.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = ValueSetHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((ValueSet)result).getId())) {
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  	 } else {
  		 ((ValueSet)result).setId(((ValueSet)result).getId() + count);
  		 duplicates.put(((ValueSet)result).getId(), ((ValueSet)result).getId());
  		 //System.out.println("Found duplicate in ... ValueSet " + count++);
  	 }
  	 try {
  		 valuesetDao.create((ValueSet)result);
  	 } catch (Exception ex) { System.err.println("Cannot save ValueSet : ../../fhir-data/examples-json/valueset-restful-capability-mode.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/devicemetric-questionnaire.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = QuestionnaireHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((Questionnaire)result).getId())) {
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  	 } else {
  		 ((Questionnaire)result).setId(((Questionnaire)result).getId() + count);
  		 duplicates.put(((Questionnaire)result).getId(), ((Questionnaire)result).getId());
  		 //System.out.println("Found duplicate in ... Questionnaire " + count++);
  	 }
  	 try {
  		 questionnaireDao.create((Questionnaire)result);
  	 } catch (Exception ex) { System.err.println("Cannot save Questionnaire : ../../fhir-data/examples-json/devicemetric-questionnaire.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/capabilitystatement-phr-example.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = CapabilityStatementHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((CapabilityStatement)result).getId())) {
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  	 } else {
  		 ((CapabilityStatement)result).setId(((CapabilityStatement)result).getId() + count);
  		 duplicates.put(((CapabilityStatement)result).getId(), ((CapabilityStatement)result).getId());
  		 //System.out.println("Found duplicate in ... CapabilityStatement " + count++);
  	 }
  	 try {
  		 capabilitystatementDao.create((CapabilityStatement)result);
  	 } catch (Exception ex) { System.err.println("Cannot save CapabilityStatement : ../../fhir-data/examples-json/capabilitystatement-phr-example.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-capabilitystatement-search-parameter-combination.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-capabilitystatement-search-parameter-combination.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/operationoutcome.profile.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/operationoutcome.profile.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/medicationdispense0317.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = MedicationDispenseHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((MedicationDispense)result).getId())) {
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  	 } else {
  		 ((MedicationDispense)result).setId(((MedicationDispense)result).getId() + count);
  		 duplicates.put(((MedicationDispense)result).getId(), ((MedicationDispense)result).getId());
  		 //System.out.println("Found duplicate in ... MedicationDispense " + count++);
  	 }
  	 try {
  		 medicationdispenseDao.create((MedicationDispense)result);
  	 } catch (Exception ex) { System.err.println("Cannot save MedicationDispense : ../../fhir-data/examples-json/medicationdispense0317.json due to " + ex.getMessage()); }

  	 inputFile = "../../fhir-data/examples-json/extension-questionnaire-supportlink.json";
  	 json = FileUtils.readFile2String(inputFile, Charset.defaultCharset());
  	 result = StructureDefinitionHelper.fromJson(json);
  	 count++;
  	 if (!duplicates.containsKey(((StructureDefinition)result).getId())) {
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  	 } else {
  		 ((StructureDefinition)result).setId(((StructureDefinition)result).getId() + count);
  		 duplicates.put(((StructureDefinition)result).getId(), ((StructureDefinition)result).getId());
  		 //System.out.println("Found duplicate in ... StructureDefinition " + count++);
  	 }
  	 try {
  		 structuredefinitionDao.create((StructureDefinition)result);
  	 } catch (Exception ex) { System.err.println("Cannot save StructureDefinition : ../../fhir-data/examples-json/extension-questionnaire-supportlink.json due to " + ex.getMessage()); }
  	System.out.println("Total tests .. " + count);
  }
}